{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chalk_1 = __importDefault(require(\"chalk\"));\n\nvar expo_pwa_1 = require(\"expo-pwa\");\n\nvar ModifyHtmlWebpackPlugin_1 = __importDefault(require(\"./ModifyHtmlWebpackPlugin\"));\n\nfunction logNotice(type, message) {\n  console.log(chalk_1.default.magenta(\"\\u203A \" + type + \": \" + chalk_1.default.gray(message)));\n}\n\nfunction logWarning(type, message) {\n  console.log(chalk_1.default.yellow(\"\\u203A \" + type + \": \" + chalk_1.default.gray(message)));\n}\n\nvar ApplePwaWebpackPlugin = function (_ModifyHtmlWebpackPlu) {\n  _inherits(ApplePwaWebpackPlugin, _ModifyHtmlWebpackPlu);\n\n  var _super = _createSuper(ApplePwaWebpackPlugin);\n\n  function ApplePwaWebpackPlugin(pwaOptions, meta, icon, startupImage) {\n    var _this;\n\n    _classCallCheck(this, ApplePwaWebpackPlugin);\n\n    _this = _super.call(this);\n    _this.pwaOptions = pwaOptions;\n    _this.meta = meta;\n    _this.icon = icon;\n    _this.startupImage = startupImage;\n    return _this;\n  }\n\n  _createClass(ApplePwaWebpackPlugin, [{\n    key: \"modifyAsync\",\n    value: function modifyAsync(compiler, compilation, data) {\n      var _this2 = this;\n\n      var _a, _b, hasMetaTagWithName, links, targetSizes, requiredSizes, _i, _targetSizes, size, sizes, iconAssets, _loop, _iterator, _step, asset, assets, _links, _loop2, _iterator2, _step2, _asset;\n\n      return _regeneratorRuntime.async(function modifyAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              hasMetaTagWithName = function hasMetaTagWithName(name) {\n                return _this2.pwaOptions.meta.some(function (v) {\n                  return v.name === name;\n                });\n              };\n\n              if (this.meta.isWebAppCapable) {\n                if (!hasMetaTagWithName('mobile-web-app-capable')) {\n                  data.assetTags.meta.push(metaTag('mobile-web-app-capable', 'yes'));\n                }\n\n                if (!hasMetaTagWithName('apple-mobile-web-app-capable')) {\n                  data.assetTags.meta.push(metaTag('apple-mobile-web-app-capable', 'yes'));\n                }\n              }\n\n              if (this.meta.isFullScreen && !hasMetaTagWithName('apple-touch-fullscreen')) {\n                data.assetTags.meta.push(metaTag('apple-touch-fullscreen', 'yes'));\n              }\n\n              if (this.meta.name && !hasMetaTagWithName('apple-mobile-web-app-title')) {\n                data.assetTags.meta.push(metaTag('apple-mobile-web-app-title', this.meta.name));\n              }\n\n              if (this.meta.barStyle && !hasMetaTagWithName('apple-mobile-web-app-status-bar-style')) {\n                data.assetTags.meta.push(metaTag('apple-mobile-web-app-status-bar-style', this.meta.barStyle));\n              }\n\n              if (!this.icon) {\n                _context.next = 17;\n                break;\n              }\n\n              links = this.pwaOptions.links.filter(function (v) {\n                return v.rel === 'apple-touch-icon';\n              }).map(function (v) {\n                return v.sizes;\n              });\n              targetSizes = [180];\n              requiredSizes = [];\n\n              for (_i = 0, _targetSizes = targetSizes; _i < _targetSizes.length; _i++) {\n                size = _targetSizes[_i];\n                sizes = size + \"x\" + size;\n\n                if (links.includes(sizes)) {\n                  logNotice('Safari Icons', \"Using custom <link rel=\\\"apple-touch-icon\\\" sizes=\\\"\" + sizes + \"\\\" .../>\");\n                } else {\n                  requiredSizes.push(size);\n                }\n              }\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(expo_pwa_1.generateAppleIconAsync(this.pwaOptions, this.icon, {\n                sizes: requiredSizes\n              }));\n\n            case 12:\n              iconAssets = _context.sent;\n\n              _loop = function _loop(asset) {\n                var size = (_a = asset.tag) === null || _a === void 0 ? void 0 : _a.attributes.sizes;\n\n                if (size && links.includes(size)) {\n                  logNotice('Safari Icons', \"Using custom <link rel=\\\"apple-touch-icon\\\" sizes=\\\"\" + size + \"\\\" .../>\");\n                } else {\n                  compilation.assets[asset.asset.path] = {\n                    source: function source() {\n                      return asset.asset.source;\n                    },\n                    size: function size() {\n                      return asset.asset.source.length;\n                    }\n                  };\n                  data.assetTags.meta.push(asset.tag);\n                }\n              };\n\n              for (_iterator = _createForOfIteratorHelperLoose(iconAssets); !(_step = _iterator()).done;) {\n                asset = _step.value;\n\n                _loop(asset);\n              }\n\n              _context.next = 18;\n              break;\n\n            case 17:\n              logWarning('Safari Icons', \"No template image found, skipping auto generation...\");\n\n            case 18:\n              if (!this.startupImage) {\n                _context.next = 27;\n                break;\n              }\n\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(expo_pwa_1.generateSplashAsync(this.pwaOptions, this.startupImage));\n\n            case 21:\n              assets = _context.sent;\n              _links = this.pwaOptions.links.filter(function (v) {\n                return v.rel === 'apple-touch-startup-image';\n              }).map(function (v) {\n                return v.media;\n              });\n\n              _loop2 = function _loop2(_asset) {\n                var media = (_b = _asset.tag) === null || _b === void 0 ? void 0 : _b.attributes.media;\n\n                if (media && _links.includes(media)) {\n                  logNotice('Safari Splash Screens', \"Using custom <link rel=\\\"apple-touch-startup-image\\\" media=\\\"\" + media + \"\\\" ... />\");\n                } else {\n                  compilation.assets[_asset.asset.path] = {\n                    source: function source() {\n                      return _asset.asset.source;\n                    },\n                    size: function size() {\n                      return _asset.asset.source.length;\n                    }\n                  };\n                  data.assetTags.meta.push(_asset.tag);\n                }\n              };\n\n              for (_iterator2 = _createForOfIteratorHelperLoose(assets); !(_step2 = _iterator2()).done;) {\n                _asset = _step2.value;\n\n                _loop2(_asset);\n              }\n\n              _context.next = 28;\n              break;\n\n            case 27:\n              logWarning('Safari Splash Screens', \"No template image found, skipping auto generation...\");\n\n            case 28:\n              return _context.abrupt(\"return\", data);\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return ApplePwaWebpackPlugin;\n}(ModifyHtmlWebpackPlugin_1.default);\n\nexports.default = ApplePwaWebpackPlugin;\n\nfunction metaTag(name, content) {\n  return {\n    tagName: 'meta',\n    voidTag: true,\n    attributes: {\n      name: name,\n      content: content\n    }\n  };\n}","map":{"version":3,"sources":["../../src/plugins/ApplePwaWebpackPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { generateAppleIconAsync, generateSplashAsync, IconOptions, ProjectOptions } from 'expo-pwa';\nimport { compilation as compilationNS, Compiler } from 'webpack';\n\nimport ModifyHtmlWebpackPlugin, { HTMLLinkNode, HTMLPluginData } from './ModifyHtmlWebpackPlugin';\n\nexport type ApplePwaMeta = {\n  name?: string;\n  barStyle?: string;\n  isWebAppCapable?: boolean;\n  isFullScreen?: boolean;\n};\n\nfunction logNotice(type: string, message: string) {\n  console.log(chalk.magenta(`\\u203A ${type}: ${chalk.gray(message)}`));\n}\nfunction logWarning(type: string, message: string) {\n  console.log(chalk.yellow(`\\u203A ${type}: ${chalk.gray(message)}`));\n}\nexport default class ApplePwaWebpackPlugin extends ModifyHtmlWebpackPlugin {\n  constructor(\n    private pwaOptions: ProjectOptions & { links: HTMLLinkNode[]; meta: HTMLLinkNode[] },\n    private meta: ApplePwaMeta,\n    private icon: IconOptions | null,\n    private startupImage: IconOptions | null\n  ) {\n    super();\n  }\n\n  async modifyAsync(\n    compiler: Compiler,\n    compilation: compilationNS.Compilation,\n    data: HTMLPluginData\n  ): Promise<HTMLPluginData> {\n    // Meta\n\n    const hasMetaTagWithName = (name: string): boolean => {\n      return this.pwaOptions.meta.some(v => v.name === name);\n    };\n\n    if (this.meta.isWebAppCapable) {\n      if (!hasMetaTagWithName('mobile-web-app-capable')) {\n        data.assetTags.meta.push(metaTag('mobile-web-app-capable', 'yes'));\n      }\n      if (!hasMetaTagWithName('apple-mobile-web-app-capable')) {\n        data.assetTags.meta.push(metaTag('apple-mobile-web-app-capable', 'yes'));\n      }\n    }\n    if (this.meta.isFullScreen && !hasMetaTagWithName('apple-touch-fullscreen')) {\n      data.assetTags.meta.push(metaTag('apple-touch-fullscreen', 'yes'));\n    }\n    if (this.meta.name && !hasMetaTagWithName('apple-mobile-web-app-title')) {\n      data.assetTags.meta.push(metaTag('apple-mobile-web-app-title', this.meta.name));\n    }\n    if (this.meta.barStyle && !hasMetaTagWithName('apple-mobile-web-app-status-bar-style')) {\n      data.assetTags.meta.push(\n        metaTag('apple-mobile-web-app-status-bar-style', this.meta.barStyle)\n      );\n    }\n\n    // App Icon\n    if (this.icon) {\n      const links: string[] = this.pwaOptions.links\n        .filter(v => v.rel === 'apple-touch-icon')\n        .map(v => v.sizes!);\n\n      const targetSizes = [180];\n      const requiredSizes: number[] = [];\n\n      for (const size of targetSizes) {\n        const sizes = `${size}x${size}`;\n        if (links.includes(sizes)) {\n          logNotice(\n            'Safari Icons',\n            `Using custom <link rel=\"apple-touch-icon\" sizes=\"${sizes}\" .../>`\n          );\n        } else {\n          requiredSizes.push(size);\n        }\n      }\n\n      const iconAssets = await generateAppleIconAsync(this.pwaOptions, this.icon, {\n        sizes: requiredSizes,\n      });\n\n      for (const asset of iconAssets) {\n        const size = asset.tag?.attributes.sizes;\n        if (size && links.includes(size)) {\n          logNotice(\n            'Safari Icons',\n            `Using custom <link rel=\"apple-touch-icon\" sizes=\"${size}\" .../>`\n          );\n        } else {\n          compilation.assets[asset.asset.path] = {\n            source: () => asset.asset.source,\n            size: () => asset.asset.source.length,\n          };\n          data.assetTags.meta.push(asset.tag);\n        }\n      }\n    } else {\n      logWarning('Safari Icons', `No template image found, skipping auto generation...`);\n    }\n\n    // Splash screens\n\n    if (this.startupImage) {\n      const assets = await generateSplashAsync(this.pwaOptions, this.startupImage);\n\n      const links: string[] = this.pwaOptions.links\n        .filter(v => v.rel === 'apple-touch-startup-image')\n        .map(v => v.media!);\n\n      for (const asset of assets) {\n        const media = asset.tag?.attributes.media;\n        if (media && links.includes(media)) {\n          logNotice(\n            'Safari Splash Screens',\n            `Using custom <link rel=\"apple-touch-startup-image\" media=\"${media}\" ... />`\n          );\n        } else {\n          compilation.assets[asset.asset.path] = {\n            source: () => asset.asset.source,\n            size: () => asset.asset.source.length,\n          };\n          data.assetTags.meta.push(asset.tag);\n        }\n      }\n    } else {\n      logWarning('Safari Splash Screens', `No template image found, skipping auto generation...`);\n    }\n    return data;\n  }\n}\n\nfunction metaTag(name: string, content: string): any {\n  return {\n    tagName: 'meta',\n    voidTag: true,\n    attributes: {\n      name,\n      content,\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}