{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chalk_1 = __importDefault(require(\"chalk\"));\n\nvar clean_webpack_plugin_1 = require(\"clean-webpack-plugin\");\n\nvar copy_webpack_plugin_1 = __importDefault(require(\"copy-webpack-plugin\"));\n\nvar expo_pwa_1 = require(\"expo-pwa\");\n\nvar fs_extra_1 = require(\"fs-extra\");\n\nvar getenv_1 = require(\"getenv\");\n\nvar mini_css_extract_plugin_1 = __importDefault(require(\"mini-css-extract-plugin\"));\n\nvar node_html_parser_1 = require(\"node-html-parser\");\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar pnp_webpack_plugin_1 = __importDefault(require(\"pnp-webpack-plugin\"));\n\nvar ModuleNotFoundPlugin_1 = __importDefault(require(\"react-dev-utils/ModuleNotFoundPlugin\"));\n\nvar WatchMissingNodeModulesPlugin_1 = __importDefault(require(\"react-dev-utils/WatchMissingNodeModulesPlugin\"));\n\nvar resolve_from_1 = __importDefault(require(\"resolve-from\"));\n\nvar webpack_1 = __importStar(require(\"webpack\"));\n\nvar webpack_manifest_plugin_1 = __importDefault(require(\"webpack-manifest-plugin\"));\n\nvar addons_1 = require(\"./addons\");\n\nvar env_1 = require(\"./env\");\n\nvar loaders_1 = require(\"./loaders\");\n\nvar plugins_1 = require(\"./plugins\");\n\nvar ExpoAppManifestWebpackPlugin_1 = __importDefault(require(\"./plugins/ExpoAppManifestWebpackPlugin\"));\n\nvar shouldUseSourceMap = getenv_1.boolish('GENERATE_SOURCEMAP', true);\nvar shouldUseNativeCodeLoading = getenv_1.boolish('EXPO_WEBPACK_USE_NATIVE_CODE_LOADING', false);\nvar isCI = getenv_1.boolish('CI', false);\n\nfunction getDevtool(_ref, _ref2) {\n  var production = _ref.production,\n      development = _ref.development;\n  var devtool = _ref2.devtool;\n\n  if (production) {\n    if (devtool !== undefined) {\n      return devtool;\n    }\n\n    return shouldUseSourceMap ? 'source-map' : false;\n  }\n\n  if (development) {\n    return 'cheap-module-source-map';\n  }\n\n  return false;\n}\n\nfunction getOutput(locations, mode, publicPath, platform) {\n  var commonOutput = {\n    publicPath: publicPath,\n    path: locations.production.folder,\n    globalObject: 'this'\n  };\n\n  if (mode === 'production') {\n    commonOutput.filename = 'static/js/[name].[contenthash:8].js';\n    commonOutput.chunkFilename = 'static/js/[name].[contenthash:8].chunk.js';\n\n    commonOutput.devtoolModuleFilenameTemplate = function (info) {\n      return path_1.default.relative(locations.root, info.absoluteResourcePath).replace(/\\\\/g, '/');\n    };\n  } else {\n    commonOutput.pathinfo = true;\n    commonOutput.filename = 'static/js/bundle.js';\n    commonOutput.chunkFilename = 'static/js/[name].chunk.js';\n\n    commonOutput.devtoolModuleFilenameTemplate = function (info) {\n      return path_1.default.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/');\n    };\n  }\n\n  if (!shouldUseNativeCodeLoading && isPlatformNative(platform)) {\n    commonOutput.filename = \"index.bundle\";\n\n    commonOutput.devtoolModuleFilenameTemplate = function (info) {\n      return info.resourcePath.replace(/\\\\/g, '/');\n    };\n  }\n\n  return commonOutput;\n}\n\nfunction isPlatformNative(platform) {\n  return ['ios', 'android'].includes(platform);\n}\n\nfunction getPlatformsExtensions(platform) {\n  if (isPlatformNative(platform)) {\n    return env_1.getNativeModuleFileExtensions(platform, 'native');\n  }\n\n  return env_1.getModuleFileExtensions(platform);\n}\n\nfunction default_1(env) {\n  var argv,\n      _a,\n      _b,\n      _c,\n      _d,\n      _e,\n      _f,\n      _g,\n      _h,\n      _j,\n      _k,\n      _l,\n      config,\n      mode,\n      isDev,\n      isProd,\n      isNative,\n      locations,\n      _env_1$getPublicPaths,\n      publicPath,\n      publicUrl,\n      _ref3,\n      _ref3$build,\n      buildConfig,\n      devtool,\n      appEntry,\n      webpackDevClientEntry,\n      getPolyfillsPath,\n      resizeObserverPolyfill,\n      generatePWAImageAssets,\n      filesToCopy,\n      templateIndex,\n      templateLinks,\n      links,\n      templateMeta,\n      meta,\n      _links$filter,\n      _links$filter2,\n      manifestLink,\n      templateManifest,\n      shouldInjectManifestTag,\n      ensureSourceAbsolute,\n      publicConfig,\n      webpackConfig,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function default_1$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          argv = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n          if ('report' in env) {\n            console.warn(chalk_1.default.bgRed.black(\"The `report` property of `@expo/webpack-config` is now deprecated.\\nhttps://expo.fyi/webpack-report-property-is-deprecated\"));\n          }\n\n          config = env_1.getConfig(env);\n          mode = env_1.getMode(env);\n          isDev = mode === 'development';\n          isProd = mode === 'production';\n          isNative = ['ios', 'android'].includes(env.platform);\n\n          if (isNative) {\n            env.pwa = false;\n          }\n\n          _context.t0 = env.locations;\n\n          if (_context.t0) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(env_1.getPathsAsync(env.projectRoot));\n\n        case 12:\n          _context.t0 = _context.sent;\n\n        case 13:\n          locations = _context.t0;\n          _env_1$getPublicPaths = env_1.getPublicPaths(env), publicPath = _env_1$getPublicPaths.publicPath, publicUrl = _env_1$getPublicPaths.publicUrl;\n          _ref3 = config.web || {}, _ref3$build = _ref3.build, buildConfig = _ref3$build === void 0 ? {} : _ref3$build;\n          devtool = getDevtool({\n            production: isProd,\n            development: isDev\n          }, buildConfig);\n          appEntry = [];\n\n          if (locations.appMain) {\n            appEntry.push(locations.appMain);\n          }\n\n          webpackDevClientEntry = require.resolve('react-dev-utils/webpackHotDevClient');\n\n          if (isNative) {\n            getPolyfillsPath = resolve_from_1.default.silent(env.projectRoot, 'react-native/rn-get-polyfills.js');\n\n            if (getPolyfillsPath) {\n              appEntry.unshift.apply(appEntry, _toConsumableArray(require(getPolyfillsPath)()).concat([resolve_from_1.default(env.projectRoot, 'react-native/Libraries/Core/InitializeCore')]));\n\n              if (isDev) {}\n            }\n          } else {\n            resizeObserverPolyfill = resolve_from_1.default.silent(env.projectRoot, 'resize-observer-polyfill/dist/ResizeObserver.global');\n\n            if (resizeObserverPolyfill) {\n              appEntry.unshift(resizeObserverPolyfill);\n            }\n\n            if (isDev) {\n              appEntry.unshift(webpackDevClientEntry);\n            }\n          }\n\n          generatePWAImageAssets = !isNative && !isDev;\n\n          if (!isDev && typeof env.pwa !== 'undefined') {\n            generatePWAImageAssets = env.pwa;\n          }\n\n          filesToCopy = [{\n            from: locations.template.folder,\n            to: locations.production.folder,\n            toType: 'dir',\n            noErrorOnMissing: true,\n            globOptions: {\n              dot: true,\n              ignore: ['**/icon.png']\n            }\n          }, {\n            from: locations.template.serveJson,\n            to: locations.production.serveJson\n          }];\n          templateIndex = node_html_parser_1.parse(fs_extra_1.readFileSync(locations.template.indexHtml, {\n            encoding: 'utf8'\n          }));\n          templateLinks = templateIndex.querySelectorAll('link');\n          links = templateLinks.map(function (value) {\n            return {\n              rel: value.getAttribute('rel'),\n              media: value.getAttribute('media'),\n              href: value.getAttribute('href'),\n              sizes: value.getAttribute('sizes'),\n              node: value\n            };\n          });\n          templateMeta = templateIndex.querySelectorAll('meta');\n          meta = templateMeta.map(function (value) {\n            return {\n              name: value.getAttribute('name'),\n              content: value.getAttribute('content'),\n              node: value\n            };\n          });\n          _links$filter = links.filter(function (link) {\n            return typeof link.rel === 'string' && link.rel.split(' ').includes('manifest');\n          }), _links$filter2 = _slicedToArray(_links$filter, 1), manifestLink = _links$filter2[0];\n          templateManifest = locations.template.manifest;\n          shouldInjectManifestTag = !manifestLink;\n\n          if (manifestLink === null || manifestLink === void 0 ? void 0 : manifestLink.href) {\n            if (manifestLink.href.startsWith('/')) {\n              manifestLink.href = manifestLink.href.substring(1);\n            }\n\n            templateManifest = locations.template.get(manifestLink.href);\n          }\n\n          ensureSourceAbsolute = function ensureSourceAbsolute(input) {\n            if (!input) return input;\n            return _objectSpread(_objectSpread({}, input), {}, {\n              src: locations.absolute(input.src)\n            });\n          };\n\n          publicConfig = _objectSpread(_objectSpread({}, config), {}, {\n            developer: {\n              tool: 'expo-cli',\n              projectRoot: env.projectRoot\n            },\n            packagerOpts: {\n              dev: !isProd,\n              minify: isProd,\n              https: env.https\n            }\n          });\n          webpackConfig = {\n            mode: mode,\n            entry: {\n              app: appEntry\n            },\n            stats: 'none',\n            bail: isProd,\n            devtool: devtool,\n            context: (_a = env.projectRoot) !== null && _a !== void 0 ? _a : __dirname,\n            output: getOutput(locations, mode, publicPath, env.platform),\n            plugins: [isProd && new clean_webpack_plugin_1.CleanWebpackPlugin({\n              cleanOnceBeforeBuildPatterns: [locations.production.folder],\n              dry: false,\n              verbose: false\n            }), isProd && !isNative && new copy_webpack_plugin_1.default({\n              patterns: filesToCopy\n            }), (!isNative || shouldUseNativeCodeLoading) && new plugins_1.ExpoHtmlWebpackPlugin(env, templateIndex), (!isNative || shouldUseNativeCodeLoading) && plugins_1.ExpoInterpolateHtmlPlugin.fromEnv(env, plugins_1.ExpoHtmlWebpackPlugin), isNative && new plugins_1.NativeAssetsPlugin({\n              platforms: [env.platform, 'native'],\n              persist: isProd,\n              assetExtensions: ['bmp', 'gif', 'jpg', 'jpeg', 'png', 'psd', 'svg', 'webp', 'm4v', 'mov', 'mp4', 'mpeg', 'mpg', 'webm', 'aac', 'aiff', 'caf', 'm4a', 'mp3', 'wav', 'html', 'pdf', 'yaml', 'yml', 'otf', 'ttf', 'zip']\n            }), isNative && new ExpoAppManifestWebpackPlugin_1.default({\n              template: locations.template.get('app.config.json'),\n              path: 'app.config.json',\n              publicPath: publicPath\n            }, publicConfig), env.pwa && new plugins_1.ExpoPwaManifestWebpackPlugin({\n              template: templateManifest,\n              path: 'manifest.json',\n              publicPath: publicPath,\n              inject: shouldInjectManifestTag\n            }, config), !isNative && new plugins_1.FaviconWebpackPlugin({\n              projectRoot: env.projectRoot,\n              publicPath: publicPath,\n              links: links\n            }, ensureSourceAbsolute(expo_pwa_1.getFaviconIconConfig(config))), generatePWAImageAssets && new plugins_1.ApplePwaWebpackPlugin({\n              projectRoot: env.projectRoot,\n              publicPath: publicPath,\n              links: links,\n              meta: meta\n            }, {\n              name: (_b = env.config.web) === null || _b === void 0 ? void 0 : _b.shortName,\n              isFullScreen: (_e = (_d = (_c = env.config.web) === null || _c === void 0 ? void 0 : _c.meta) === null || _d === void 0 ? void 0 : _d.apple) === null || _e === void 0 ? void 0 : _e.touchFullscreen,\n              isWebAppCapable: !!((_h = (_g = (_f = env.config.web) === null || _f === void 0 ? void 0 : _f.meta) === null || _g === void 0 ? void 0 : _g.apple) === null || _h === void 0 ? void 0 : _h.mobileWebAppCapable),\n              barStyle: (_l = (_k = (_j = env.config.web) === null || _j === void 0 ? void 0 : _j.meta) === null || _k === void 0 ? void 0 : _k.apple) === null || _l === void 0 ? void 0 : _l.barStyle\n            }, ensureSourceAbsolute(expo_pwa_1.getSafariIconConfig(env.config)), ensureSourceAbsolute(expo_pwa_1.getSafariStartupImageConfig(env.config))), generatePWAImageAssets && new plugins_1.ChromeIconsWebpackPlugin({\n              projectRoot: env.projectRoot,\n              publicPath: publicPath\n            }, ensureSourceAbsolute(expo_pwa_1.getChromeIconConfig(config))), new ModuleNotFoundPlugin_1.default(locations.root), new plugins_1.ExpoDefinePlugin({\n              mode: mode,\n              publicUrl: publicUrl,\n              config: config\n            }), isNative && new webpack_1.default.optimize.LimitChunkCountPlugin({\n              maxChunks: 1\n            }), !isNative && isDev && new webpack_1.HotModuleReplacementPlugin(), isNative && new webpack_1.default.NormalModuleReplacementPlugin(/react-native\\/Libraries\\/Utilities\\/HMRClient\\.js$/, require.resolve(\"./runtime/metro-runtime-shim\")), isDev && new WatchMissingNodeModulesPlugin_1.default(locations.modules), !isNative && isProd && new mini_css_extract_plugin_1.default({\n              filename: 'static/css/[name].[contenthash:8].css',\n              chunkFilename: 'static/css/[name].[contenthash:8].chunk.css'\n            }), !isNative && new webpack_manifest_plugin_1.default({\n              fileName: 'asset-manifest.json',\n              publicPath: publicPath,\n              filter: function filter(_ref4) {\n                var path = _ref4.path;\n\n                if (path.match(/(apple-touch-startup-image|apple-touch-icon|chrome-icon|precache-manifest)/)) {\n                  return false;\n                }\n\n                return !(path.endsWith('.gz') || path.endsWith('worker.js'));\n              },\n              generate: function generate(seed, files, entrypoints) {\n                var manifestFiles = files.reduce(function (manifest, file) {\n                  if (file.name) {\n                    manifest[file.name] = file.path;\n                  }\n\n                  return manifest;\n                }, seed);\n                var entrypointFiles = entrypoints.app.filter(function (fileName) {\n                  return !fileName.endsWith('.map');\n                });\n                return {\n                  files: manifestFiles,\n                  entrypoints: entrypointFiles\n                };\n              }\n            }), new plugins_1.ExpectedErrorsPlugin(), env.logger && new plugins_1.ExpoProgressBarPlugin({\n              logger: env.logger,\n              nonInteractive: isCI,\n              bundleDetails: {\n                bundleType: 'bundle',\n                platform: env.platform,\n                entryFile: locations.appMain,\n                dev: isDev !== null && isDev !== void 0 ? isDev : false,\n                minify: isProd !== null && isProd !== void 0 ? isProd : false\n              }\n            })].filter(Boolean),\n            module: {\n              strictExportPresence: false,\n              rules: [{\n                parser: {\n                  requireEnsure: false\n                }\n              }, {\n                oneOf: loaders_1.createAllLoaders(env)\n              }].filter(Boolean)\n            },\n            resolveLoader: {\n              plugins: [pnp_webpack_plugin_1.default.moduleLoader(module)]\n            },\n            resolve: {\n              mainFields: isNative ? ['react-native', 'browser', 'main'] : undefined,\n              aliasFields: isNative ? ['react-native', 'browser', 'main'] : undefined,\n              extensions: getPlatformsExtensions(env.platform),\n              plugins: [pnp_webpack_plugin_1.default],\n              symlinks: false\n            },\n            performance: isCI ? false : {\n              maxAssetSize: 600000,\n              maxEntrypointSize: 600000\n            }\n          };\n\n          if (!shouldUseNativeCodeLoading) {\n            webpackConfig = addons_1.withPlatformSourceMaps(webpackConfig, env);\n          }\n\n          if (isNative) {\n            webpackConfig.target = 'webworker';\n          }\n\n          if (isProd) {\n            webpackConfig = addons_1.withOptimizations(webpackConfig);\n          } else {\n            webpackConfig = addons_1.withDevServer(webpackConfig, env, {\n              allowedHost: argv.allowedHost,\n              proxy: argv.proxy\n            });\n          }\n\n          if (!isNative) {\n            webpackConfig = addons_1.withNodeMocks(addons_1.withAlias(webpackConfig, env_1.getAliases(env.projectRoot)));\n          }\n\n          return _context.abrupt(\"return\", webpackConfig);\n\n        case 41:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["../src/webpack.config.ts"],"names":[],"mappings":"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","sourcesContent":["/** @internal */ /** */\n/* eslint-env node */\nimport chalk from 'chalk';\nimport { CleanWebpackPlugin } from 'clean-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport {\n  getChromeIconConfig,\n  getFaviconIconConfig,\n  getSafariIconConfig,\n  getSafariStartupImageConfig,\n  IconOptions,\n} from 'expo-pwa';\nimport { readFileSync } from 'fs-extra';\nimport { boolish } from 'getenv';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport { parse } from 'node-html-parser';\nimport path from 'path';\nimport PnpWebpackPlugin from 'pnp-webpack-plugin';\nimport ModuleNotFoundPlugin from 'react-dev-utils/ModuleNotFoundPlugin';\nimport WatchMissingNodeModulesPlugin from 'react-dev-utils/WatchMissingNodeModulesPlugin';\nimport resolveFrom from 'resolve-from';\nimport webpack, { Configuration, HotModuleReplacementPlugin, Options, Output } from 'webpack';\nimport ManifestPlugin from 'webpack-manifest-plugin';\n\nimport {\n  withAlias,\n  withDevServer,\n  withNodeMocks,\n  withOptimizations,\n  withPlatformSourceMaps,\n} from './addons';\nimport {\n  getAliases,\n  getConfig,\n  getMode,\n  getModuleFileExtensions,\n  getNativeModuleFileExtensions,\n  getPathsAsync,\n  getPublicPaths,\n} from './env';\nimport { createAllLoaders } from './loaders';\nimport {\n  ApplePwaWebpackPlugin,\n  ChromeIconsWebpackPlugin,\n  ExpectedErrorsPlugin,\n  ExpoDefinePlugin,\n  ExpoHtmlWebpackPlugin,\n  ExpoInterpolateHtmlPlugin,\n  ExpoProgressBarPlugin,\n  ExpoPwaManifestWebpackPlugin,\n  FaviconWebpackPlugin,\n  NativeAssetsPlugin,\n} from './plugins';\nimport ExpoAppManifestWebpackPlugin from './plugins/ExpoAppManifestWebpackPlugin';\nimport { HTMLLinkNode } from './plugins/ModifyHtmlWebpackPlugin';\nimport { Arguments, DevConfiguration, Environment, FilePaths, Mode } from './types';\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = boolish('GENERATE_SOURCEMAP', true);\nconst shouldUseNativeCodeLoading = boolish('EXPO_WEBPACK_USE_NATIVE_CODE_LOADING', false);\n\nconst isCI = boolish('CI', false);\n\nfunction getDevtool(\n  { production, development }: { production: boolean; development: boolean },\n  { devtool }: { devtool?: Options.Devtool }\n): Options.Devtool {\n  if (production) {\n    // string or false\n    if (devtool !== undefined) {\n      // When big assets are involved sources maps can become expensive and cause your process to run out of memory.\n      return devtool;\n    }\n    return shouldUseSourceMap ? 'source-map' : false;\n  }\n  if (development) {\n    return 'cheap-module-source-map';\n  }\n  return false;\n}\n\nfunction getOutput(\n  locations: FilePaths,\n  mode: Mode,\n  publicPath: string,\n  platform: Environment['platform']\n): Output {\n  const commonOutput: Output = {\n    // We inferred the \"public path\" (such as / or /my-project) from homepage.\n    // We use \"/\" in development.\n    publicPath,\n    // Build folder (default `web-build`)\n    path: locations.production.folder,\n    // this defaults to 'window', but by setting it to 'this' then\n    // module chunks which are built will work in web workers as well.\n    globalObject: 'this',\n  };\n\n  if (mode === 'production') {\n    commonOutput.filename = 'static/js/[name].[contenthash:8].js';\n    // There are also additional JS chunk files if you use code splitting.\n    commonOutput.chunkFilename = 'static/js/[name].[contenthash:8].chunk.js';\n    // Point sourcemap entries to original disk location (format as URL on Windows)\n    commonOutput.devtoolModuleFilenameTemplate = (\n      info: webpack.DevtoolModuleFilenameTemplateInfo\n    ): string => path.relative(locations.root, info.absoluteResourcePath).replace(/\\\\/g, '/');\n  } else {\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    commonOutput.pathinfo = true;\n    // Give the output bundle a constant name to prevent caching.\n    // Also there are no actual files generated in dev.\n    commonOutput.filename = 'static/js/bundle.js';\n    // There are also additional JS chunk files if you use code splitting.\n    commonOutput.chunkFilename = 'static/js/[name].chunk.js';\n    // Point sourcemap entries to original disk location (format as URL on Windows)\n    commonOutput.devtoolModuleFilenameTemplate = (\n      info: webpack.DevtoolModuleFilenameTemplateInfo\n      // TODO: Revisit for web\n    ): string => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/');\n  }\n\n  if (!shouldUseNativeCodeLoading && isPlatformNative(platform)) {\n    // Give the output bundle a constant name to prevent caching.\n    // Also there are no actual files generated in dev.\n    commonOutput.filename = `index.bundle`;\n    // This works best for our custom native symbolication middleware\n    commonOutput.devtoolModuleFilenameTemplate = (\n      info: webpack.DevtoolModuleFilenameTemplateInfo\n    ): string => info.resourcePath.replace(/\\\\/g, '/');\n  }\n\n  return commonOutput;\n}\n\nfunction isPlatformNative(platform: string): boolean {\n  return ['ios', 'android'].includes(platform);\n}\n\nfunction getPlatformsExtensions(platform: string): string[] {\n  if (isPlatformNative(platform)) {\n    return getNativeModuleFileExtensions(platform, 'native');\n  }\n  return getModuleFileExtensions(platform);\n}\n\nexport default async function (\n  env: Environment,\n  argv: Arguments = {}\n): Promise<Configuration | DevConfiguration> {\n  if ('report' in env) {\n    console.warn(\n      chalk.bgRed.black(\n        `The \\`report\\` property of \\`@expo/webpack-config\\` is now deprecated.\\nhttps://expo.fyi/webpack-report-property-is-deprecated`\n      )\n    );\n  }\n  const config = getConfig(env);\n  const mode = getMode(env);\n  const isDev = mode === 'development';\n  const isProd = mode === 'production';\n\n  // Because the native React runtime is different to the browser we need to make\n  // some core modifications to webpack.\n  const isNative = ['ios', 'android'].includes(env.platform);\n\n  if (isNative) {\n    env.pwa = false;\n  }\n\n  const locations = env.locations || (await getPathsAsync(env.projectRoot));\n\n  const { publicPath, publicUrl } = getPublicPaths(env);\n\n  const { build: buildConfig = {} } = config.web || {};\n\n  const devtool = getDevtool(\n    { production: isProd, development: isDev },\n    buildConfig as {\n      devtool: Options.Devtool;\n    }\n  );\n\n  const appEntry: string[] = [];\n\n  // In solutions like Gatsby the main entry point doesn't need to be known.\n  if (locations.appMain) {\n    appEntry.push(locations.appMain);\n  }\n  const webpackDevClientEntry = require.resolve('react-dev-utils/webpackHotDevClient');\n\n  if (isNative) {\n    const getPolyfillsPath = resolveFrom.silent(\n      env.projectRoot,\n      'react-native/rn-get-polyfills.js'\n    );\n\n    if (getPolyfillsPath) {\n      appEntry.unshift(\n        ...require(getPolyfillsPath)(),\n        resolveFrom(env.projectRoot, 'react-native/Libraries/Core/InitializeCore')\n      );\n      if (isDev) {\n        // TODO: Native HMR\n      }\n    }\n  } else {\n    // Add a loose requirement on the ResizeObserver polyfill if it's installed...\n    // Avoid `withEntry` as we don't need so much complexity with this config.\n    const resizeObserverPolyfill = resolveFrom.silent(\n      env.projectRoot,\n      'resize-observer-polyfill/dist/ResizeObserver.global'\n    );\n    if (resizeObserverPolyfill) {\n      appEntry.unshift(resizeObserverPolyfill);\n    }\n\n    if (isDev) {\n      // https://github.com/facebook/create-react-app/blob/e59e0920f3bef0c2ac47bbf6b4ff3092c8ff08fb/packages/react-scripts/config/webpack.config.js#L144\n      // Include an alternative client for WebpackDevServer. A client's job is to\n      // connect to WebpackDevServer by a socket and get notified about changes.\n      // When you save a file, the client will either apply hot updates (in case\n      // of CSS changes), or refresh the page (in case of JS changes). When you\n      // make a syntax error, this client will display a syntax error overlay.\n      // Note: instead of the default WebpackDevServer client, we use a custom one\n      // to bring better experience for Create React App users. You can replace\n      // the line below with these two lines if you prefer the stock client:\n      // require.resolve('webpack-dev-server/client') + '?/',\n      // require.resolve('webpack/hot/dev-server'),\n      appEntry.unshift(webpackDevClientEntry);\n    }\n  }\n\n  let generatePWAImageAssets: boolean = !isNative && !isDev;\n  if (!isDev && typeof env.pwa !== 'undefined') {\n    generatePWAImageAssets = env.pwa;\n  }\n\n  const filesToCopy: any[] = [\n    {\n      from: locations.template.folder,\n      to: locations.production.folder,\n      toType: 'dir',\n      noErrorOnMissing: true,\n      globOptions: {\n        dot: true,\n        // We generate new versions of these based on the templates\n        ignore: [\n          // '**/serve.json',\n          // '**/index.html',\n          '**/icon.png',\n        ],\n      },\n    },\n    {\n      from: locations.template.serveJson,\n      to: locations.production.serveJson,\n    },\n  ];\n\n  const templateIndex = parse(readFileSync(locations.template.indexHtml, { encoding: 'utf8' }));\n\n  // @ts-ignore\n  const templateLinks = templateIndex.querySelectorAll('link');\n  const links: HTMLLinkNode[] = templateLinks.map((value: any) => ({\n    rel: value.getAttribute('rel'),\n    media: value.getAttribute('media'),\n    href: value.getAttribute('href'),\n    sizes: value.getAttribute('sizes'),\n    node: value,\n  }));\n  // @ts-ignore\n  const templateMeta = templateIndex.querySelectorAll('meta');\n  const meta: HTMLLinkNode[] = templateMeta.map((value: any) => ({\n    name: value.getAttribute('name'),\n    content: value.getAttribute('content'),\n    node: value,\n  }));\n\n  const [manifestLink] = links.filter(\n    link => typeof link.rel === 'string' && link.rel.split(' ').includes('manifest')\n  );\n  let templateManifest = locations.template.manifest;\n  // Only inject a manifest tag if the template is missing one.\n  // This enables users to disable tag injection.\n  const shouldInjectManifestTag = !manifestLink;\n  if (manifestLink?.href) {\n    // Often the manifest will be referenced as `/manifest.json` (to support public paths).\n    // We've detected that the user has manually added a manifest tag to their template index.html which according\n    // to our docs means they want to use a custom manifest.json instead of having a new one generated.\n    //\n    // Normalize the link (removing the beginning slash) so it can be resolved relative to the user's static folder.\n    // Ref: https://docs.expo.dev/guides/progressive-web-apps/#manual-setup\n    if (manifestLink.href.startsWith('/')) {\n      manifestLink.href = manifestLink.href.substring(1);\n    }\n    templateManifest = locations.template.get(manifestLink.href);\n  }\n\n  const ensureSourceAbsolute = (input: IconOptions | null): IconOptions | null => {\n    if (!input) return input;\n    return {\n      ...input,\n      src: locations.absolute(input.src),\n    };\n  };\n\n  // TODO(Bacon): Move to expo/config - manifest code from XDL Project\n  const publicConfig = {\n    ...config,\n    developer: {\n      tool: 'expo-cli',\n      projectRoot: env.projectRoot,\n    },\n    packagerOpts: {\n      dev: !isProd,\n      minify: isProd,\n      https: env.https,\n    },\n  };\n\n  let webpackConfig: DevConfiguration = {\n    mode,\n    entry: {\n      app: appEntry,\n    },\n    // Disable file info logs.\n    stats: 'none',\n\n    // https://webpack.js.org/configuration/other-options/#bail\n    // Fail out on the first error instead of tolerating it.\n    bail: isProd,\n    devtool,\n    // This must point to the project root (where the webpack.config.js would normally be located).\n    // If this is anywhere else, the source maps and errors won't show correct paths.\n    context: env.projectRoot ?? __dirname,\n    // configures where the build ends up\n    output: getOutput(locations, mode, publicPath, env.platform),\n    plugins: [\n      // Delete the build folder\n      isProd &&\n        new CleanWebpackPlugin({\n          cleanOnceBeforeBuildPatterns: [locations.production.folder],\n          dry: false,\n          verbose: false,\n        }),\n      // Copy the template files over\n      isProd && !isNative && new CopyWebpackPlugin({ patterns: filesToCopy }),\n\n      // Generate the `index.html`\n      (!isNative || shouldUseNativeCodeLoading) && new ExpoHtmlWebpackPlugin(env, templateIndex),\n\n      (!isNative || shouldUseNativeCodeLoading) &&\n        ExpoInterpolateHtmlPlugin.fromEnv(env, ExpoHtmlWebpackPlugin),\n\n      isNative &&\n        new NativeAssetsPlugin({\n          platforms: [env.platform, 'native'],\n          persist: isProd,\n          assetExtensions: [\n            // Image formats\n            'bmp',\n            'gif',\n            'jpg',\n            'jpeg',\n            'png',\n            'psd',\n            'svg',\n            'webp',\n            // Video formats\n            'm4v',\n            'mov',\n            'mp4',\n            'mpeg',\n            'mpg',\n            'webm',\n            // Audio formats\n            'aac',\n            'aiff',\n            'caf',\n            'm4a',\n            'mp3',\n            'wav',\n            // Document formats\n            'html',\n            'pdf',\n            'yaml',\n            'yml',\n            // Font formats\n            'otf',\n            'ttf',\n            // Archives (virtual files)\n            'zip',\n          ],\n        }),\n\n      isNative &&\n        new ExpoAppManifestWebpackPlugin(\n          {\n            template: locations.template.get('app.config.json'),\n            path: 'app.config.json',\n            publicPath,\n          },\n          publicConfig\n        ),\n\n      env.pwa &&\n        new ExpoPwaManifestWebpackPlugin(\n          {\n            template: templateManifest,\n            path: 'manifest.json',\n            publicPath,\n            inject: shouldInjectManifestTag,\n          },\n          config\n        ),\n      !isNative &&\n        new FaviconWebpackPlugin(\n          {\n            projectRoot: env.projectRoot,\n            publicPath,\n            links,\n          },\n          ensureSourceAbsolute(getFaviconIconConfig(config))\n        ),\n      generatePWAImageAssets &&\n        new ApplePwaWebpackPlugin(\n          {\n            projectRoot: env.projectRoot,\n            publicPath,\n            links,\n            meta,\n          },\n          {\n            name: env.config.web?.shortName,\n            isFullScreen: env.config.web?.meta?.apple?.touchFullscreen,\n            isWebAppCapable: !!env.config.web?.meta?.apple?.mobileWebAppCapable,\n            barStyle: env.config.web?.meta?.apple?.barStyle,\n          },\n          ensureSourceAbsolute(getSafariIconConfig(env.config)),\n          ensureSourceAbsolute(getSafariStartupImageConfig(env.config))\n        ),\n      generatePWAImageAssets &&\n        new ChromeIconsWebpackPlugin(\n          {\n            projectRoot: env.projectRoot,\n            publicPath,\n          },\n          ensureSourceAbsolute(getChromeIconConfig(config))\n        ),\n\n      // This gives some necessary context to module not found errors, such as\n      // the requesting resource.\n      new ModuleNotFoundPlugin(locations.root),\n\n      new ExpoDefinePlugin({\n        mode,\n        publicUrl,\n        config,\n      }),\n\n      // Disable chunking on native\n      // https://gist.github.com/glennreyes/f538a369db0c449b681e86ef7f86a254#file-razzle-config-js\n      isNative &&\n        new webpack.optimize.LimitChunkCountPlugin({\n          maxChunks: 1,\n        }),\n\n      // This is necessary to emit hot updates (currently CSS only):\n      !isNative && isDev && new HotModuleReplacementPlugin(),\n\n      // Replace the Metro specific HMR code in `react-native` with\n      // a shim.\n      isNative &&\n        new webpack.NormalModuleReplacementPlugin(\n          /react-native\\/Libraries\\/Utilities\\/HMRClient\\.js$/,\n          require.resolve('./runtime/metro-runtime-shim')\n        ),\n\n      // If you require a missing module and then `npm install` it, you still have\n      // to restart the development server for Webpack to discover it. This plugin\n      // makes the discovery automatic so you don't have to restart.\n      // See https://github.com/facebook/create-react-app/issues/186\n      isDev && new WatchMissingNodeModulesPlugin(locations.modules),\n\n      !isNative &&\n        isProd &&\n        new MiniCssExtractPlugin({\n          // Options similar to the same options in webpackOptions.output\n          // both options are optional\n          filename: 'static/css/[name].[contenthash:8].css',\n          chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n        }),\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      // - \"entrypoints\" key: Array of files which are included in `index.html`,\n      //   can be used to reconstruct the HTML if necessary\n      !isNative &&\n        new ManifestPlugin({\n          fileName: 'asset-manifest.json',\n          publicPath,\n          filter: ({ path }) => {\n            if (\n              path.match(\n                /(apple-touch-startup-image|apple-touch-icon|chrome-icon|precache-manifest)/\n              )\n            ) {\n              return false;\n            }\n            // Remove compressed versions and service workers\n            return !(path.endsWith('.gz') || path.endsWith('worker.js'));\n          },\n          generate: (seed: Record<string, any>, files, entrypoints) => {\n            const manifestFiles = files.reduce<Record<string, string>>((manifest, file) => {\n              if (file.name) {\n                manifest[file.name] = file.path;\n              }\n              return manifest;\n            }, seed);\n            const entrypointFiles = entrypoints.app.filter(fileName => !fileName.endsWith('.map'));\n\n            return {\n              files: manifestFiles,\n              entrypoints: entrypointFiles,\n            };\n          },\n        }),\n\n      new ExpectedErrorsPlugin(),\n      // Skip using a progress bar in CI\n      env.logger &&\n        new ExpoProgressBarPlugin({\n          logger: env.logger,\n          nonInteractive: isCI,\n          bundleDetails: {\n            bundleType: 'bundle',\n            platform: env.platform,\n            entryFile: locations.appMain,\n            dev: isDev ?? false,\n            minify: isProd ?? false,\n          },\n        }),\n    ].filter(Boolean),\n    module: {\n      strictExportPresence: false,\n      rules: [\n        // Disable require.ensure because it breaks tree shaking.\n        { parser: { requireEnsure: false } },\n        {\n          oneOf: createAllLoaders(env),\n        },\n      ].filter(Boolean),\n    },\n    resolveLoader: {\n      plugins: [\n        // Also related to Plug'n'Play, but this time it tells Webpack to load its loaders\n        // from the current package.\n        PnpWebpackPlugin.moduleLoader(module),\n      ],\n    },\n    resolve: {\n      mainFields: isNative ? ['react-native', 'browser', 'main'] : undefined,\n      aliasFields: isNative ? ['react-native', 'browser', 'main'] : undefined,\n      extensions: getPlatformsExtensions(env.platform),\n      plugins: [\n        // Adds support for installing with Plug'n'Play, leading to faster installs and adding\n        // guards against forgotten dependencies and such.\n        PnpWebpackPlugin,\n      ],\n      symlinks: false,\n    },\n    // Turn off performance processing because we utilize\n    // our own (CRA) hints via the FileSizeReporter\n\n    // TODO: Bacon: Remove this higher value\n    performance: isCI ? false : { maxAssetSize: 600000, maxEntrypointSize: 600000 },\n  };\n\n  if (!shouldUseNativeCodeLoading) {\n    webpackConfig = withPlatformSourceMaps(webpackConfig, env);\n  }\n\n  if (isNative) {\n    // https://github.com/webpack/webpack/blob/f06086c53b2277e421604c5cea6f32f5c5b6d117/declarations/WebpackOptions.d.ts#L504-L518\n    webpackConfig.target = 'webworker';\n  }\n\n  if (isProd) {\n    webpackConfig = withOptimizations(webpackConfig);\n  } else {\n    webpackConfig = withDevServer(webpackConfig, env, {\n      allowedHost: argv.allowedHost,\n      proxy: argv.proxy,\n    });\n  }\n\n  if (!isNative) {\n    webpackConfig = withNodeMocks(withAlias(webpackConfig, getAliases(env.projectRoot)));\n  }\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}