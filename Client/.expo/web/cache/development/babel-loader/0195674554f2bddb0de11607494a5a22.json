{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createClientEnvironment = void 0;\n\nvar getenv_1 = require(\"getenv\");\n\nvar semver_1 = __importDefault(require(\"semver\"));\n\nvar webpack_1 = require(\"webpack\");\n\nvar env_1 = require(\"../env\");\n\nvar RESTRICTED_MANIFEST_FIELDS = ['facebookScheme', 'facebookAppId', 'facebookDisplayName', 'ios', 'android', 'plugins', 'hooks', '_internal', 'assetBundlePatterns'];\n\nfunction createEnvironmentConstants(appManifest) {\n  var _a;\n\n  var publicManifest = _objectSpread(_objectSpread({}, appManifest), {}, {\n    name: appManifest.displayName || appManifest.name,\n    web: {\n      config: (_a = appManifest.web) === null || _a === void 0 ? void 0 : _a.config\n    }\n  });\n\n  for (var _iterator = _createForOfIteratorHelperLoose(RESTRICTED_MANIFEST_FIELDS), _step; !(_step = _iterator()).done;) {\n    var field = _step.value;\n    delete publicManifest[field];\n  }\n\n  return publicManifest;\n}\n\nfunction createClientEnvironment(mode, publicPath, nativeAppManifest) {\n  var _Object$keys$filter$r;\n\n  var environment = env_1.getMode({\n    mode: mode\n  });\n\n  var __DEV__ = environment !== 'production';\n\n  var isEnvBindingSupported = lteSdkVersion(nativeAppManifest, '40.0.0');\n  var ENV_VAR_REGEX = isEnvBindingSupported ? /^(EXPO_|REACT_NATIVE_|CI$)/i : /^(CI$)/i;\n  var SECRET_REGEX = /(PASSWORD|SECRET|TOKEN)/i;\n  var shouldDefineKeys = getenv_1.boolish('EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS', false);\n  var prefix = shouldDefineKeys ? 'process.env.' : '';\n  var processEnv = Object.keys(process.env).filter(function (key) {\n    return ENV_VAR_REGEX.test(key) && !SECRET_REGEX.test(key);\n  }).reduce(function (env, key) {\n    env[\"\" + prefix + key] = JSON.stringify(process.env[key]);\n    return env;\n  }, (_Object$keys$filter$r = {}, _defineProperty(_Object$keys$filter$r, prefix + \"NODE_ENV\", JSON.stringify(environment)), _defineProperty(_Object$keys$filter$r, prefix + \"PUBLIC_URL\", JSON.stringify(publicPath)), _defineProperty(_Object$keys$filter$r, prefix + \"APP_MANIFEST\", JSON.stringify(nativeAppManifest)), _Object$keys$filter$r));\n\n  if (shouldDefineKeys) {\n    return _objectSpread(_objectSpread({}, processEnv), {}, {\n      __DEV__: __DEV__\n    });\n  }\n\n  return {\n    'process.env': processEnv,\n    __DEV__: __DEV__\n  };\n}\n\nexports.createClientEnvironment = createClientEnvironment;\n\nvar DefinePlugin = function (_webpack_1$DefinePlug) {\n  _inherits(DefinePlugin, _webpack_1$DefinePlug);\n\n  var _super = _createSuper(DefinePlugin);\n\n  function DefinePlugin(_ref) {\n    var mode = _ref.mode,\n        publicUrl = _ref.publicUrl,\n        config = _ref.config;\n\n    _classCallCheck(this, DefinePlugin);\n\n    var publicAppManifest = createEnvironmentConstants(config);\n    var environmentVariables = createClientEnvironment(mode, publicUrl, publicAppManifest);\n    return _super.call(this, environmentVariables);\n  }\n\n  return _createClass(DefinePlugin);\n}(webpack_1.DefinePlugin);\n\nexports.default = DefinePlugin;\nDefinePlugin.createClientEnvironment = createClientEnvironment;\n\nDefinePlugin.fromEnv = function (env) {\n  var mode = env_1.getMode(env);\n\n  var _env_1$getPublicPaths = env_1.getPublicPaths(env),\n      publicUrl = _env_1$getPublicPaths.publicUrl;\n\n  var config = env.config || env_1.getConfig(env);\n  return new DefinePlugin({\n    mode: mode,\n    publicUrl: publicUrl,\n    config: config\n  });\n};\n\nfunction lteSdkVersion(exp, sdkVersion) {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n\n  try {\n    return semver_1.default.lte(exp.sdkVersion, sdkVersion);\n  } catch (e) {\n    return false;\n  }\n}","map":{"version":3,"sources":["../../src/plugins/ExpoDefinePlugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,UAAA;;AAGA,IAAM,0BAA0B,GAAG,CAEjC,gBAFiC,EAGjC,eAHiC,EAIjC,qBAJiC,EAMjC,KANiC,EAOjC,SAPiC,EASjC,SATiC,EAUjC,OAViC,EAWjC,WAXiC,EAajC,qBAbiC,CAAnC;;AAgBA,SAAS,0BAAT,CAAoC,WAApC,EAA2D;;;AACzD,MAAM,cAAc,mCACf,WADe;AAGlB,IAAA,IAAI,EAAE,WAAW,CAAC,WAAZ,IAA2B,WAAW,CAAC,IAH3B;AAKlB,IAAA,GAAG,EAAE;AAIH,MAAA,MAAM,EAAE,CAAA,EAAA,GAAA,WAAW,CAAC,GAAZ,MAAe,IAAf,IAAe,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAe,EAAA,CAAE;AAJtB;AALa,IAApB;;AAaA,uDAAoB,0BAApB,wCAAgD;AAAA,QAArC,KAAqC;AAC9C,WAAO,cAAc,CAAC,KAAD,CAArB;AACD;;AACD,SAAO,cAAP;AACD;;AAiBD,SAAgB,uBAAhB,CACE,IADF,EAEE,UAFF,EAGE,iBAHF,EAG+B;AAAA;;AAE7B,MAAM,WAAW,GAAG,KAAA,CAAA,OAAA,CAAQ;AAAE,IAAA,IAAI,EAAJ;AAAF,GAAR,CAApB;;AACA,MAAM,OAAO,GAAG,WAAW,KAAK,YAAhC;;AAIA,MAAM,qBAAqB,GAAG,aAAa,CAAC,iBAAD,EAAoB,QAApB,CAA3C;AACA,MAAM,aAAa,GAAG,qBAAqB,GAAG,6BAAH,GAAmC,SAA9E;AACA,MAAM,YAAY,GAAG,0BAArB;AAEA,MAAM,gBAAgB,GAAG,QAAA,CAAA,OAAA,CAAQ,yCAAR,EAAmD,KAAnD,CAAzB;AAEA,MAAM,MAAM,GAAG,gBAAgB,GAAG,cAAH,GAAoB,EAAnD;AAEA,MAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,GAApB,EAChB,MADgB,CACT,UAAA,GAAG;AAAA,WAAI,aAAa,CAAC,IAAd,CAAmB,GAAnB,KAA2B,CAAC,YAAY,CAAC,IAAb,CAAkB,GAAlB,CAAhC;AAAA,GADM,EAEhB,MAFgB,CAGf,UAAC,GAAD,EAAM,GAAN,EAAa;AACX,IAAA,GAAG,MAAI,MAAJ,GAAa,GAAb,CAAH,GAAyB,IAAI,CAAC,SAAL,CAAe,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAf,CAAzB;AACA,WAAO,GAAP;AACD,GANc,sEAYT,MAZS,eAYU,IAAI,CAAC,SAAL,CAAe,WAAf,CAZV,0CAoBT,MApBS,iBAoBY,IAAI,CAAC,SAAL,CAAe,UAAf,CApBZ,0CA0BT,MA1BS,mBA0Bc,IAAI,CAAC,SAAL,CAAe,iBAAf,CA1Bd,0BAAnB;;AA8BA,MAAI,gBAAJ,EAAsB;AACpB,2CACK,UADL;AAEE,MAAA,OAAO,EAAP;AAFF;AAID;;AAED,SAAO;AACL,mBAAe,UADV;AAEL,IAAA,OAAO,EAAP;AAFK,GAAP;AAID;;AA3DD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;IAkEqB,Y;;;;;AAenB,8BAA8F;AAAA,QAAhF,IAAgF,QAAhF,IAAgF;AAAA,QAA1E,SAA0E,QAA1E,SAA0E;AAAA,QAA/D,MAA+D,QAA/D,MAA+D;;AAAA;;AAC5F,QAAM,iBAAiB,GAAG,0BAA0B,CAAC,MAAD,CAApD;AAEA,QAAM,oBAAoB,GAAG,uBAAuB,CAAC,IAAD,EAAO,SAAP,EAAkB,iBAAlB,CAApD;AAH4F,6BAKtF,oBALsF;AAM7F;;;EArBuC,SAAA,CAAA,Y;;AAA1C,OAAA,CAAA,OAAA,GAAA,YAAA;AACS,YAAA,CAAA,uBAAA,GAA0B,uBAA1B;;AACA,YAAA,CAAA,OAAA,GAAU,UACf,GADe,EAEC;AAChB,MAAM,IAAI,GAAG,KAAA,CAAA,OAAA,CAAQ,GAAR,CAAb;;AACA,8BAAsB,KAAA,CAAA,cAAA,CAAe,GAAf,CAAtB;AAAA,MAAQ,SAAR,yBAAQ,SAAR;;AACA,MAAM,MAAM,GAAG,GAAG,CAAC,MAAJ,IAAc,KAAA,CAAA,SAAA,CAAU,GAAV,CAA7B;AACA,SAAO,IAAI,YAAJ,CAAiB;AACtB,IAAA,IAAI,EAAJ,IADsB;AAEtB,IAAA,SAAS,EAAT,SAFsB;AAGtB,IAAA,MAAM,EAAN;AAHsB,GAAjB,CAAP;AAKD,CAXM;;AAsBT,SAAS,aAAT,CAAuB,GAAvB,EAA4D,UAA5D,EAA8E;AAC5E,MAAI,CAAC,GAAG,CAAC,UAAT,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAI,GAAG,CAAC,UAAJ,KAAmB,aAAvB,EAAsC;AACpC,WAAO,KAAP;AACD;;AAED,MAAI;AACF,WAAO,QAAA,CAAA,OAAA,CAAO,GAAP,CAAW,GAAG,CAAC,UAAf,EAA2B,UAA3B,CAAP;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF","sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { boolish } from 'getenv';\nimport semver from 'semver';\nimport { DefinePlugin as OriginalDefinePlugin } from 'webpack';\n\nimport { getConfig, getMode, getPublicPaths } from '../env';\nimport { Environment, Mode } from '../types';\n\nconst RESTRICTED_MANIFEST_FIELDS = [\n  // Omit app.json properties that get removed during the native build\n  'facebookScheme',\n  'facebookAppId',\n  'facebookDisplayName',\n  // Remove iOS and Android.\n  'ios',\n  'android',\n  // Hide internal / build values\n  'plugins',\n  'hooks',\n  '_internal',\n  // Remove metro-specific values\n  'assetBundlePatterns',\n];\n\nfunction createEnvironmentConstants(appManifest: ExpoConfig) {\n  const publicManifest: Record<string, any> = {\n    ...appManifest,\n    // @ts-ignore: displayName doesn't exist on ExpoConfig\n    name: appManifest.displayName || appManifest.name,\n    // Use the PWA `manifest.json` as the native web manifest.\n    web: {\n      // Pass through config properties that are not stored in the\n      // PWA `manifest.json`, but still need to be accessible\n      // through `Constants.manifest`.\n      config: appManifest.web?.config,\n    },\n  };\n\n  for (const field of RESTRICTED_MANIFEST_FIELDS) {\n    delete publicManifest[field];\n  }\n  return publicManifest;\n}\n\n/**\n * @internal\n */\nexport interface ClientEnv {\n  [key: string]: OriginalDefinePlugin.CodeValueObject;\n}\n\n/**\n * Create the global environment variables to surface in the project. Also creates the `__DEV__` boolean to provide better parity with Metro bundler.\n *\n * @param mode defines the Metro bundler `global.__DEV__` value.\n * @param publicPath passed as `process.env.PUBLIC_URL` to the app.\n * @param nativeAppManifest public values to be used in `expo-constants`.\n * @internal\n */\nexport function createClientEnvironment(\n  mode: Mode,\n  publicPath: string,\n  nativeAppManifest: ExpoConfig\n): ClientEnv {\n  const environment = getMode({ mode });\n  const __DEV__ = environment !== 'production';\n\n  // Adding the env variables to the Expo manifest is unsafe.\n  // This feature is deprecated in SDK 41 forward.\n  const isEnvBindingSupported = lteSdkVersion(nativeAppManifest, '40.0.0');\n  const ENV_VAR_REGEX = isEnvBindingSupported ? /^(EXPO_|REACT_NATIVE_|CI$)/i : /^(CI$)/i;\n  const SECRET_REGEX = /(PASSWORD|SECRET|TOKEN)/i;\n\n  const shouldDefineKeys = boolish('EXPO_WEBPACK_DEFINE_ENVIRONMENT_AS_KEYS', false);\n\n  const prefix = shouldDefineKeys ? 'process.env.' : '';\n\n  const processEnv = Object.keys(process.env)\n    .filter(key => ENV_VAR_REGEX.test(key) && !SECRET_REGEX.test(key))\n    .reduce(\n      (env, key) => {\n        env[`${prefix}${key}`] = JSON.stringify(process.env[key]);\n        return env;\n      },\n      {\n        /**\n         * Useful for determining whether we’re running in production mode.\n         * Most importantly, it switches React into the correct mode.\n         */\n        [`${prefix}NODE_ENV`]: JSON.stringify(environment),\n\n        /**\n         * Useful for resolving the correct path to static assets in `public`.\n         * For example, <img src={process.env.PUBLIC_URL + '/img/logo.png'} />.\n         * This should only be used as an escape hatch. Normally you would put\n         * images into the root folder and `import` them in code to get their paths.\n         */\n        [`${prefix}PUBLIC_URL`]: JSON.stringify(publicPath),\n\n        /**\n         * Surfaces the `app.json` (config) as an environment variable which is then parsed by\n         * `expo-constants` https://docs.expo.dev/versions/latest/sdk/constants/\n         */\n        [`${prefix}APP_MANIFEST`]: JSON.stringify(nativeAppManifest),\n      } as Record<string, string>\n    );\n\n  if (shouldDefineKeys) {\n    return {\n      ...processEnv,\n      __DEV__,\n    };\n  }\n\n  return {\n    'process.env': processEnv,\n    __DEV__,\n  };\n}\n\n/**\n * Required for `expo-constants` https://docs.expo.dev/versions/latest/sdk/constants/.\n * This surfaces the `app.json` (config) as an environment variable which is then parsed by `expo-constants`.\n * @category plugins\n */\nexport default class DefinePlugin extends OriginalDefinePlugin {\n  static createClientEnvironment = createClientEnvironment;\n  static fromEnv = (\n    env: Pick<Environment, 'projectRoot' | 'mode' | 'config' | 'locations'>\n  ): DefinePlugin => {\n    const mode = getMode(env);\n    const { publicUrl } = getPublicPaths(env);\n    const config = env.config || getConfig(env);\n    return new DefinePlugin({\n      mode,\n      publicUrl,\n      config,\n    });\n  };\n\n  constructor({ mode, publicUrl, config }: { mode: Mode; publicUrl: string; config: ExpoConfig }) {\n    const publicAppManifest = createEnvironmentConstants(config);\n\n    const environmentVariables = createClientEnvironment(mode, publicUrl, publicAppManifest as any);\n\n    super(environmentVariables);\n  }\n}\n\nfunction lteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n\n  try {\n    return semver.lte(exp.sdkVersion, sdkVersion);\n  } catch (e) {\n    return false;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}