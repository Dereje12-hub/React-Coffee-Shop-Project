{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrimaryColor = getPrimaryColor;\nexports.withPrimaryColorStyles = exports.withPrimaryColorColors = exports.withPrimaryColor = void 0;\n\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Colors() {\n  var data = require(\"./Colors\");\n\n  _Colors = function _Colors() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Styles() {\n  var data = require(\"./Styles\");\n\n  _Styles = function _Styles() {\n    return data;\n  };\n\n  return data;\n}\n\nvar COLOR_PRIMARY_KEY = 'colorPrimary';\nvar DEFAULT_PRIMARY_COLOR = '#023c69';\n\nvar withPrimaryColor = function withPrimaryColor(config) {\n  config = withPrimaryColorColors(config);\n  config = withPrimaryColorStyles(config);\n  return config;\n};\n\nexports.withPrimaryColor = withPrimaryColor;\n\nvar withPrimaryColorColors = function withPrimaryColorColors(config) {\n  return (0, _androidPlugins().withAndroidColors)(config, function (config) {\n    config.modResults = (0, _Colors().assignColorValue)(config.modResults, {\n      name: COLOR_PRIMARY_KEY,\n      value: getPrimaryColor(config)\n    });\n    return config;\n  });\n};\n\nexports.withPrimaryColorColors = withPrimaryColorColors;\n\nvar withPrimaryColorStyles = function withPrimaryColorStyles(config) {\n  return (0, _androidPlugins().withAndroidStyles)(config, function (config) {\n    config.modResults = (0, _Styles().assignStylesValue)(config.modResults, {\n      add: !!getPrimaryColor(config),\n      parent: (0, _Styles().getAppThemeLightNoActionBarGroup)(),\n      name: COLOR_PRIMARY_KEY,\n      value: \"@color/\" + COLOR_PRIMARY_KEY\n    });\n    return config;\n  });\n};\n\nexports.withPrimaryColorStyles = withPrimaryColorStyles;\n\nfunction getPrimaryColor(config) {\n  var _config$primaryColor;\n\n  return (_config$primaryColor = config.primaryColor) !== null && _config$primaryColor !== void 0 ? _config$primaryColor : DEFAULT_PRIMARY_COLOR;\n}","map":{"version":3,"sources":["../../src/android/PrimaryColor.ts"],"names":["COLOR_PRIMARY_KEY","DEFAULT_PRIMARY_COLOR","withPrimaryColor","config","withPrimaryColorColors","withPrimaryColorStyles","name","value","getPrimaryColor","add","parent"],"mappings":";;;;;;;;AAGA,SAAA,eAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,8BAAA;;AAAA,EAAA,eAAA,GAAA,2BAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,OAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,YAAA;;AAAA,EAAA,OAAA,GAAA,mBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,OAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,YAAA;;AAAA,EAAA,OAAA,GAAA,mBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAEA,IAAMA,iBAAiB,GAAvB,cAAA;AACA,IAAMC,qBAAqB,GAA3B,SAAA;;AAEO,IAAMC,gBAA8B,GAAGC,SAAjCD,gBAAiCC,CAAAA,MAAM,EAAI;AACtDA,EAAAA,MAAM,GAAGC,sBAAsB,CAA/BD,MAA+B,CAA/BA;AACAA,EAAAA,MAAM,GAAGE,sBAAsB,CAA/BF,MAA+B,CAA/BA;AACA,SAAA,MAAA;AAHK,CAAA;;;;AAMA,IAAMC,sBAAoC,GAAGD,SAAvCC,sBAAuCD,CAAAA,MAAM,EAAI;AAC5D,SAAO,CAAA,GAAA,eAAA,GAAA,iBAAA,EAAA,MAAA,EAA0BA,UAAAA,MAAM,EAAI;AACzCA,IAAAA,MAAM,CAANA,UAAAA,GAAoB,CAAA,GAAA,OAAA,GAAA,gBAAA,EAAiBA,MAAM,CAAvB,UAAA,EAAoC;AACtDG,MAAAA,IAAI,EADkD,iBAAA;AAEtDC,MAAAA,KAAK,EAAEC,eAAe,CAAA,MAAA;AAFgC,KAApC,CAApBL;AAIA,WAAA,MAAA;AALF,GAAO,CAAP;AADK,CAAA;;;;AAUA,IAAME,sBAAoC,GAAGF,SAAvCE,sBAAuCF,CAAAA,MAAM,EAAI;AAC5D,SAAO,CAAA,GAAA,eAAA,GAAA,iBAAA,EAAA,MAAA,EAA0BA,UAAAA,MAAM,EAAI;AACzCA,IAAAA,MAAM,CAANA,UAAAA,GAAoB,CAAA,GAAA,OAAA,GAAA,iBAAA,EAAkBA,MAAM,CAAxB,UAAA,EAAqC;AACvDM,MAAAA,GAAG,EAAE,CAAC,CAACD,eAAe,CADiC,MACjC,CADiC;AAEvDE,MAAAA,MAAM,EAAE,CAAA,GAAA,OAAA,GAF+C,gCAE/C,GAF+C;AAGvDJ,MAAAA,IAAI,EAHmD,iBAAA;AAIvDC,MAAAA,KAAK,cAAYP;AAJsC,KAArC,CAApBG;AAMA,WAAA,MAAA;AAPF,GAAO,CAAP;AADK,CAAA;;;;AAYA,SAAA,eAAA,CAAA,MAAA,EAAmE;AAAA,MAAA,oBAAA;;AACxE,SAAA,CAAA,oBAAA,GAAOA,MAAM,CAAb,YAAA,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAAA,qBAAA;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withAndroidColors, withAndroidStyles } from '../plugins/android-plugins';\nimport { assignColorValue } from './Colors';\nimport { assignStylesValue, getAppThemeLightNoActionBarGroup } from './Styles';\n\nconst COLOR_PRIMARY_KEY = 'colorPrimary';\nconst DEFAULT_PRIMARY_COLOR = '#023c69';\n\nexport const withPrimaryColor: ConfigPlugin = config => {\n  config = withPrimaryColorColors(config);\n  config = withPrimaryColorStyles(config);\n  return config;\n};\n\nexport const withPrimaryColorColors: ConfigPlugin = config => {\n  return withAndroidColors(config, config => {\n    config.modResults = assignColorValue(config.modResults, {\n      name: COLOR_PRIMARY_KEY,\n      value: getPrimaryColor(config),\n    });\n    return config;\n  });\n};\n\nexport const withPrimaryColorStyles: ConfigPlugin = config => {\n  return withAndroidStyles(config, config => {\n    config.modResults = assignStylesValue(config.modResults, {\n      add: !!getPrimaryColor(config),\n      parent: getAppThemeLightNoActionBarGroup(),\n      name: COLOR_PRIMARY_KEY,\n      value: `@color/${COLOR_PRIMARY_KEY}`,\n    });\n    return config;\n  });\n};\n\nexport function getPrimaryColor(config: Pick<ExpoConfig, 'primaryColor'>) {\n  return config.primaryColor ?? DEFAULT_PRIMARY_COLOR;\n}\n"]},"metadata":{},"sourceType":"script"}