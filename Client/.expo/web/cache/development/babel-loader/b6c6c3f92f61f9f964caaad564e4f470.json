{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"com.apple.developer.associated-domains\"];\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAssociatedDomains = setAssociatedDomains;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.withAssociatedDomains = void 0;\n\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  var data = _interopRequireDefault(require(\"slash\"));\n\n  _slash = function _slash() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction Paths() {\n  var data = _interopRequireWildcard(require(\"./Paths\"));\n\n  Paths = function Paths() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Xcodeproj() {\n  var data = require(\"./utils/Xcodeproj\");\n\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar withAssociatedDomains = (0, _iosPlugins().createEntitlementsPlugin)(setAssociatedDomains, 'withAssociatedDomains');\nexports.withAssociatedDomains = withAssociatedDomains;\n\nfunction setAssociatedDomains(config, _ref) {\n  var _ = _ref['com.apple.developer.associated-domains'],\n      entitlementsPlist = _objectWithoutProperties(_ref, _excluded);\n\n  var _config$ios;\n\n  if ((_config$ios = config.ios) !== null && _config$ios !== void 0 && _config$ios.associatedDomains) {\n    return _objectSpread(_objectSpread({}, entitlementsPlist), {}, {\n      'com.apple.developer.associated-domains': config.ios.associatedDomains\n    });\n  }\n\n  return entitlementsPlist;\n}\n\nfunction getEntitlementsPath(projectRoot) {\n  var paths = Paths().getAllEntitlementsPaths(projectRoot);\n  var targetPath = null;\n  var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n  var projectName = (0, _Xcodeproj().getProjectName)(projectRoot);\n  var productName = (0, _Xcodeproj().getProductName)(project);\n  var entitlementsRelativePath = (0, _slash().default)(_path().default.join(projectName, productName + \".entitlements\"));\n  var entitlementsPath = (0, _slash().default)(_path().default.normalize(_path().default.join(projectRoot, 'ios', entitlementsRelativePath)));\n  var pathsToDelete = [];\n\n  while (paths.length) {\n    var last = (0, _slash().default)(_path().default.normalize(paths.pop()));\n\n    if (last !== entitlementsPath) {\n      pathsToDelete.push(last);\n    } else {\n      targetPath = last;\n    }\n  }\n\n  if (!targetPath) {\n    targetPath = entitlementsPath;\n    var template = ENTITLEMENTS_TEMPLATE;\n\n    if (pathsToDelete.length) {\n      var _last = pathsToDelete[pathsToDelete.length - 1];\n      template = _fsExtra().default.readFileSync(_last, 'utf8');\n    }\n\n    _fsExtra().default.ensureDirSync(_path().default.dirname(entitlementsPath));\n\n    _fsExtra().default.writeFileSync(entitlementsPath, template);\n\n    Object.entries(project.pbxXCBuildConfigurationSection()).filter(_Xcodeproj().isNotComment).filter(_Xcodeproj().isBuildConfig).filter(_Xcodeproj().isNotTestHost).forEach(function (_ref2) {\n      var buildSettings = _ref2[1].buildSettings;\n      buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n    });\n\n    _fsExtra().default.writeFileSync(project.filepath, project.writeSync());\n  }\n\n  deleteEntitlementsFiles(pathsToDelete);\n  return entitlementsPath;\n}\n\nfunction deleteEntitlementsFiles(entitlementsPaths) {\n  for (var _iterator = _createForOfIteratorHelperLoose(entitlementsPaths), _step; !(_step = _iterator()).done;) {\n    var path = _step.value;\n\n    _fsExtra().default.removeSync(path);\n  }\n}\n\nvar ENTITLEMENTS_TEMPLATE = \"\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n<plist version=\\\"1.0\\\">\\n<dict>\\n</dict>\\n</plist>\\n\";","map":{"version":3,"sources":["../../src/ios/Entitlements.ts"],"names":["withAssociatedDomains","entitlementsPlist","config","associatedDomains","paths","Paths","targetPath","project","projectName","productName","entitlementsRelativePath","path","entitlementsPath","pathsToDelete","last","template","fs","Object","isNotComment","isBuildConfig","isNotTestHost","buildSettings","deleteEntitlementsFiles","ENTITLEMENTS_TEMPLATE"],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { JSONObject } from '@expo/json-file';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport slash from 'slash';\n\nimport { createEntitlementsPlugin } from '../plugins/ios-plugins';\nimport * as Paths from './Paths';\nimport {\n  getPbxproj,\n  getProductName,\n  getProjectName,\n  isBuildConfig,\n  isNotComment,\n  isNotTestHost,\n} from './utils/Xcodeproj';\n\nexport const withAssociatedDomains = createEntitlementsPlugin(\n  setAssociatedDomains,\n  'withAssociatedDomains'\n);\n\nexport function setAssociatedDomains(\n  config: ExpoConfig,\n  { 'com.apple.developer.associated-domains': _, ...entitlementsPlist }: JSONObject\n): JSONObject {\n  if (config.ios?.associatedDomains) {\n    return {\n      ...entitlementsPlist,\n      'com.apple.developer.associated-domains': config.ios.associatedDomains,\n    };\n  }\n\n  return entitlementsPlist;\n}\n\nexport function getEntitlementsPath(projectRoot: string): string {\n  const paths = Paths.getAllEntitlementsPaths(projectRoot);\n  let targetPath: string | null = null;\n\n  /**\n   * Add file to pbxproj under CODE_SIGN_ENTITLEMENTS\n   */\n  const project = getPbxproj(projectRoot);\n  const projectName = getProjectName(projectRoot);\n  const productName = getProductName(project);\n\n  // Use posix formatted path, even on Windows\n  const entitlementsRelativePath = slash(path.join(projectName, `${productName}.entitlements`));\n  const entitlementsPath = slash(\n    path.normalize(path.join(projectRoot, 'ios', entitlementsRelativePath))\n  );\n\n  const pathsToDelete: string[] = [];\n\n  while (paths.length) {\n    const last = slash(path.normalize(paths.pop()!));\n    if (last !== entitlementsPath) {\n      pathsToDelete.push(last);\n    } else {\n      targetPath = last;\n    }\n  }\n\n  // Create a new entitlements file\n  if (!targetPath) {\n    targetPath = entitlementsPath;\n\n    // Use the default template\n    let template = ENTITLEMENTS_TEMPLATE;\n\n    // If an old entitlements file exists, copy it's contents into the new file.\n    if (pathsToDelete.length) {\n      // Get the last entitlements file and use it as the template\n      const last = pathsToDelete[pathsToDelete.length - 1]!;\n      template = fs.readFileSync(last, 'utf8');\n    }\n\n    fs.ensureDirSync(path.dirname(entitlementsPath));\n    fs.writeFileSync(entitlementsPath, template);\n\n    Object.entries(project.pbxXCBuildConfigurationSection())\n      .filter(isNotComment)\n      .filter(isBuildConfig)\n      .filter(isNotTestHost)\n      .forEach(({ 1: { buildSettings } }: any) => {\n        buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n      });\n    fs.writeFileSync(project.filepath, project.writeSync());\n  }\n\n  // Clean up others\n  deleteEntitlementsFiles(pathsToDelete);\n\n  return entitlementsPath;\n}\n\nfunction deleteEntitlementsFiles(entitlementsPaths: string[]) {\n  for (const path of entitlementsPaths) {\n    fs.removeSync(path);\n  }\n}\n\nconst ENTITLEMENTS_TEMPLATE = `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n</dict>\n</plist>\n`;\n"]},"metadata":{},"sourceType":"script"}