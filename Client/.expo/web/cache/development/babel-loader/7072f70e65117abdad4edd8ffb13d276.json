{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllowBackup = getAllowBackup;\nexports.setAllowBackup = setAllowBackup;\nexports.getAllowBackupFromManifest = getAllowBackupFromManifest;\nexports.withAllowBackup = void 0;\n\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n\n  _Manifest = function _Manifest() {\n    return data;\n  };\n\n  return data;\n}\n\nvar withAllowBackup = (0, _androidPlugins().createAndroidManifestPlugin)(setAllowBackup, 'withAllowBackup');\nexports.withAllowBackup = withAllowBackup;\n\nfunction getAllowBackup(config) {\n  var _config$android$allow, _config$android;\n\n  return (_config$android$allow = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.allowBackup) !== null && _config$android$allow !== void 0 ? _config$android$allow : true;\n}\n\nfunction setAllowBackup(config, androidManifest) {\n  var allowBackup = getAllowBackup(config);\n  var mainApplication = (0, _Manifest().getMainApplication)(androidManifest);\n\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication.$) {\n    mainApplication.$['android:allowBackup'] = String(allowBackup);\n  }\n\n  return androidManifest;\n}\n\nfunction getAllowBackupFromManifest(androidManifest) {\n  var mainApplication = (0, _Manifest().getMainApplication)(androidManifest);\n\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication.$) {\n    return String(mainApplication.$['android:allowBackup']) === 'true';\n  }\n\n  return null;\n}","map":{"version":3,"sources":["../../src/android/AllowBackup.ts"],"names":["withAllowBackup","config","allowBackup","getAllowBackup","mainApplication","String"],"mappings":";;;;;;;;;;AAEA,SAAA,eAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,8BAAA;;AAAA,EAAA,eAAA,GAAA,2BAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,SAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,cAAA;;AAAA,EAAA,SAAA,GAAA,qBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAEO,IAAMA,eAAe,GAAG,CAAA,GAAA,eAAA,GAAA,2BAAA,EAAA,cAAA,EAAxB,iBAAwB,CAAxB;;;AAEA,SAAA,cAAA,CAAA,MAAA,EAA6D;AAAA,MAAA,qBAAA,EAAA,eAAA;;AAGlE,SAAA,CAAA,qBAAA,GAAA,CAAA,eAAA,GAAOC,MAAM,CAAb,OAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,eAAAA,CAAP,WAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA;AACD;;AAEM,SAAA,cAAA,CAAA,MAAA,EAAA,eAAA,EAGL;AACA,MAAMC,WAAW,GAAGC,cAAc,CAAlC,MAAkC,CAAlC;AAEA,MAAMC,eAAe,GAAG,CAAA,GAAA,SAAA,GAAA,kBAAA,EAAxB,eAAwB,CAAxB;;AACA,MAAIA,eAAJ,KAAA,IAAIA,IAAAA,eAAJ,KAAA,KAAA,CAAIA,IAAAA,eAAe,CAAnB,CAAA,EAAwB;AACtBA,IAAAA,eAAe,CAAfA,CAAAA,CAAAA,qBAAAA,IAA2CC,MAAM,CAAjDD,WAAiD,CAAjDA;AACD;;AAED,SAAA,eAAA;AACD;;AAEM,SAAA,0BAAA,CAAA,eAAA,EAAsF;AAC3F,MAAMA,eAAe,GAAG,CAAA,GAAA,SAAA,GAAA,kBAAA,EAAxB,eAAwB,CAAxB;;AAEA,MAAIA,eAAJ,KAAA,IAAIA,IAAAA,eAAJ,KAAA,KAAA,CAAIA,IAAAA,eAAe,CAAnB,CAAA,EAAwB;AACtB,WAAOC,MAAM,CAACD,eAAe,CAAfA,CAAAA,CAAPC,qBAAOD,CAAD,CAANC,KAAP,MAAA;AACD;;AAED,SAAA,IAAA;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainApplication, StringBoolean } from './Manifest';\n\nexport const withAllowBackup = createAndroidManifestPlugin(setAllowBackup, 'withAllowBackup');\n\nexport function getAllowBackup(config: Pick<ExpoConfig, 'android'>) {\n  // Defaults to true.\n  // https://docs.expo.dev/versions/latest/config/app/#allowbackup\n  return config.android?.allowBackup ?? true;\n}\n\nexport function setAllowBackup(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const allowBackup = getAllowBackup(config);\n\n  const mainApplication = getMainApplication(androidManifest);\n  if (mainApplication?.$) {\n    mainApplication.$['android:allowBackup'] = String(allowBackup) as StringBoolean;\n  }\n\n  return androidManifest;\n}\n\nexport function getAllowBackupFromManifest(androidManifest: AndroidManifest): boolean | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.$) {\n    return String(mainApplication.$['android:allowBackup']) === 'true';\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"script"}