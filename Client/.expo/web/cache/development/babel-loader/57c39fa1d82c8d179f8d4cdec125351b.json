{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _excluded = [\"mode\", \"projectRoot\", \"babelProjectRoot\", \"include\", \"verbose\", \"platform\", \"useCustom\"];\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBabelLoaderFromEnvironment = void 0;\n\nvar core_1 = require(\"@babel/core\");\n\nvar paths_1 = require(\"@expo/config/paths\");\n\nvar chalk_1 = __importDefault(require(\"chalk\"));\n\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nvar getenv_1 = require(\"getenv\");\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar resolve_from_1 = __importDefault(require(\"resolve-from\"));\n\nvar env_1 = require(\"../env\");\n\nvar shouldUseSourceMap = getenv_1.boolish('GENERATE_SOURCEMAP', true);\n\nvar getModule = function getModule(name) {\n  return path_1.default.join('node_modules', name);\n};\n\nvar includeModulesThatContainPaths = [getModule('react-native'), getModule('react-navigation'), getModule('expo'), getModule('unimodules'), getModule('@react'), getModule('@expo'), getModule('@use-expo'), getModule('@unimodules'), getModule('native-base'), getModule('styled-components')];\nvar excludedRootPaths = ['/node_modules', '/bower_components', '/.expo/', '(webpack)'];\nvar parsedPackageNames = [];\n\nfunction packageNameFromPath(inputPath) {\n  var modules = inputPath.split('node_modules/');\n  var libAndFile = modules.pop();\n  if (!libAndFile) return null;\n\n  if (libAndFile.charAt(0) === '@') {\n    var _libAndFile$split = libAndFile.split('/'),\n        _libAndFile$split2 = _slicedToArray(_libAndFile$split, 2),\n        org = _libAndFile$split2[0],\n        lib = _libAndFile$split2[1];\n\n    return org + '/' + lib;\n  } else {\n    var components = libAndFile.split('/');\n    var first = components.shift();\n    return first || null;\n  }\n}\n\nfunction logPackage(packageName) {\n  if (!parsedPackageNames.includes(packageName)) {\n    parsedPackageNames.push(packageName);\n    console.log(chalk_1.default.cyan('\\nCompiling module: ' + chalk_1.default.bold(packageName)));\n  }\n}\n\nfunction ensureRoot(possibleProjectRoot) {\n  if (typeof possibleProjectRoot === 'string') {\n    return path_1.default.resolve(possibleProjectRoot);\n  }\n\n  return paths_1.getPossibleProjectRoot();\n}\n\nfunction generateCacheIdentifier(projectRoot) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var filename = path_1.default.join(projectRoot, 'foobar.js');\n  var cacheKey = \"babel-cache-\" + version + \"-\";\n  var partial = core_1.loadPartialConfig({\n    filename: filename,\n    cwd: projectRoot,\n    sourceFileName: filename\n  });\n  return \"\" + cacheKey + JSON.stringify(partial.options);\n}\n\nfunction createBabelLoaderFromEnvironment(env) {\n  var _a;\n\n  var mode = env_1.getMode(env);\n  var locations = env.locations || env_1.getPaths(env.projectRoot, env);\n  var appConfig = env.config || env_1.getConfig(env);\n  var _appConfig$web$build = appConfig.web.build,\n      build = _appConfig$web$build === void 0 ? {} : _appConfig$web$build;\n  var _build$babel = build.babel,\n      babel = _build$babel === void 0 ? {} : _build$babel;\n  return createBabelLoader({\n    projectRoot: locations.root,\n    mode: mode,\n    platform: env.platform,\n    babelProjectRoot: babel.root || locations.root,\n    verbose: babel.verbose,\n    include: [].concat(_toConsumableArray(babel.include || []), _toConsumableArray(((_a = env.babel) === null || _a === void 0 ? void 0 : _a.dangerouslyAddModulePathsToTranspile) || [])),\n    use: babel.use\n  });\n}\n\nexports.createBabelLoaderFromEnvironment = createBabelLoaderFromEnvironment;\n\nfunction createBabelLoader() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var mode = _ref.mode,\n      inputProjectRoot = _ref.projectRoot,\n      babelProjectRoot = _ref.babelProjectRoot,\n      _ref$include = _ref.include,\n      include = _ref$include === void 0 ? [] : _ref$include,\n      verbose = _ref.verbose,\n      _ref$platform = _ref.platform,\n      platform = _ref$platform === void 0 ? 'web' : _ref$platform,\n      useCustom = _ref.useCustom,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  var ensuredProjectRoot = ensureRoot(babelProjectRoot);\n  var modules = [].concat(includeModulesThatContainPaths, _toConsumableArray(include));\n  var customUse = options.use || {};\n  var customUseOptions = customUse.options || {};\n  var isProduction = mode === 'production';\n  var projectRoot = inputProjectRoot || paths_1.getPossibleProjectRoot();\n  var presetOptions = {\n    babelrc: false,\n    configFile: true\n  };\n\n  if (!fs_extra_1.default.existsSync(path_1.default.join(projectRoot, 'babel.config.js')) && !fs_extra_1.default.existsSync(path_1.default.join(projectRoot, '.babelrc'))) {\n    var modulePath = resolve_from_1.default.silent(projectRoot, 'babel-preset-expo');\n\n    if (modulePath) {\n      presetOptions = {\n        babelrc: false,\n        configFile: false,\n        presets: [modulePath]\n      };\n    } else {\n      console.log(chalk_1.default.yellow(\"\\u203A Webpack failed to locate a valid Babel config\"));\n    }\n  }\n\n  presetOptions = _objectSpread(_objectSpread(_objectSpread({}, presetOptions), customUseOptions || {}), {}, {\n    sourceType: 'unambiguous',\n    root: ensuredProjectRoot,\n    compact: isProduction,\n    sourceMaps: shouldUseSourceMap,\n    inputSourceMap: shouldUseSourceMap\n  });\n  var cacheIdentifier = customUseOptions.cacheIdentifier;\n\n  if (!cacheIdentifier) {\n    try {\n      cacheIdentifier = generateCacheIdentifier(ensuredProjectRoot);\n    } catch (error) {\n      console.log(chalk_1.default.black.bgRed(\"The project's Babel config is invalid: \" + error.message));\n      throw error;\n    }\n  }\n\n  presetOptions.cacheIdentifier = cacheIdentifier;\n  presetOptions.cacheCompression = false;\n  presetOptions.cacheDirectory = customUseOptions.cacheDirectory || path_1.default.join(ensuredProjectRoot, '.expo', platform, 'cache', mode || 'development', 'babel-loader');\n  presetOptions.caller = {\n    __dangerous_rule_id: 'expo-babel-loader',\n    bundler: 'webpack',\n    platform: platform,\n    mode: mode\n  };\n  return _objectSpread(_objectSpread({\n    test: /\\.(mjs|[jt]sx?)$/\n  }, options), {}, {\n    include: function include(inputPath) {\n      for (var _iterator = _createForOfIteratorHelperLoose(modules), _step; !(_step = _iterator()).done;) {\n        var possibleModule = _step.value;\n\n        if (inputPath.includes(path_1.default.normalize(possibleModule))) {\n          if (verbose) {\n            var packageName = packageNameFromPath(inputPath);\n            if (packageName) logPackage(packageName);\n          }\n\n          return true;\n        }\n      }\n\n      if (inputPath.includes(ensuredProjectRoot)) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(excludedRootPaths), _step2; !(_step2 = _iterator2()).done;) {\n          var excluded = _step2.value;\n\n          if (inputPath.includes(path_1.default.normalize(excluded))) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    use: _objectSpread(_objectSpread({}, customUse), {}, {\n      loader: require.resolve('babel-loader'),\n      options: presetOptions\n    })\n  });\n}\n\nexports.default = createBabelLoader;","map":{"version":3,"sources":["../../src/loaders/createBabelLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import { loadPartialConfig } from '@babel/core';\nimport { getPossibleProjectRoot } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport { boolish } from 'getenv';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { Rule } from 'webpack';\n\nimport { getConfig, getMode, getPaths } from '../env';\nimport { Environment, Mode } from '../types';\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = boolish('GENERATE_SOURCEMAP', true);\n\nconst getModule = (name: string) => path.join('node_modules', name);\n\n// Only compile files from the react ecosystem.\nconst includeModulesThatContainPaths = [\n  getModule('react-native'),\n  getModule('react-navigation'),\n  getModule('expo'),\n  getModule('unimodules'),\n  getModule('@react'),\n  getModule('@expo'),\n  getModule('@use-expo'),\n  getModule('@unimodules'),\n  getModule('native-base'),\n  getModule('styled-components'),\n];\n\nconst excludedRootPaths = [\n  '/node_modules',\n  '/bower_components',\n  '/.expo/',\n  // Prevent transpiling webpack generated files.\n  '(webpack)',\n];\n\nconst parsedPackageNames: string[] = [];\n// TODO: Bacon: Support internal packages. ex: react/fbjs\nfunction packageNameFromPath(inputPath: string): string | null {\n  const modules = inputPath.split('node_modules/');\n  const libAndFile = modules.pop();\n  if (!libAndFile) return null;\n  if (libAndFile.charAt(0) === '@') {\n    const [org, lib] = libAndFile.split('/');\n    return org + '/' + lib;\n  } else {\n    const components = libAndFile.split('/');\n    const first = components.shift();\n    return first || null;\n  }\n}\n\nfunction logPackage(packageName: string) {\n  if (!parsedPackageNames.includes(packageName)) {\n    parsedPackageNames.push(packageName);\n    console.log(chalk.cyan('\\nCompiling module: ' + chalk.bold(packageName)));\n  }\n}\n\nfunction ensureRoot(possibleProjectRoot?: string): string {\n  if (typeof possibleProjectRoot === 'string') {\n    return path.resolve(possibleProjectRoot);\n  }\n  return getPossibleProjectRoot();\n}\n\nfunction generateCacheIdentifier(projectRoot: string, version: string = '1'): string {\n  const filename = path.join(projectRoot, 'foobar.js');\n  const cacheKey = `babel-cache-${version}-`;\n\n  const partial = loadPartialConfig({\n    filename,\n    cwd: projectRoot,\n    sourceFileName: filename,\n  });\n\n  return `${cacheKey}${JSON.stringify(partial!.options)}`;\n}\n\n/**\n * Creates a Rule for loading Application code and packages from the Expo ecosystem.\n * This method attempts to recreate how Metro loads ES modules in the `node_modules` folder.\n *\n * @param env\n * @internal\n */\nexport function createBabelLoaderFromEnvironment(\n  env: Pick<Environment, 'babel' | 'locations' | 'projectRoot' | 'config' | 'mode' | 'platform'>\n): Rule {\n  const mode = getMode(env);\n  const locations = env.locations || getPaths(env.projectRoot, env);\n  const appConfig = env.config || getConfig(env);\n\n  const { build = {} } = appConfig.web;\n  const { babel = {} } = build;\n\n  return createBabelLoader({\n    projectRoot: locations.root,\n    mode,\n    platform: env.platform,\n    babelProjectRoot: babel.root || locations.root,\n    verbose: babel.verbose,\n    include: [...(babel.include || []), ...(env.babel?.dangerouslyAddModulePathsToTranspile || [])],\n    use: babel.use,\n  });\n}\n/**\n * A complex babel loader which uses the project's `babel.config.js`\n * to resolve all of the Unimodules which are shipped as ES modules (early 2019).\n * @category loaders\n */\nexport default function createBabelLoader({\n  /**\n   * The webpack mode: `\"production\" | \"development\"`\n   */\n  mode,\n  projectRoot: inputProjectRoot,\n  babelProjectRoot,\n  include = [],\n  verbose,\n  platform = 'web',\n  useCustom,\n  ...options\n}: {\n  projectRoot?: string;\n  useCustom?: boolean;\n  mode?: Mode;\n  babelProjectRoot?: string;\n  include?: string[];\n  verbose?: boolean;\n  [key: string]: any;\n} = {}): Rule {\n  const ensuredProjectRoot = ensureRoot(babelProjectRoot);\n  const modules = [...includeModulesThatContainPaths, ...include];\n  const customUse = options.use || {};\n  const customUseOptions = customUse.options || {};\n\n  const isProduction = mode === 'production';\n\n  const projectRoot = inputProjectRoot || getPossibleProjectRoot();\n  let presetOptions: any = {\n    // Explicitly use babel.config.js instead of .babelrc\n    babelrc: false,\n    // Attempt to use local babel.config.js file for compiling project.\n    configFile: true,\n  };\n\n  if (\n    !fs.existsSync(path.join(projectRoot, 'babel.config.js')) &&\n    !fs.existsSync(path.join(projectRoot, '.babelrc'))\n  ) {\n    // If no babel config exists then fallback on the default `babel-preset-expo`\n    // which is installed with `expo`.\n    const modulePath = resolveFrom.silent(projectRoot, 'babel-preset-expo');\n    if (modulePath) {\n      presetOptions = {\n        babelrc: false,\n        configFile: false,\n        presets: [modulePath],\n      };\n    } else {\n      console.log(chalk.yellow('\\u203A Webpack failed to locate a valid Babel config'));\n    }\n  }\n\n  presetOptions = {\n    ...presetOptions,\n    ...(customUseOptions || {}),\n\n    sourceType: 'unambiguous',\n    root: ensuredProjectRoot,\n    compact: isProduction,\n    // Babel sourcemaps are needed for debugging into node_modules\n    // code.  Without the options below, debuggers like VSCode\n    // show incorrect code and set breakpoints on the wrong lines.\n    sourceMaps: shouldUseSourceMap,\n    inputSourceMap: shouldUseSourceMap,\n  };\n\n  let cacheIdentifier: string | undefined = customUseOptions.cacheIdentifier;\n  if (!cacheIdentifier) {\n    try {\n      cacheIdentifier = generateCacheIdentifier(ensuredProjectRoot);\n    } catch (error) {\n      console.log(chalk.black.bgRed(`The project's Babel config is invalid: ${error.message}`));\n\n      throw error;\n    }\n  }\n  presetOptions.cacheIdentifier = cacheIdentifier;\n  presetOptions.cacheCompression = false;\n  presetOptions.cacheDirectory =\n    customUseOptions.cacheDirectory ||\n    path.join(\n      ensuredProjectRoot,\n      '.expo',\n      platform,\n      'cache',\n      mode || 'development',\n      'babel-loader'\n    );\n  presetOptions.caller = {\n    __dangerous_rule_id: 'expo-babel-loader',\n    bundler: 'webpack',\n    platform,\n    mode,\n  };\n  return {\n    test: /\\.(mjs|[jt]sx?)$/,\n    // Can only clobber test\n    // Prevent clobbering the `include` and `use` values.\n    ...options,\n    include(inputPath: string): boolean {\n      for (const possibleModule of modules) {\n        if (inputPath.includes(path.normalize(possibleModule))) {\n          if (verbose) {\n            const packageName = packageNameFromPath(inputPath);\n            if (packageName) logPackage(packageName);\n          }\n          return true;\n        }\n      }\n      // Is inside the project and is not one of designated modules\n      if (inputPath.includes(ensuredProjectRoot)) {\n        for (const excluded of excludedRootPaths) {\n          if (inputPath.includes(path.normalize(excluded))) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    use: {\n      ...customUse,\n      loader: require.resolve('babel-loader'),\n      options: presetOptions,\n    },\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}