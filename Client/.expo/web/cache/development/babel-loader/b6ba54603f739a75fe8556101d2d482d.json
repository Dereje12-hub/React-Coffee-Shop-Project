{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compositeImagesAsync = exports.generateFaviconAsync = exports.generateImageAsync = void 0;\n\nvar chalk_1 = __importDefault(require(\"chalk\"));\n\nvar mime_1 = __importDefault(require(\"mime\"));\n\nvar Cache = __importStar(require(\"./Cache\"));\n\nvar Download = __importStar(require(\"./Download\"));\n\nvar Ico = __importStar(require(\"./Ico\"));\n\nvar Jimp = __importStar(require(\"./jimp\"));\n\nvar Sharp = __importStar(require(\"./sharp\"));\n\nvar supportedMimeTypes = ['image/png', 'image/jpeg', 'image/webp', 'image/gif'];\nvar hasWarned = false;\n\nfunction resizeImagesAsync(buffer, sizes) {\n  var sharp;\n  return _regeneratorRuntime.async(function resizeImagesAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getSharpAsync());\n\n        case 2:\n          sharp = _context.sent;\n\n          if (sharp) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Jimp.resizeBufferAsync(buffer, sizes));\n\n        case 5:\n          return _context.abrupt(\"return\", Sharp.resizeBufferAsync(buffer, sizes));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction resizeAsync(imageOptions) {\n  var sharp, width, height, backgroundColor, resizeMode, inputOptions, jimp, imgBuffer, sharpBuffer, mask, message;\n  return _regeneratorRuntime.async(function resizeAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getSharpAsync());\n\n        case 2:\n          sharp = _context2.sent;\n          width = imageOptions.width, height = imageOptions.height, backgroundColor = imageOptions.backgroundColor, resizeMode = imageOptions.resizeMode;\n\n          if (sharp) {\n            _context2.next = 17;\n            break;\n          }\n\n          inputOptions = {\n            input: imageOptions.src,\n            quality: 100\n          };\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(Jimp.resize(inputOptions, {\n            width: width,\n            height: height,\n            fit: resizeMode,\n            background: backgroundColor\n          }));\n\n        case 8:\n          jimp = _context2.sent;\n\n          if (imageOptions.removeTransparency) {\n            jimp.colorType(2);\n          }\n\n          if (!imageOptions.borderRadius) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(Jimp.circleAsync(jimp));\n\n        case 13:\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(jimp.getBufferAsync(jimp.getMIME()));\n\n        case 15:\n          imgBuffer = _context2.sent;\n          return _context2.abrupt(\"return\", imgBuffer);\n\n        case 17:\n          _context2.prev = 17;\n          sharpBuffer = sharp(imageOptions.src).ensureAlpha().resize(width, height, {\n            fit: resizeMode,\n            background: 'transparent'\n          });\n\n          if (backgroundColor && backgroundColor !== 'transparent') {\n            sharpBuffer = sharpBuffer.composite([{\n              input: {\n                create: {\n                  width: width,\n                  height: height,\n                  channels: imageOptions.removeTransparency ? 3 : 4,\n                  background: backgroundColor\n                }\n              },\n              blend: 'dest-over'\n            }]);\n          } else if (imageOptions.removeTransparency) {\n            sharpBuffer.flatten();\n          }\n\n          if (imageOptions.borderRadius) {\n            mask = Buffer.from(\"<svg><rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\" \\n        rx=\\\"\" + imageOptions.borderRadius + \"\\\" ry=\\\"\" + imageOptions.borderRadius + \"\\\" \\n        fill=\\\"\" + (backgroundColor && backgroundColor !== 'transparent' ? backgroundColor : 'none') + \"\\\" /></svg>\");\n            sharpBuffer.composite([{\n              input: mask,\n              blend: 'dest-over'\n            }]);\n          }\n\n          _context2.next = 23;\n          return _regeneratorRuntime.awrap(sharpBuffer.png().toBuffer());\n\n        case 23:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 26:\n          _context2.prev = 26;\n          _context2.t0 = _context2[\"catch\"](17);\n          message = _context2.t0.message;\n          throw new Error(\"It was not possible to generate splash screen '\" + imageOptions.src + \"'. \" + message);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[17, 26]], Promise);\n}\n\nfunction getSharpAsync() {\n  var sharp;\n  return _regeneratorRuntime.async(function getSharpAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Sharp.isAvailableAsync());\n\n        case 2:\n          if (!_context3.sent) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(Sharp.findSharpInstanceAsync());\n\n        case 5:\n          sharp = _context3.sent;\n\n        case 6:\n          return _context3.abrupt(\"return\", sharp);\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getDimensionsId(imageOptions) {\n  return imageOptions.width === imageOptions.height ? \"\" + imageOptions.width : imageOptions.width + \"x\" + imageOptions.height;\n}\n\nfunction maybeWarnAboutInstallingSharpAsync() {\n  return _regeneratorRuntime.async(function maybeWarnAboutInstallingSharpAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.t0 = !hasWarned;\n\n          if (!_context4.t0) {\n            _context4.next = 5;\n            break;\n          }\n\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(Sharp.isAvailableAsync());\n\n        case 4:\n          _context4.t0 = !_context4.sent;\n\n        case 5:\n          if (!_context4.t0) {\n            _context4.next = 8;\n            break;\n          }\n\n          hasWarned = true;\n          console.warn(chalk_1.default.yellow(\"Using node to generate images. This is much slower than using native packages.\\n\\u203A Optionally you can stop the process and try again after successfully running `npm install -g sharp-cli`.\\n\"));\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction ensureImageOptionsAsync(imageOptions) {\n  var icon, mimeType;\n  return _regeneratorRuntime.async(function ensureImageOptionsAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.t0 = _objectSpread;\n          _context5.t1 = _objectSpread({}, imageOptions);\n          _context5.t2 = {};\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(Download.downloadOrUseCachedImage(imageOptions.src));\n\n        case 5:\n          _context5.t3 = _context5.sent;\n          _context5.t4 = {\n            src: _context5.t3\n          };\n          icon = (0, _context5.t0)(_context5.t1, _context5.t2, _context5.t4);\n\n          if (!icon.resizeMode) {\n            icon.resizeMode = 'contain';\n          }\n\n          mimeType = mime_1.default.getType(icon.src);\n\n          if (mimeType) {\n            _context5.next = 12;\n            break;\n          }\n\n          throw new Error(\"Invalid mimeType for image with source: \" + icon.src);\n\n        case 12:\n          if (supportedMimeTypes.includes(mimeType)) {\n            _context5.next = 14;\n            break;\n          }\n\n          throw new Error(\"Supplied image is not a supported image type: \" + imageOptions.src);\n\n        case 14:\n          if (!icon.name) {\n            icon.name = \"icon_\" + getDimensionsId(imageOptions) + \".\" + mime_1.default.getExtension(mimeType);\n          }\n\n          return _context5.abrupt(\"return\", icon);\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction generateImageAsync(options, imageOptions) {\n  var icon, cacheKey, name, source;\n  return _regeneratorRuntime.async(function generateImageAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(ensureImageOptionsAsync(imageOptions));\n\n        case 2:\n          icon = _context6.sent;\n\n          if (options.cacheType) {\n            _context6.next = 11;\n            break;\n          }\n\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(maybeWarnAboutInstallingSharpAsync());\n\n        case 6:\n          _context6.t0 = icon.name;\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(resizeAsync(icon));\n\n        case 9:\n          _context6.t1 = _context6.sent;\n          return _context6.abrupt(\"return\", {\n            name: _context6.t0,\n            source: _context6.t1\n          });\n\n        case 11:\n          _context6.next = 13;\n          return _regeneratorRuntime.awrap(Cache.createCacheKeyWithDirectoryAsync(options.projectRoot, options.cacheType, icon));\n\n        case 13:\n          cacheKey = _context6.sent;\n          name = icon.name;\n          _context6.next = 17;\n          return _regeneratorRuntime.awrap(Cache.getImageFromCacheAsync(name, cacheKey));\n\n        case 17:\n          source = _context6.sent;\n\n          if (source) {\n            _context6.next = 26;\n            break;\n          }\n\n          _context6.next = 21;\n          return _regeneratorRuntime.awrap(maybeWarnAboutInstallingSharpAsync());\n\n        case 21:\n          _context6.next = 23;\n          return _regeneratorRuntime.awrap(resizeAsync(icon));\n\n        case 23:\n          source = _context6.sent;\n          _context6.next = 26;\n          return _regeneratorRuntime.awrap(Cache.cacheImageAsync(name, source, cacheKey));\n\n        case 26:\n          return _context6.abrupt(\"return\", {\n            name: name,\n            source: source\n          });\n\n        case 27:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.generateImageAsync = generateImageAsync;\n\nfunction generateFaviconAsync(pngImageBuffer) {\n  var sizes,\n      buffers,\n      _args7 = arguments;\n  return _regeneratorRuntime.async(function generateFaviconAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          sizes = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : [16, 32, 48];\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(resizeImagesAsync(pngImageBuffer, sizes));\n\n        case 3:\n          buffers = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(Ico.generateAsync(buffers));\n\n        case 6:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.generateFaviconAsync = generateFaviconAsync;\n\nfunction compositeImagesAsync(_ref2) {\n  var foreground, background, _ref2$x, x, _ref2$y, y, sharp, image;\n\n  return _regeneratorRuntime.async(function compositeImagesAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          foreground = _ref2.foreground, background = _ref2.background, _ref2$x = _ref2.x, x = _ref2$x === void 0 ? 0 : _ref2$x, _ref2$y = _ref2.y, y = _ref2$y === void 0 ? 0 : _ref2$y;\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(getSharpAsync());\n\n        case 3:\n          sharp = _context8.sent;\n\n          if (sharp) {\n            _context8.next = 17;\n            break;\n          }\n\n          _context8.next = 7;\n          return _regeneratorRuntime.awrap(Jimp.getJimpImageAsync(background));\n\n        case 7:\n          _context8.t0 = _context8.sent;\n          _context8.next = 10;\n          return _regeneratorRuntime.awrap(Jimp.getJimpImageAsync(foreground));\n\n        case 10:\n          _context8.t1 = _context8.sent;\n          _context8.t2 = x;\n          _context8.t3 = y;\n          image = _context8.t0.composite.call(_context8.t0, _context8.t1, _context8.t2, _context8.t3);\n          _context8.next = 16;\n          return _regeneratorRuntime.awrap(image.getBufferAsync(image.getMIME()));\n\n        case 16:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 17:\n          _context8.next = 19;\n          return _regeneratorRuntime.awrap(sharp(background).composite([{\n            input: foreground,\n            left: x,\n            top: y\n          }]).toBuffer());\n\n        case 19:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 20:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.compositeImagesAsync = compositeImagesAsync;","map":{"version":3,"sources":["../src/Image.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport mime from 'mime';\n\nimport * as Cache from './Cache';\nimport * as Download from './Download';\nimport * as Ico from './Ico';\nimport { ImageOptions } from './Image.types';\nimport * as Jimp from './jimp';\nimport * as Sharp from './sharp';\n\nconst supportedMimeTypes = ['image/png', 'image/jpeg', 'image/webp', 'image/gif'];\n\nlet hasWarned: boolean = false;\n\nasync function resizeImagesAsync(buffer: Buffer, sizes: number[]): Promise<Buffer[]> {\n  const sharp = await getSharpAsync();\n  if (!sharp) {\n    return Jimp.resizeBufferAsync(buffer, sizes);\n  }\n  return Sharp.resizeBufferAsync(buffer, sizes);\n}\n\nasync function resizeAsync(imageOptions: ImageOptions): Promise<Buffer> {\n  const sharp: any = await getSharpAsync();\n  const { width, height, backgroundColor, resizeMode } = imageOptions;\n  if (!sharp) {\n    const inputOptions: any = { input: imageOptions.src, quality: 100 };\n    const jimp = await Jimp.resize(inputOptions, {\n      width,\n      height,\n      fit: resizeMode,\n      background: backgroundColor,\n    });\n\n    if (imageOptions.removeTransparency) {\n      jimp.colorType(2);\n    }\n    if (imageOptions.borderRadius) {\n      // TODO: support setting border radius with Jimp. Currently only support making the image a circle\n      await Jimp.circleAsync(jimp);\n    }\n\n    const imgBuffer = await jimp.getBufferAsync(jimp.getMIME());\n    return imgBuffer;\n  }\n  try {\n    let sharpBuffer = sharp(imageOptions.src)\n      .ensureAlpha()\n      .resize(width, height, { fit: resizeMode, background: 'transparent' });\n\n    // Skip an extra step if the background is explicitly transparent.\n    if (backgroundColor && backgroundColor !== 'transparent') {\n      // Add the background color to the image\n      sharpBuffer = sharpBuffer.composite([\n        {\n          // create a background color\n          input: {\n            create: {\n              width,\n              height,\n              // allow alpha colors\n              channels: imageOptions.removeTransparency ? 3 : 4,\n              background: backgroundColor,\n            },\n          },\n          // dest-over makes the first image (input) appear on top of the created image (background color)\n          blend: 'dest-over',\n        },\n      ]);\n    } else if (imageOptions.removeTransparency) {\n      sharpBuffer.flatten();\n    }\n\n    if (imageOptions.borderRadius) {\n      const mask = Buffer.from(\n        `<svg><rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\" \n        rx=\"${imageOptions.borderRadius}\" ry=\"${imageOptions.borderRadius}\" \n        fill=\"${\n          backgroundColor && backgroundColor !== 'transparent' ? backgroundColor : 'none'\n        }\" /></svg>`\n      );\n      sharpBuffer.composite([{ input: mask, blend: 'dest-over' }]);\n    }\n\n    return await sharpBuffer.png().toBuffer();\n  } catch ({ message }) {\n    throw new Error(\n      `It was not possible to generate splash screen '${imageOptions.src}'. ${message}`\n    );\n  }\n}\n\nasync function getSharpAsync(): Promise<any> {\n  let sharp: any;\n  if (await Sharp.isAvailableAsync()) sharp = await Sharp.findSharpInstanceAsync();\n  return sharp;\n}\n\nfunction getDimensionsId(imageOptions: Pick<ImageOptions, 'width' | 'height'>): string {\n  return imageOptions.width === imageOptions.height\n    ? `${imageOptions.width}`\n    : `${imageOptions.width}x${imageOptions.height}`;\n}\n\nasync function maybeWarnAboutInstallingSharpAsync() {\n  // Putting the warning here will prevent the warning from showing if all images were reused from the cache\n  if (!hasWarned && !(await Sharp.isAvailableAsync())) {\n    hasWarned = true;\n    console.warn(\n      chalk.yellow(\n        `Using node to generate images. This is much slower than using native packages.\\n\\u203A Optionally you can stop the process and try again after successfully running \\`npm install -g sharp-cli\\`.\\n`\n      )\n    );\n  }\n}\n\nasync function ensureImageOptionsAsync(imageOptions: ImageOptions): Promise<ImageOptions> {\n  const icon = {\n    ...imageOptions,\n    src: await Download.downloadOrUseCachedImage(imageOptions.src),\n  };\n\n  // Default to contain\n  if (!icon.resizeMode) {\n    icon.resizeMode = 'contain';\n  }\n\n  const mimeType = mime.getType(icon.src);\n\n  if (!mimeType) {\n    throw new Error(`Invalid mimeType for image with source: ${icon.src}`);\n  }\n  if (!supportedMimeTypes.includes(mimeType)) {\n    throw new Error(`Supplied image is not a supported image type: ${imageOptions.src}`);\n  }\n\n  if (!icon.name) {\n    icon.name = `icon_${getDimensionsId(imageOptions)}.${mime.getExtension(mimeType)}`;\n  }\n\n  return icon;\n}\n\nexport async function generateImageAsync(\n  options: { projectRoot: string; cacheType?: string },\n  imageOptions: ImageOptions\n): Promise<{ source: Buffer; name: string }> {\n  const icon = await ensureImageOptionsAsync(imageOptions);\n\n  if (!options.cacheType) {\n    await maybeWarnAboutInstallingSharpAsync();\n    return { name: icon.name!, source: await resizeAsync(icon) };\n  }\n\n  const cacheKey = await Cache.createCacheKeyWithDirectoryAsync(\n    options.projectRoot,\n    options.cacheType,\n    icon\n  );\n\n  const name = icon.name!;\n  let source: Buffer | null = await Cache.getImageFromCacheAsync(name, cacheKey);\n\n  if (!source) {\n    await maybeWarnAboutInstallingSharpAsync();\n    source = await resizeAsync(icon);\n    await Cache.cacheImageAsync(name, source, cacheKey);\n  }\n\n  return { name, source };\n}\n\nexport async function generateFaviconAsync(\n  pngImageBuffer: Buffer,\n  sizes: number[] = [16, 32, 48]\n): Promise<Buffer> {\n  const buffers = await resizeImagesAsync(pngImageBuffer, sizes);\n  return await Ico.generateAsync(buffers);\n}\n\n/**\n * Layers the provided foreground image over the provided background image.\n *\n * @param foregroundImageBuffer\n * @param foregroundImageBuffer\n * @param x pixel offset from the left edge, defaults to 0.\n * @param y pixel offset from the top edge, defaults to 0.\n */\nexport async function compositeImagesAsync({\n  foreground,\n  background,\n  x = 0,\n  y = 0,\n}: {\n  foreground: Buffer;\n  background: Buffer;\n  x?: number;\n  y?: number;\n}): Promise<Buffer> {\n  const sharp: any = await getSharpAsync();\n  if (!sharp) {\n    const image = (await Jimp.getJimpImageAsync(background)).composite(\n      await Jimp.getJimpImageAsync(foreground),\n      x,\n      y\n    );\n    return await image.getBufferAsync(image.getMIME());\n  }\n  return await sharp(background)\n    .composite([{ input: foreground, left: x, top: y }])\n    .toBuffer();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}