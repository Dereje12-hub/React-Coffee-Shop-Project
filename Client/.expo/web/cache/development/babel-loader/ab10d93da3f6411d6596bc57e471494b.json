{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar uniqueString = require('unique-string');\n\nvar tempDir = require('temp-dir');\n\nvar getPath = function getPath() {\n  return path.join(tempDir, uniqueString());\n};\n\nmodule.exports.file = function (options) {\n  options = _objectSpread({\n    extension: ''\n  }, options);\n\n  if (options.name) {\n    if (options.extension) {\n      throw new Error('The `name` and `extension` options are mutually exclusive');\n    }\n\n    return path.join(module.exports.directory(), options.name);\n  }\n\n  return getPath() + '.' + options.extension.replace(/^\\./, '');\n};\n\nmodule.exports.directory = function () {\n  var directory = getPath();\n  fs.mkdirSync(directory);\n  return directory;\n};\n\nObject.defineProperty(module.exports, 'root', {\n  get: function get() {\n    return tempDir;\n  }\n});","map":{"version":3,"sources":["C:/Users/Dereje/node_modules/@expo/image-utils/node_modules/tempy/index.js"],"names":["fs","require","path","uniqueString","tempDir","getPath","join","module","exports","file","options","extension","name","Error","directory","replace","mkdirSync","Object","defineProperty","get"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AAEA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMH,IAAI,CAACI,IAAL,CAAUF,OAAV,EAAmBD,YAAY,EAA/B,CAAN;AAAA,CAAhB;;AAEAI,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsB,UAAAC,OAAO,EAAI;AAChCA,EAAAA,OAAO;AACNC,IAAAA,SAAS,EAAE;AADL,KAEHD,OAFG,CAAP;;AAKA,MAAIA,OAAO,CAACE,IAAZ,EAAkB;AACjB,QAAIF,OAAO,CAACC,SAAZ,EAAuB;AACtB,YAAM,IAAIE,KAAJ,CAAU,2DAAV,CAAN;AACA;;AAED,WAAOX,IAAI,CAACI,IAAL,CAAUC,MAAM,CAACC,OAAP,CAAeM,SAAf,EAAV,EAAsCJ,OAAO,CAACE,IAA9C,CAAP;AACA;;AAED,SAAOP,OAAO,KAAK,GAAZ,GAAkBK,OAAO,CAACC,SAAR,CAAkBI,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,CAAzB;AACA,CAfD;;AAiBAR,MAAM,CAACC,OAAP,CAAeM,SAAf,GAA2B,YAAM;AAChC,MAAMA,SAAS,GAAGT,OAAO,EAAzB;AACAL,EAAAA,EAAE,CAACgB,SAAH,CAAaF,SAAb;AACA,SAAOA,SAAP;AACA,CAJD;;AAMAG,MAAM,CAACC,cAAP,CAAsBX,MAAM,CAACC,OAA7B,EAAsC,MAAtC,EAA8C;AAC7CW,EAAAA,GAD6C,iBACvC;AACL,WAAOf,OAAP;AACA;AAH4C,CAA9C","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst uniqueString = require('unique-string');\nconst tempDir = require('temp-dir');\n\nconst getPath = () => path.join(tempDir, uniqueString());\n\nmodule.exports.file = options => {\n\toptions = {\n\t\textension: '',\n\t\t...options\n\t};\n\n\tif (options.name) {\n\t\tif (options.extension) {\n\t\t\tthrow new Error('The `name` and `extension` options are mutually exclusive');\n\t\t}\n\n\t\treturn path.join(module.exports.directory(), options.name);\n\t}\n\n\treturn getPath() + '.' + options.extension.replace(/^\\./, '');\n};\n\nmodule.exports.directory = () => {\n\tconst directory = getPath();\n\tfs.mkdirSync(directory);\n\treturn directory;\n};\n\nObject.defineProperty(module.exports, 'root', {\n\tget() {\n\t\treturn tempDir;\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}