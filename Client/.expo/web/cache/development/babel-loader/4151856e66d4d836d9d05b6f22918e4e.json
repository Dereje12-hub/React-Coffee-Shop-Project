{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Axios from 'axios';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport coffeeCups from \"../../images/CoffeeCups.jpg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomerOrderSize = function CustomerOrderSize(_ref) {\n  var COSTP = _ref.COSTP;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sizePrice = _useState2[0],\n      setSizePrice = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coffeeSizeList = _useState4[0],\n      setCoffeSizeList = _useState4[1];\n\n  useEffect(function () {\n    Axios.get('http://localhost:4000/order/coffeeSize').then(function (response) {\n      console.log(response.data);\n      setCoffeSizeList(response.data);\n    });\n  }, []);\n\n  var handleCoffeeSizePrice = function handleCoffeeSizePrice(e) {\n    setSizePrice(e.target.value);\n    console.log(e);\n  };\n\n  return _jsxs(\"div\", {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return COSTP(sizePrice);\n      },\n      children: _jsx(Image, {\n        style: styles.CoffeeImage,\n        source: coffeeCups,\n        onPress: function onPress() {\n          return COSTP(sizePrice);\n        }\n      })\n    }), _jsx(View, {\n      children: _jsx(DropdownCoffeeSize, {\n        style: styles.fontSize,\n        size: \"Choose size?\",\n        options: coffeeSizeList,\n        price: sizePrice,\n        onChange: handleCoffeeSizePrice\n      })\n    }), _jsxs(\"h5\", {\n      children: [\"Price: \", sizePrice]\n    })]\n  });\n};\n\nvar DropdownCoffeeSize = function DropdownCoffeeSize(_ref2) {\n  var size = _ref2.size,\n      price = _ref2.price,\n      options = _ref2.options,\n      onChange = _ref2.onChange;\n  return _jsxs(\"label\", {\n    children: [size, _jsx(\"select\", {\n      price: price,\n      onChange: onChange,\n      children: options.map(function (option) {\n        return _jsx(\"option\", {\n          value: option.price.toString(),\n          children: option.size\n        }, option.id);\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fontSize: {\n    fontSize: 200,\n    fontWeight: 'bold',\n    margin: 200\n  },\n  CoffeeImage: {\n    flex: 1,\n    aspectRatio: 1,\n    alignSelf: 'stretch',\n    width: 75,\n    resizeMode: 75\n  },\n  buttons: {\n    width: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'bottom',\n    paddingVertical: 12,\n    paddingHorizontal: 100,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  }\n});\nexport default CustomerOrderSize;","map":{"version":3,"sources":["C:/Users/Dereje/Documents/React-CoffeeShop-Project/Client/src/Components/CustomerOrder/CustomerOrderSize.js"],"names":["React","useEffect","useState","Axios","coffeeCups","CustomerOrderSize","COSTP","sizePrice","setSizePrice","coffeeSizeList","setCoffeSizeList","get","then","response","console","log","data","handleCoffeeSizePrice","e","target","value","styles","CoffeeImage","fontSize","DropdownCoffeeSize","size","price","options","onChange","map","option","toString","id","StyleSheet","create","body","flex","justifyContent","alignItems","fontWeight","margin","aspectRatio","alignSelf","width","resizeMode","buttons","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  //Pressable,\r\n  Text,\r\n  Button,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TextInput,\r\n\r\n} from 'react-native';\r\nimport Axios from 'axios'\r\nimport { TouchableOpacity } from 'react-native-web';\r\nimport coffeeCups from '../../images/CoffeeCups.jpg';\r\n\r\n//COSTP is customer order size type price\r\n//\r\nconst CustomerOrderSize = ({COSTP}) => {\r\n\r\n  //const [size, setSize] = useState(\"\");\r\n  const [sizePrice, setSizePrice] = useState(\"\");\r\n  const [coffeeSizeList, setCoffeSizeList] = useState([])\r\n\r\n    // const addSize = () => {\r\n    //      Axios.post(\"http://localhost:4000/addSize\", {\r\n    //            size: size,\r\n    //          }).then((response) => {\r\n    //             console.log(response);\r\n    //          });\r\n    //   }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:4000/order/coffeeSize').then((response) => {\r\n          console.log(response.data);\r\n          setCoffeSizeList(response.data)\r\n      });\r\n    }, []);\r\n\r\n  const handleCoffeeSizePrice = (e) => {\r\n     setSizePrice(e.target.value);\r\n     console.log(e);\r\n   };\r\n\r\n  return (\r\n    <div>\r\n          <TouchableOpacity onPress={ ()=>COSTP(sizePrice)}> \r\n            <Image\r\n             style={styles.CoffeeImage}\r\n             source={coffeeCups}\r\n             onPress={ ()=>COSTP(sizePrice)}\r\n           />\r\n           </TouchableOpacity>  \r\n    \r\n           <View><DropdownCoffeeSize\r\n                style={styles.fontSize}\r\n                size=\"Choose size?\"\r\n                options={coffeeSizeList}\r\n                price={sizePrice}\r\n                onChange={  \r\n                  handleCoffeeSizePrice\r\n                } />\r\n        </View> \r\n        <h5>Price: {sizePrice}</h5>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst DropdownCoffeeSize = ({ size, price, options, onChange }) => {\r\n  return (\r\n    <label>\r\n      {size}\r\n      <select price={price} onChange={onChange}>\r\n        {options.map((option) => (\r\n          <option key={option.id} value={option.price.toString()} >\r\n            {option.size}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n fontSize: {\r\n    fontSize: 200,\r\n    fontWeight: 'bold',\r\n    margin: 200,\r\n  },\r\n CoffeeImage: {\r\n    flex: 1,\r\n    aspectRatio: 1,\r\n    alignSelf: 'stretch',\r\n    width: 75,\r\n    resizeMode: 75,\r\n  },\r\n  buttons: {\r\n    width: \"100%\",\r\n    alignItems: 'center',\r\n    justifyContent: 'bottom',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 100,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n\r\n  },\r\n})\r\n\r\nexport default CustomerOrderSize;"]},"metadata":{},"sourceType":"module"}