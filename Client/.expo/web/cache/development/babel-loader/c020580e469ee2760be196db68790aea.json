{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHermesBytecodeBundleVersionAsync = exports.isHermesBytecodeBundleAsync = exports.maybeInconsistentEngineIosAsync = exports.maybeInconsistentEngineAndroidAsync = exports.maybeThrowFromInconsistentEngineAsync = exports.parseGradleProperties = exports.createHermesSourcemapAsync = exports.buildHermesBundleAsync = exports.isEnableHermesManaged = void 0;\n\nvar spawn_async_1 = __importDefault(require(\"@expo/spawn-async\"));\n\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nvar os_1 = __importDefault(require(\"os\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar process_1 = __importDefault(require(\"process\"));\n\nvar semver_1 = __importDefault(require(\"semver\"));\n\nvar importMetroFromProject_1 = require(\"./metro/importMetroFromProject\");\n\nfunction isEnableHermesManaged(expoConfig, platform) {\n  var _a, _b, _c, _d;\n\n  switch (platform) {\n    case 'android':\n      {\n        if (!gteSdkVersion(expoConfig, '42.0.0')) {\n          return false;\n        }\n\n        return ((_b = (_a = expoConfig.android) === null || _a === void 0 ? void 0 : _a.jsEngine) !== null && _b !== void 0 ? _b : expoConfig.jsEngine) === 'hermes';\n      }\n\n    case 'ios':\n      {\n        if (!gteSdkVersion(expoConfig, '43.0.0')) {\n          return false;\n        }\n\n        return ((_d = (_c = expoConfig.ios) === null || _c === void 0 ? void 0 : _c.jsEngine) !== null && _d !== void 0 ? _d : expoConfig.jsEngine) === 'hermes';\n      }\n\n    default:\n      return false;\n  }\n}\n\nexports.isEnableHermesManaged = isEnableHermesManaged;\n\nfunction buildHermesBundleAsync(projectRoot, code, map) {\n  var optimize,\n      tempDir,\n      tempBundleFile,\n      tempSourcemapFile,\n      tempHbcFile,\n      hermesCommand,\n      args,\n      _await$Promise$all,\n      _await$Promise$all2,\n      hbc,\n      sourcemap,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function buildHermesBundleAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          optimize = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n          tempDir = path_1.default.join(os_1.default.tmpdir(), \"expo-bundler-\" + process_1.default.pid);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.ensureDir(tempDir));\n\n        case 4:\n          _context.prev = 4;\n          tempBundleFile = path_1.default.join(tempDir, 'index.bundle');\n          tempSourcemapFile = path_1.default.join(tempDir, 'index.bundle.map');\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.writeFile(tempBundleFile, code));\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.writeFile(tempSourcemapFile, map));\n\n        case 11:\n          tempHbcFile = path_1.default.join(tempDir, 'index.hbc');\n          hermesCommand = importMetroFromProject_1.importHermesCommandFromProject(projectRoot);\n          args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile, '-output-source-map'];\n\n          if (optimize) {\n            args.push('-O');\n          }\n\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(spawn_async_1.default(hermesCommand, args));\n\n        case 17:\n          _context.next = 19;\n          return _regeneratorRuntime.awrap(Promise.all([fs_extra_1.default.readFile(tempHbcFile), createHermesSourcemapAsync(projectRoot, map, tempHbcFile + \".map\")]));\n\n        case 19:\n          _await$Promise$all = _context.sent;\n          _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n          hbc = _await$Promise$all2[0];\n          sourcemap = _await$Promise$all2[1];\n          return _context.abrupt(\"return\", {\n            hbc: hbc,\n            sourcemap: sourcemap\n          });\n\n        case 24:\n          _context.prev = 24;\n          _context.next = 27;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.remove(tempDir));\n\n        case 27:\n          return _context.finish(24);\n\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4,, 24, 28]], Promise);\n}\n\nexports.buildHermesBundleAsync = buildHermesBundleAsync;\n\nfunction createHermesSourcemapAsync(projectRoot, sourcemap, hermesMapFile) {\n  var composeSourceMaps, bundlerSourcemap, hermesSourcemap;\n  return _regeneratorRuntime.async(function createHermesSourcemapAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          composeSourceMaps = importMetroFromProject_1.importMetroSourceMapComposeSourceMapsFromProject(projectRoot);\n          bundlerSourcemap = JSON.parse(sourcemap);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.readJSON(hermesMapFile));\n\n        case 4:\n          hermesSourcemap = _context2.sent;\n          return _context2.abrupt(\"return\", JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap])));\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.createHermesSourcemapAsync = createHermesSourcemapAsync;\n\nfunction parseGradleProperties(content) {\n  var result = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(content.split('\\n')), _step; !(_step = _iterator()).done;) {\n    var line = _step.value;\n    line = line.trim();\n\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    var sepIndex = line.indexOf('=');\n    var key = line.substr(0, sepIndex);\n    var value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n\n  return result;\n}\n\nexports.parseGradleProperties = parseGradleProperties;\n\nfunction maybeThrowFromInconsistentEngineAsync(projectRoot, configFilePath, platform, isHermesManaged) {\n  var configFileName;\n  return _regeneratorRuntime.async(function maybeThrowFromInconsistentEngineAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          configFileName = path_1.default.basename(configFilePath);\n          _context3.t0 = platform === 'android';\n\n          if (!_context3.t0) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged));\n\n        case 5:\n          _context3.t0 = _context3.sent;\n\n        case 6:\n          if (!_context3.t0) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw new Error(\"JavaScript engine configuration is inconsistent between \" + configFileName + \" and Android native project.\\n\" + (\"In \" + configFileName + \": Hermes is \" + (isHermesManaged ? 'enabled' : 'not enabled') + \"\\n\") + (\"In Android native project: Hermes is \" + (isHermesManaged ? 'not enabled' : 'enabled') + \"\\n\") + \"Please check the following files for inconsistencies:\\n\" + (\"  - \" + configFilePath + \"\\n\") + (\"  - \" + path_1.default.join(projectRoot, 'android', 'gradle.properties') + \"\\n\") + (\"  - \" + path_1.default.join(projectRoot, 'android', 'app', 'build.gradle') + \"\\n\") + 'Learn more: https://expo.fyi/hermes-android-config');\n\n        case 8:\n          _context3.t1 = platform === 'ios';\n\n          if (!_context3.t1) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 12;\n          return _regeneratorRuntime.awrap(maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged));\n\n        case 12:\n          _context3.t1 = _context3.sent;\n\n        case 13:\n          if (!_context3.t1) {\n            _context3.next = 15;\n            break;\n          }\n\n          throw new Error(\"JavaScript engine configuration is inconsistent between \" + configFileName + \" and iOS native project.\\n\" + (\"In \" + configFileName + \": Hermes is \" + (isHermesManaged ? 'enabled' : 'not enabled') + \"\\n\") + (\"In iOS native project: Hermes is \" + (isHermesManaged ? 'not enabled' : 'enabled') + \"\\n\") + \"Please check the following files for inconsistencies:\\n\" + (\"  - \" + configFilePath + \"\\n\") + (\"  - \" + path_1.default.join(projectRoot, 'ios', 'Podfile') + \"\\n\") + (\"  - \" + path_1.default.join(projectRoot, 'ios', 'Podfile.properties.json') + \"\\n\") + 'Learn more: https://expo.fyi/hermes-ios-config');\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.maybeThrowFromInconsistentEngineAsync = maybeThrowFromInconsistentEngineAsync;\n\nfunction maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged) {\n  var appBuildGradlePath, content, isPropsReference, isHermesBare, gradlePropertiesPath, props, _isHermesBare;\n\n  return _regeneratorRuntime.async(function maybeInconsistentEngineAndroidAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          appBuildGradlePath = path_1.default.join(projectRoot, 'android', 'app', 'build.gradle');\n\n          if (!fs_extra_1.default.existsSync(appBuildGradlePath)) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.readFile(appBuildGradlePath, 'utf8'));\n\n        case 4:\n          content = _context4.sent;\n          isPropsReference = content.search(/^\\s*enableHermes:\\s*\\(findProperty\\('expo.jsEngine'\\) \\?: \"jsc\"\\) == \"hermes\",?\\s+/m) >= 0;\n          isHermesBare = content.search(/^\\s*enableHermes:\\s*true,?\\s+/m) >= 0;\n\n          if (!(!isPropsReference && isHermesManaged !== isHermesBare)) {\n            _context4.next = 9;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", true);\n\n        case 9:\n          gradlePropertiesPath = path_1.default.join(projectRoot, 'android', 'gradle.properties');\n\n          if (!fs_extra_1.default.existsSync(gradlePropertiesPath)) {\n            _context4.next = 19;\n            break;\n          }\n\n          _context4.t0 = parseGradleProperties;\n          _context4.next = 14;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.readFile(gradlePropertiesPath, 'utf8'));\n\n        case 14:\n          _context4.t1 = _context4.sent;\n          props = (0, _context4.t0)(_context4.t1);\n          _isHermesBare = props['expo.jsEngine'] === 'hermes';\n\n          if (!(isHermesManaged !== _isHermesBare)) {\n            _context4.next = 19;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", true);\n\n        case 19:\n          return _context4.abrupt(\"return\", false);\n\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.maybeInconsistentEngineAndroidAsync = maybeInconsistentEngineAndroidAsync;\n\nfunction maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged) {\n  var podfilePath, content, isPropsReference, isHermesBare, podfilePropertiesPath, props, _isHermesBare2;\n\n  return _regeneratorRuntime.async(function maybeInconsistentEngineIosAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          podfilePath = path_1.default.join(projectRoot, 'ios', 'Podfile');\n\n          if (!fs_extra_1.default.existsSync(podfilePath)) {\n            _context5.next = 9;\n            break;\n          }\n\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.readFile(podfilePath, 'utf8'));\n\n        case 4:\n          content = _context5.sent;\n          isPropsReference = content.search(/^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\] == 'hermes',?\\s+/m) >= 0;\n          isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n\n          if (!(!isPropsReference && isHermesManaged !== isHermesBare)) {\n            _context5.next = 9;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", true);\n\n        case 9:\n          podfilePropertiesPath = path_1.default.join(projectRoot, 'ios', 'Podfile.properties.json');\n\n          if (!fs_extra_1.default.existsSync(podfilePropertiesPath)) {\n            _context5.next = 17;\n            break;\n          }\n\n          _context5.next = 13;\n          return _regeneratorRuntime.awrap(parsePodfilePropertiesAsync(podfilePropertiesPath));\n\n        case 13:\n          props = _context5.sent;\n          _isHermesBare2 = props['expo.jsEngine'] === 'hermes';\n\n          if (!(isHermesManaged !== _isHermesBare2)) {\n            _context5.next = 17;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", true);\n\n        case 17:\n          return _context5.abrupt(\"return\", false);\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.maybeInconsistentEngineIosAsync = maybeInconsistentEngineIosAsync;\nvar HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nfunction isHermesBytecodeBundleAsync(file) {\n  var header;\n  return _regeneratorRuntime.async(function isHermesBytecodeBundleAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(readHermesHeaderAsync(file));\n\n        case 2:\n          header = _context6.sent;\n          return _context6.abrupt(\"return\", header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.isHermesBytecodeBundleAsync = isHermesBytecodeBundleAsync;\n\nfunction getHermesBytecodeBundleVersionAsync(file) {\n  var header;\n  return _regeneratorRuntime.async(function getHermesBytecodeBundleVersionAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(readHermesHeaderAsync(file));\n\n        case 2:\n          header = _context7.sent;\n\n          if (!(header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER)) {\n            _context7.next = 5;\n            break;\n          }\n\n          throw new Error('Invalid hermes bundle file');\n\n        case 5:\n          return _context7.abrupt(\"return\", header.readUInt32LE(8));\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.getHermesBytecodeBundleVersionAsync = getHermesBytecodeBundleVersionAsync;\n\nfunction readHermesHeaderAsync(file) {\n  var fd, buffer;\n  return _regeneratorRuntime.async(function readHermesHeaderAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.open(file, 'r'));\n\n        case 2:\n          fd = _context8.sent;\n          buffer = Buffer.alloc(12);\n          _context8.next = 6;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.read(fd, buffer, 0, 12, null));\n\n        case 6:\n          _context8.next = 8;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.close(fd));\n\n        case 8:\n          return _context8.abrupt(\"return\", buffer);\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction gteSdkVersion(expJson, sdkVersion) {\n  if (!expJson.sdkVersion) {\n    return false;\n  }\n\n  if (expJson.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver_1.default.gte(expJson.sdkVersion, sdkVersion);\n  } catch (e) {\n    throw new Error(expJson.sdkVersion + \" is not a valid version. Must be in the form of x.y.z\");\n  }\n}\n\nfunction parsePodfilePropertiesAsync(podfilePropertiesPath) {\n  return _regeneratorRuntime.async(function parsePodfilePropertiesAsync$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.t0 = JSON;\n          _context9.next = 4;\n          return _regeneratorRuntime.awrap(fs_extra_1.default.readFile(podfilePropertiesPath, 'utf8'));\n\n        case 4:\n          _context9.t1 = _context9.sent;\n          return _context9.abrupt(\"return\", _context9.t0.parse.call(_context9.t0, _context9.t1));\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t2 = _context9[\"catch\"](0);\n          return _context9.abrupt(\"return\", {});\n\n        case 11:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}","map":{"version":3,"sources":["../src/HermesBundler.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ExpoConfig, Platform } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport process from 'process';\nimport semver from 'semver';\n\nimport {\n  importHermesCommandFromProject,\n  importMetroSourceMapComposeSourceMapsFromProject,\n} from './metro/importMetroFromProject';\n\nexport function isEnableHermesManaged(expoConfig: ExpoConfig, platform: Platform): boolean {\n  switch (platform) {\n    case 'android': {\n      if (!gteSdkVersion(expoConfig, '42.0.0')) {\n        // Hermes on Android is supported after SDK 42.\n        return false;\n      }\n      return (expoConfig.android?.jsEngine ?? expoConfig.jsEngine) === 'hermes';\n    }\n    case 'ios': {\n      if (!gteSdkVersion(expoConfig, '43.0.0')) {\n        // Hermes on iOS is supported after SDK 43.\n        return false;\n      }\n      return (expoConfig.ios?.jsEngine ?? expoConfig.jsEngine) === 'hermes';\n    }\n    default:\n      return false;\n  }\n}\n\ninterface HermesBundleOutput {\n  hbc: Uint8Array;\n  sourcemap: string;\n}\nexport async function buildHermesBundleAsync(\n  projectRoot: string,\n  code: string,\n  map: string,\n  optimize: boolean = false\n): Promise<HermesBundleOutput> {\n  const tempDir = path.join(os.tmpdir(), `expo-bundler-${process.pid}`);\n  await fs.ensureDir(tempDir);\n  try {\n    const tempBundleFile = path.join(tempDir, 'index.bundle');\n    const tempSourcemapFile = path.join(tempDir, 'index.bundle.map');\n    await fs.writeFile(tempBundleFile, code);\n    await fs.writeFile(tempSourcemapFile, map);\n\n    const tempHbcFile = path.join(tempDir, 'index.hbc');\n    const hermesCommand = importHermesCommandFromProject(projectRoot);\n    const args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile, '-output-source-map'];\n    if (optimize) {\n      args.push('-O');\n    }\n    await spawnAsync(hermesCommand, args);\n\n    const [hbc, sourcemap] = await Promise.all([\n      fs.readFile(tempHbcFile),\n      createHermesSourcemapAsync(projectRoot, map, `${tempHbcFile}.map`),\n    ]);\n    return {\n      hbc,\n      sourcemap,\n    };\n  } finally {\n    await fs.remove(tempDir);\n  }\n}\n\nexport async function createHermesSourcemapAsync(\n  projectRoot: string,\n  sourcemap: string,\n  hermesMapFile: string\n): Promise<string> {\n  const composeSourceMaps = importMetroSourceMapComposeSourceMapsFromProject(projectRoot);\n  const bundlerSourcemap = JSON.parse(sourcemap);\n  const hermesSourcemap = await fs.readJSON(hermesMapFile);\n  return JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap]));\n}\n\nexport function parseGradleProperties(content: string): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (let line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    const sepIndex = line.indexOf('=');\n    const key = line.substr(0, sepIndex);\n    const value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport async function maybeThrowFromInconsistentEngineAsync(\n  projectRoot: string,\n  configFilePath: string,\n  platform: string,\n  isHermesManaged: boolean\n): Promise<void> {\n  const configFileName = path.basename(configFilePath);\n  if (\n    platform === 'android' &&\n    (await maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))\n  ) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'gradle.properties')}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` +\n        'Learn more: https://expo.fyi/hermes-android-config'\n    );\n  }\n\n  if (platform === 'ios' && (await maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile')}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` +\n        'Learn more: https://expo.fyi/hermes-ios-config'\n    );\n  }\n}\n\nexport async function maybeInconsistentEngineAndroidAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check android native project if by chance to be consistent between app config\n\n  // Check android/app/build.gradle for \"enableHermes: true\"\n  const appBuildGradlePath = path.join(projectRoot, 'android', 'app', 'build.gradle');\n  if (fs.existsSync(appBuildGradlePath)) {\n    const content = await fs.readFile(appBuildGradlePath, 'utf8');\n    const isPropsReference =\n      content.search(\n        /^\\s*enableHermes:\\s*\\(findProperty\\('expo.jsEngine'\\) \\?: \"jsc\"\\) == \"hermes\",?\\s+/m\n      ) >= 0;\n    const isHermesBare = content.search(/^\\s*enableHermes:\\s*true,?\\s+/m) >= 0;\n    if (!isPropsReference && isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(await fs.readFile(gradlePropertiesPath, 'utf8'));\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport async function maybeInconsistentEngineIosAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for \":hermes_enabled => true\"\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = await fs.readFile(podfilePath, 'utf8');\n    const isPropsReference =\n      content.search(\n        /^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\] == 'hermes',?\\s+/m\n      ) >= 0;\n    const isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n    if (!isPropsReference && isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    const props = await parsePodfilePropertiesAsync(podfilePropertiesPath);\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// https://github.com/facebook/hermes/blob/release-v0.5/include/hermes/BCGen/HBC/BytecodeFileFormat.h#L24-L25\nconst HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nexport async function isHermesBytecodeBundleAsync(file: string): Promise<boolean> {\n  const header = await readHermesHeaderAsync(file);\n  return header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n}\n\nexport async function getHermesBytecodeBundleVersionAsync(file: string): Promise<number> {\n  const header = await readHermesHeaderAsync(file);\n  if (header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n    throw new Error('Invalid hermes bundle file');\n  }\n  return header.readUInt32LE(8);\n}\n\nasync function readHermesHeaderAsync(file: string): Promise<Buffer> {\n  const fd = await fs.open(file, 'r');\n  const buffer = Buffer.alloc(12);\n  await fs.read(fd, buffer, 0, 12, null);\n  await fs.close(fd);\n  return buffer;\n}\n\n// Cloned from xdl/src/Versions.ts, we cannot use that because of circular dependency\nfunction gteSdkVersion(expJson: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!expJson.sdkVersion) {\n    return false;\n  }\n\n  if (expJson.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(expJson.sdkVersion, sdkVersion);\n  } catch (e) {\n    throw new Error(`${expJson.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nasync function parsePodfilePropertiesAsync(\n  podfilePropertiesPath: string\n): Promise<Record<string, string>> {\n  try {\n    return JSON.parse(await fs.readFile(podfilePropertiesPath, 'utf8'));\n  } catch (e) {\n    return {};\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}