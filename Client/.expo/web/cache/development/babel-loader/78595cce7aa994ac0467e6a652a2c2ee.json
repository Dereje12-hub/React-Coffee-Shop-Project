{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar webpack_1 = require(\"webpack\");\n\nfunction isNative(env) {\n  return !!env.platform && ['ios', 'android'].includes(env.platform);\n}\n\nfunction createSourceMapPlugin(webpackConfig) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _a, _b, _c, _d;\n\n  var mode = (_a = env.mode) !== null && _a !== void 0 ? _a : webpackConfig.mode;\n  var isDev = mode !== 'production';\n  return new webpack_1.SourceMapDevToolPlugin(_objectSpread({\n    test: /\\.(js|tsx?|(js)?bundle)($|\\?)/i,\n    exclude: /\\.chunk\\.(js)?bundle$/,\n    filename: (_c = (_b = webpackConfig.output) === null || _b === void 0 ? void 0 : _b.sourceMapFilename) !== null && _c !== void 0 ? _c : '[file].map',\n    append: \"//# sourceMappingURL=[url]?platform=\" + env.platform,\n    moduleFilenameTemplate: (_d = webpackConfig.output) === null || _d === void 0 ? void 0 : _d.devtoolModuleFilenameTemplate\n  }, isDev ? {\n    module: true,\n    columns: false\n  } : {}));\n}\n\nfunction withPlatformSourceMaps(webpackConfig) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isNative(env)) {\n    return webpackConfig;\n  }\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n  webpackConfig.plugins.push(createSourceMapPlugin(webpackConfig, env));\n  webpackConfig.devtool = false;\n  return webpackConfig;\n}\n\nexports.default = withPlatformSourceMaps;","map":{"version":3,"sources":["../../src/addons/withSourceMaps.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAIA,SAAS,QAAT,CAAkB,GAAlB,EAAyD;AACvD,SAAO,CAAC,CAAC,GAAG,CAAC,QAAN,IAAkB,CAAC,KAAD,EAAQ,SAAR,EAAmB,QAAnB,CAA4B,GAAG,CAAC,QAAhC,CAAzB;AACD;;AAED,SAAS,qBAAT,CACE,aADF,EAEuD;AAAA,MAArD,GAAqD,uEAAF,EAAE;;;;AAErD,MAAM,IAAI,GAAG,CAAA,EAAA,GAAA,GAAG,CAAC,IAAJ,MAAQ,IAAR,IAAQ,EAAA,KAAA,KAAA,CAAR,GAAQ,EAAR,GAAY,aAAa,CAAC,IAAvC;AACA,MAAM,KAAK,GAAG,IAAI,KAAK,YAAvB;AAEA,SAIE,IAAI,SAAA,CAAA,sBAAJ;AACE,IAAA,IAAI,EAAE,gCADR;AAEE,IAAA,OAAO,EAAE,uBAFX;AAGE,IAAA,QAAQ,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,aAAa,CAAC,MAAd,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,iBAAtB,MAAuC,IAAvC,IAAuC,EAAA,KAAA,KAAA,CAAvC,GAAuC,EAAvC,GAA2C,YAHvD;AAIE,IAAA,MAAM,2CAAyC,GAAG,CAAC,QAJrD;AAME,IAAA,sBAAsB,EAAE,CAAA,EAAA,GAAA,aAAa,CAAC,MAAd,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE;AANhD,KAQM,KAAK,GACL;AAGE,IAAA,MAAM,EAAE,IAHV;AAIE,IAAA,OAAO,EAAE;AAJX,GADK,GAOL,EAfN,EAJF;AAwBD;;AAUD,SAAwB,sBAAxB,CACE,aADF,EAEuD;AAAA,MAArD,GAAqD,uEAAF,EAAE;;AAErD,MAAI,CAAC,QAAQ,CAAC,GAAD,CAAb,EAAoB;AAClB,WAAO,aAAP;AACD;;AAED,MAAI,CAAC,aAAa,CAAC,OAAnB,EAA4B,aAAa,CAAC,OAAd,GAAwB,EAAxB;AAE5B,EAAA,aAAa,CAAC,OAAd,CAAsB,IAAtB,CAA2B,qBAAqB,CAAC,aAAD,EAAgB,GAAhB,CAAhD;AACA,EAAA,aAAa,CAAC,OAAd,GAAwB,KAAxB;AAEA,SAAO,aAAP;AACD;;AAdD,OAAA,CAAA,OAAA,GAAA,sBAAA","sourcesContent":["import { SourceMapDevToolPlugin } from 'webpack';\n\nimport { AnyConfiguration, InputEnvironment } from '../types';\n\nfunction isNative(env: Pick<InputEnvironment, 'platform'>): boolean {\n  return !!env.platform && ['ios', 'android'].includes(env.platform);\n}\n\nfunction createSourceMapPlugin(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'mode' | 'platform'> = {}\n) {\n  const mode = env.mode ?? webpackConfig.mode;\n  const isDev = mode !== 'production';\n\n  return (\n    // This is a hack that we use in place of devtool because the index.bundle is not index.js on native.\n    // The default devtool won't test for .bundle and there's no way to set it there.\n    // This doesn't support inline source maps.\n    new SourceMapDevToolPlugin({\n      test: /\\.(js|tsx?|(js)?bundle)($|\\?)/i,\n      exclude: /\\.chunk\\.(js)?bundle$/,\n      filename: webpackConfig.output?.sourceMapFilename ?? '[file].map',\n      append: `//# sourceMappingURL=[url]?platform=${env.platform!}`,\n      // @ts-ignore: this is how webpack works internally\n      moduleFilenameTemplate: webpackConfig.output?.devtoolModuleFilenameTemplate,\n      // Emulate the `devtool` settings based on CRA defaults\n      ...(isDev\n        ? {\n            // `module: false` = cheap-module-source-map -- less accurate but faster\n            // `module: true` = more accurate but some paths are non existent\n            module: true,\n            columns: false,\n          }\n        : {\n            // source-map\n          }),\n    })\n  );\n}\n\n/**\n * Because webpack doesn't support `.bundle` extensions (why should they).\n * We need to extract the default settings for source maps and create a native source map plugin.\n * This does nothing if the env.platform is not ios or android.\n *\n * @param webpackConfig\n * @param env\n */\nexport default function withPlatformSourceMaps(\n  webpackConfig: AnyConfiguration,\n  env: Pick<InputEnvironment, 'platform' | 'mode'> = {}\n): AnyConfiguration {\n  if (!isNative(env)) {\n    return webpackConfig;\n  }\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n\n  webpackConfig.plugins.push(createSourceMapPlugin(webpackConfig, env));\n  webpackConfig.devtool = false;\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}