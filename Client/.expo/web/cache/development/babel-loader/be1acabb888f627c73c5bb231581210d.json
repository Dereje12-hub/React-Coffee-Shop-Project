{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ignoreExternalModules = void 0;\n\nvar paths_1 = require(\"@expo/config/paths\");\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar env_1 = require(\"../env\");\n\nvar loaders_1 = require(\"../loaders\");\n\nvar ExpoDefinePlugin_1 = __importDefault(require(\"../plugins/ExpoDefinePlugin\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar withAlias_1 = __importDefault(require(\"./withAlias\"));\n\nvar withEntry_1 = __importDefault(require(\"./withEntry\"));\n\nfunction withUnimodules() {\n  var webpackConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var argv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _a;\n\n  env.projectRoot = env.projectRoot || webpackConfig.context || paths_1.getPossibleProjectRoot();\n  webpackConfig = withAlias_1.default(webpackConfig, env_1.getAliases(env.projectRoot));\n  var isWebpack5 = argv.webpack5;\n  if (!webpackConfig.module) webpackConfig.module = {\n    rules: []\n  };else if (!webpackConfig.module.rules) webpackConfig.module = _objectSpread(_objectSpread({}, webpackConfig.module), {}, {\n    rules: []\n  });\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n  if (!webpackConfig.resolve) webpackConfig.resolve = {};\n  if (!webpackConfig.output) webpackConfig.output = {};\n  env.mode = env.mode || webpackConfig.mode;\n  var environment = env_1.validateEnvironment(env);\n  var supportsFontLoading = argv.supportsFontLoading;\n\n  if (typeof supportsFontLoading === 'undefined') {\n    var supportedFonts = ['ttf', 'otf', 'woff', 'woff2', 'eot'];\n    var testFontFileNames = supportedFonts.map(function (ext) {\n      return path_1.default.resolve(environment.projectRoot, \"cool-font.\" + ext);\n    });\n\n    if (utils_1.rulesMatchAnyFiles(webpackConfig, testFontFileNames)) {\n      supportsFontLoading = false;\n    }\n  }\n\n  var _env$platform = env.platform,\n      platform = _env$platform === void 0 ? 'web' : _env$platform;\n  var config = argv.expoConfig || env_1.getConfig(environment);\n  var mode = env_1.getMode(env);\n  var locations = env.locations || env_1.getPaths(environment.projectRoot, environment);\n\n  var _ref = config.web || {},\n      _ref$build = _ref.build,\n      buildConfig = _ref$build === void 0 ? {} : _ref$build;\n\n  var _buildConfig$babel = buildConfig.babel,\n      babelAppConfig = _buildConfig$babel === void 0 ? {} : _buildConfig$babel;\n  var babelProjectRoot = babelAppConfig.root || locations.root;\n  var babelLoader = loaders_1.createBabelLoader({\n    projectRoot: locations.root,\n    mode: mode,\n    platform: platform,\n    babelProjectRoot: babelProjectRoot,\n    verbose: babelAppConfig.verbose,\n    include: [].concat(_toConsumableArray(babelAppConfig.include || []), _toConsumableArray(((_a = env.babel) === null || _a === void 0 ? void 0 : _a.dangerouslyAddModulePathsToTranspile) || [])),\n    use: babelAppConfig.use\n  });\n\n  function reuseOrCreatePublicPaths() {\n    if (webpackConfig.output && webpackConfig.output.publicPath) {\n      var _publicPath = webpackConfig.output.publicPath;\n      return {\n        publicPath: _publicPath,\n        publicUrl: _publicPath.endsWith('/') ? _publicPath.slice(0, -1) : _publicPath\n      };\n    }\n\n    return env_1.getPublicPaths(environment);\n  }\n\n  var _reuseOrCreatePublicP = reuseOrCreatePublicPaths(),\n      publicPath = _reuseOrCreatePublicP.publicPath,\n      publicUrl = _reuseOrCreatePublicP.publicUrl;\n\n  webpackConfig.mode = mode;\n  webpackConfig.output = _objectSpread(_objectSpread({}, webpackConfig.output), {}, {\n    publicPath: publicPath\n  });\n  webpackConfig.plugins.push(new ExpoDefinePlugin_1.default({\n    mode: mode,\n    publicUrl: publicUrl,\n    config: config\n  }));\n  var rules = [].concat(_toConsumableArray(webpackConfig.module.rules), [{\n    test: /\\.html$/,\n    use: ['html-loader'],\n    exclude: locations.template.folder\n  }, babelLoader, supportsFontLoading && loaders_1.createFontLoader(locations.root, locations.includeModule)]).filter(Boolean);\n  webpackConfig.module = _objectSpread(_objectSpread({}, webpackConfig.module), {}, {\n    rules: rules\n  });\n  webpackConfig.resolve = _objectSpread(_objectSpread({}, webpackConfig.resolve), {}, {\n    symlinks: false,\n    extensions: env_1.getModuleFileExtensions('web')\n  });\n  var includeFunc = babelLoader.include;\n  webpackConfig = ignoreExternalModules(webpackConfig, includeFunc, isWebpack5);\n  webpackConfig = withEntry_1.default(webpackConfig, env, {\n    entryPath: 'resize-observer-polyfill/dist/ResizeObserver.global'\n  });\n  return webpackConfig;\n}\n\nexports.default = withUnimodules;\n\nfunction ignoreExternalModules(webpackConfig, shouldIncludeModule, isWebpack5) {\n  if (!webpackConfig.externals) {\n    return webpackConfig;\n  }\n\n  if (!Array.isArray(webpackConfig.externals)) {\n    webpackConfig.externals = [webpackConfig.externals];\n  }\n\n  webpackConfig.externals = webpackConfig.externals.map(function (external) {\n    if (typeof external !== 'function') {\n      return external;\n    }\n\n    if (isWebpack5) {\n      return function (ctx) {\n        var relPath = path_1.default.join('node_modules', ctx.request);\n        return shouldIncludeModule(relPath) ? undefined : external(ctx);\n      };\n    }\n\n    return function (ctx, req, cb) {\n      var relPath = path_1.default.join('node_modules', req);\n      return shouldIncludeModule(relPath) ? cb() : external(ctx, req, cb);\n    };\n  });\n  return webpackConfig;\n}\n\nexports.ignoreExternalModules = ignoreExternalModules;","map":{"version":3,"sources":["../../src/addons/withUnimodules.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPossibleProjectRoot } from '@expo/config/paths';\nimport path from 'path';\nimport { ExternalsFunctionElement } from 'webpack';\n\nimport {\n  getAliases,\n  getConfig,\n  getMode,\n  getModuleFileExtensions,\n  getPaths,\n  getPublicPaths,\n  validateEnvironment,\n} from '../env';\nimport { createBabelLoader, createFontLoader } from '../loaders';\n// importing from \"../plugins\" will cause dependency issues with next-adapter\n// other plugins import webpack4 packages which error on load when next-adapter uses webpack5\nimport ExpoDefinePlugin from '../plugins/ExpoDefinePlugin';\nimport { AnyConfiguration, Arguments, Environment, InputEnvironment } from '../types';\nimport { rulesMatchAnyFiles } from '../utils';\nimport withAlias from './withAlias';\nimport withEntry from './withEntry';\n\n/**\n * Wrap your existing webpack config with support for Unimodules.\n * ex: Storybook `({ config }) => withUnimodules(config)`\n *\n * @param webpackConfig Optional existing Webpack config to modify.\n * @param env Optional Environment options for configuring what features the Webpack config supports.\n * @param argv\n * @category addons\n */\nexport default function withUnimodules(\n  webpackConfig: AnyConfiguration = {},\n  env: InputEnvironment = {},\n  argv: Arguments = {}\n): AnyConfiguration {\n  // @ts-ignore: We should attempt to use the project root that the other config is already using (used for Gatsby support).\n  env.projectRoot = env.projectRoot || webpackConfig.context || getPossibleProjectRoot();\n\n  // Add native react aliases\n  webpackConfig = withAlias(webpackConfig, getAliases(env.projectRoot));\n\n  const isWebpack5 = argv.webpack5;\n\n  if (!webpackConfig.module) webpackConfig.module = { rules: [] };\n  else if (!webpackConfig.module.rules)\n    webpackConfig.module = { ...webpackConfig.module, rules: [] };\n\n  if (!webpackConfig.plugins) webpackConfig.plugins = [];\n  if (!webpackConfig.resolve) webpackConfig.resolve = {};\n  if (!webpackConfig.output) webpackConfig.output = {};\n\n  // Attempt to use the input webpack config mode\n  env.mode = env.mode || webpackConfig.mode;\n\n  const environment: Environment = validateEnvironment(env);\n\n  let { supportsFontLoading } = argv;\n\n  // If the args don't specify this then we'll check if the input already supports font loading.\n  if (typeof supportsFontLoading === 'undefined') {\n    const supportedFonts = ['ttf', 'otf', 'woff', 'woff2', 'eot'];\n    const testFontFileNames = supportedFonts.map(ext =>\n      path.resolve(environment.projectRoot, `cool-font.${ext}`)\n    );\n    if (rulesMatchAnyFiles(webpackConfig, testFontFileNames)) {\n      supportsFontLoading = false;\n    }\n  }\n\n  const { platform = 'web' } = env;\n\n  const config = argv.expoConfig || getConfig(environment);\n\n  const mode = getMode(env);\n  const locations = env.locations || getPaths(environment.projectRoot, environment);\n\n  const { build: buildConfig = {} } = config.web || {};\n  const { babel: babelAppConfig = {} } = buildConfig;\n\n  const babelProjectRoot = babelAppConfig.root || locations.root;\n\n  const babelLoader = createBabelLoader({\n    projectRoot: locations.root,\n    mode,\n    platform,\n    babelProjectRoot,\n    verbose: babelAppConfig.verbose,\n    include: [\n      ...(babelAppConfig.include || []),\n      ...(env.babel?.dangerouslyAddModulePathsToTranspile || []),\n    ],\n    use: babelAppConfig.use,\n  });\n\n  function reuseOrCreatePublicPaths() {\n    if (webpackConfig.output && webpackConfig.output.publicPath) {\n      const publicPath = webpackConfig.output.publicPath;\n      return {\n        publicPath,\n        publicUrl: publicPath.endsWith('/') ? publicPath.slice(0, -1) : publicPath,\n      };\n    }\n    return getPublicPaths(environment);\n  }\n\n  const { publicPath, publicUrl } = reuseOrCreatePublicPaths();\n\n  webpackConfig.mode = mode;\n\n  webpackConfig.output = {\n    // This is the URL that app is served from.\n    // We use \"/\" in development.\n    ...webpackConfig.output,\n    publicPath,\n  };\n\n  webpackConfig.plugins.push(\n    // Used for surfacing information related to constants\n    new ExpoDefinePlugin({\n      mode,\n      publicUrl,\n      config,\n    })\n  );\n\n  const rules = [\n    ...webpackConfig.module.rules,\n\n    // TODO: Bacon: Auto remove this loader\n    {\n      test: /\\.html$/,\n      use: ['html-loader'],\n      exclude: locations.template.folder,\n    },\n    // Process application code with Babel.\n    babelLoader,\n\n    supportsFontLoading && createFontLoader(locations.root, locations.includeModule),\n  ].filter(Boolean);\n\n  webpackConfig.module = {\n    ...webpackConfig.module,\n    rules,\n  };\n\n  webpackConfig.resolve = {\n    ...webpackConfig.resolve,\n    symlinks: false,\n    // Support platform extensions like .web.js\n    extensions: getModuleFileExtensions('web'),\n  };\n\n  // Transpile and remove expo modules from Next.js externals.\n  const includeFunc = babelLoader.include as (path: string) => boolean;\n  webpackConfig = ignoreExternalModules(webpackConfig, includeFunc, isWebpack5);\n\n  // Add a loose requirement on the ResizeObserver polyfill if it's installed...\n  webpackConfig = withEntry(webpackConfig, env, {\n    entryPath: 'resize-observer-polyfill/dist/ResizeObserver.global',\n  });\n\n  return webpackConfig;\n}\n\n/**\n * We have to transpile these modules and make them not external too.\n * We have to do this because next.js by default externals all `node_modules`'s js files.\n *\n * Reference:\n * - https://github.com/martpie/next-transpile-modules/blob/77450a0c0307e4b650d7acfbc18641ef9465f0da/index.js#L48-L62\n * - https://github.com/zeit/next.js/blob/0b496a45e85f3c9aa3cf2e77eef10888be5884fc/packages/next/build/webpack-config.ts#L185-L258\n * - `include` function is from https://github.com/expo/expo-cli/blob/3933f3d6ba65bffec2738ece71b62f2c284bd6e4/packages/webpack-config/webpack/loaders/createBabelLoaderAsync.js#L76-L96\n *\n * @param webpackConfig Config to be modified\n * @param shouldIncludeModule A method that returns a boolean when the input module should be transpiled and externed.\n */\nexport function ignoreExternalModules(\n  webpackConfig: AnyConfiguration,\n  shouldIncludeModule: (path: string) => boolean,\n  isWebpack5: boolean\n): AnyConfiguration {\n  if (!webpackConfig.externals) {\n    return webpackConfig;\n  }\n  if (!Array.isArray(webpackConfig.externals)) {\n    webpackConfig.externals = [webpackConfig.externals];\n  }\n  webpackConfig.externals = webpackConfig.externals.map(external => {\n    if (typeof external !== 'function') {\n      return external;\n    }\n\n    if (isWebpack5) {\n      return (ctx => {\n        const relPath = path.join('node_modules', ctx.request);\n        return shouldIncludeModule(relPath) ? undefined : (external as (content: any) => any)(ctx);\n      }) as ExternalsFunctionElement;\n    }\n\n    return ((ctx, req, cb) => {\n      const relPath = path.join('node_modules', req);\n      return shouldIncludeModule(relPath) ? cb() : external(ctx, req, cb);\n    }) as ExternalsFunctionElement;\n  });\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}