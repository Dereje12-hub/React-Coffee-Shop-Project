{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Axios from \"axios\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport coffeeLogo from \"../../images/coffeeLogo.png\";\nimport coffeeKey from \"../../images/coffeeKey.jpg\";\nimport RegistrationScreen from \"../RegistrationScreen/RegistrationScreen\";\nimport WelcomeScreen from \"../WelcomeScreen/WelcomeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState('No'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loginStatus = _useState6[0],\n      setLoginStatus = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      starttime = _useState8[0],\n      setStartTime = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      endtime = _useState10[0],\n      setEndTime = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      startdate = _useState12[0],\n      setStartDate = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showMessage = _useState14[0],\n      setShowMessage = _useState14[1];\n\n  var showAlert = function showAlert() {\n    alert('Wrong user or password!');\n  };\n\n  function Register() {\n    console.log(\"Go to Registry Screen!\");\n  }\n\n  var AuthenticateUserPassword = function AuthenticateUserPassword() {\n    if (username.length < 0) {\n      setShowMessage(\"check the size of username input!\");\n    } else {}\n  };\n\n  return _jsxs(ImageBackground, {\n    style: styles.background,\n    source: coffeeKey,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: coffeeLogo\n    }), _jsxs(View, {\n      style: styles.body,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Login\"\n      }), _jsxs(\"div\", {\n        children: [_jsx(Text, {\n          style: styles.textType,\n          children: \"Username\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter your userName!\",\n          value: username.names,\n          onChange: function onChange(e) {\n            setUsername(e.target.value);\n            console.log(e.target.value);\n          }\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(Text, {\n          style: styles.textType,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter your Password!\",\n          value: password.passwords,\n          onChange: function onChange(e) {\n            setPassword(e.target.value);\n            console.log(e.target.value);\n          }\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(Button, {\n          onPress: function onPress() {\n            return AuthenticateUserPassword();\n          },\n          title: \"Submit\",\n          color: \"green\"\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return Register();\n          },\n          title: \"SignUp\",\n          color: \"black\"\n        })]\n      }), _jsx(\"div\", {\n        children: _jsx(\"h1\", {\n          style: {\n            color: 'RED'\n          },\n          children: showMessage\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: 'center'\n  },\n  loginButton: {\n    width: '100%',\n    height: 70,\n    backgroundColor: \"#fc5c65\"\n  },\n  passwordButton: {\n    width: '100%',\n    height: 70,\n    backgroundColor: \"#4ecdc4\"\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    position: \"absolute\",\n    top: 50,\n    margin: 20,\n    opacity: 0.9\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#0080ff'\n  },\n  text: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    margin: 10\n  },\n  textType: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10\n  },\n  input: {\n    width: 300,\n    boarderColor: '#555',\n    backgroundColor: '#ffffff',\n    textAlign: 'center',\n    fontSize: 20,\n    marginBottom: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Dereje/Documents/React-CoffeeShop-Project/Client/src/Screens/LoginScreen/LoginScreen.js"],"names":["React","useEffect","useState","PropTypes","BrowserRouter","Router","Axios","coffeeLogo","coffeeKey","RegistrationScreen","WelcomeScreen","LoginScreen","username","setUsername","password","setPassword","loginStatus","setLoginStatus","starttime","setStartTime","endtime","setEndTime","startdate","setStartDate","showMessage","setShowMessage","showAlert","alert","Register","console","log","AuthenticateUserPassword","length","styles","background","logo","body","text","textType","input","names","e","target","value","passwords","color","StyleSheet","create","flex","justifyContent","alignItems","loginButton","width","height","backgroundColor","passwordButton","position","top","margin","opacity","fontSize","fontWeight","boarderColor","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport Axios from \"axios\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  Button,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TextInput,\r\n} from 'react-native';\r\n\r\nimport coffeeLogo from '../../images/coffeeLogo.png'\r\nimport coffeeKey from '../../images/coffeeKey.jpg'\r\nimport RegistrationScreen from '../RegistrationScreen/RegistrationScreen';\r\nimport WelcomeScreen from '../WelcomeScreen/WelcomeScreen';\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n  const [loginStatus, setLoginStatus] = useState('No');\r\n  const [starttime, setStartTime] = useState('');\r\n  const [endtime, setEndTime] = useState('');\r\n  const [startdate, setStartDate] = useState('');\r\n\r\n  const [showMessage, setShowMessage] = useState(\"\");\r\n  //const placeholder='Enter your Password!';\r\n   \r\n  const showAlert = () => {\r\n      alert('Wrong user or password!')\r\n     //function to make two option alert\r\n   };\r\n\r\n\r\n   function Register(){\r\n      console.log(\"Go to Registry Screen!\");\r\n      //navigation.navigate('RegistrationScreen');\r\n   }\r\n\r\n  \r\n  const AuthenticateUserPassword = () => {\r\n    \r\n         if( username.length < 0 ) {\r\n             setShowMessage(\"check the size of username input!\");\r\n         }\r\n         else{\r\n         /*\r\n          Axios.post(\"http://localhost:4000/login\", {\r\n            username: username,\r\n            password: password,          \r\n\r\n            }).then((response) => {\r\n            if (response.data.message) {\r\n\r\n              setShowMessage(response.data.message);\r\n              console.log(`${response.data.message}`);\r\n              \r\n            } else {\r\n              //setLoginStatus(response.data[0].username);\r\n              //setLoginStatus('YES');\r\n              console.log(response.data[0].username, ' logged in'); \r\n              navigation.navigate('WelcomeScreen');\r\n            \r\n\r\n            }\r\n          });\r\n           */\r\n      }\r\n };\r\n\r\n\r\n  return ( \r\n      <ImageBackground \r\n       style={styles.background}\r\n       source={coffeeKey}>\r\n\r\n      <Image style={styles.logo} source={coffeeLogo}/>\r\n\r\n      {/* <View style={styles.loginButton}></View>\r\n      <View style={styles.passwordButton}></View>  */}\r\n\r\n      <View style={styles.body} > \r\n      <Text style={styles.text}>Login</Text>\r\n    \r\n      <div>\r\n       <Text style={styles.textType}>Username</Text>     \r\n       <TextInput\r\n          style={styles.input}\r\n          placeholder='Enter your userName!'\r\n          value={username.names}\r\n          onChange={(e) => {\r\n               setUsername(e.target.value)\r\n               console.log(e.target.value)\r\n          }}\r\n       /> \r\n      </div>\r\n      <div>\r\n        <Text style={styles.textType}>\r\n            Password\r\n        </Text>\r\n        <TextInput\r\n            style={styles.input}\r\n            placeholder='Enter your Password!'\r\n            value={password.passwords}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n              console.log(e.target.value)\r\n            }}\r\n        />\r\n     </div>\r\n      \r\n      <div> \r\n        <Button \r\n          onPress= {() => AuthenticateUserPassword()}\r\n          title=\"Submit\"\r\n          color=\"green\"\r\n          /> \r\n\r\n          <Button \r\n          onPress= {() => Register()}\r\n          title=\"SignUp\"\r\n          color=\"black\"\r\n        /> \r\n       </div>  \r\n          <div>                                                \r\n             <h1 style={{ color: 'RED' }}>{showMessage}</h1> \r\n          </div>   \r\n      \r\n       </View>\r\n    </ImageBackground>\r\n  )\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,  \r\n    justifyContent: \"flex-end\",\r\n    alignItems: 'center',\r\n    //opacity: 0.1,\r\n  },\r\n  loginButton: {\r\n    width: '100%',\r\n    height: 70,\r\n    backgroundColor: \"#fc5c65\"\r\n  },\r\n    passwordButton: {\r\n    width: '100%',\r\n    height: 70,\r\n    backgroundColor: \"#4ecdc4\"\r\n  },\r\n  \r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\",\r\n    top: 50,\r\n    margin: 20,\r\n    opacity: 0.9,\r\n  },\r\n\r\n  body: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    background: '#0080ff'\r\n    },\r\n  text: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    margin: 10,\r\n  },\r\n  textType: {\r\n    fontSize: 20,\r\n    //fontWeight: 'bold',\r\n    color: 'black',\r\n    margin: 10,\r\n  },\r\n  input: {\r\n    width: 300,\r\n    boarderColor: '#555',\r\n    //borderRadius: 10,\r\n    //boarderWeidth: 2,\r\n    backgroundColor: '#ffffff',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    //marginTop: 140,\r\n    marginBottom: 10,\r\n  \r\n  }\r\n\r\n})\r\n\r\n// Login.propTypes = {\r\n//   setToken: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default LoginScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}