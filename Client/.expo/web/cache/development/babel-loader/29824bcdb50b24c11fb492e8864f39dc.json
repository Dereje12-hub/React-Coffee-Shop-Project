{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getJsEngine = getJsEngine;\nexports.setJsEngine = setJsEngine;\nexports.withJsEngineGradleProps = exports.DEFAULT_JS_ENGINE = exports.JS_ENGINE_PROP_KEY = void 0;\n\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nvar JS_ENGINE_PROP_KEY = 'expo.jsEngine';\nexports.JS_ENGINE_PROP_KEY = JS_ENGINE_PROP_KEY;\nvar DEFAULT_JS_ENGINE = 'jsc';\nexports.DEFAULT_JS_ENGINE = DEFAULT_JS_ENGINE;\n\nvar withJsEngineGradleProps = function withJsEngineGradleProps(config) {\n  return (0, _androidPlugins().withGradleProperties)(config, function (config) {\n    config.modResults = setJsEngine(config, config.modResults);\n    return config;\n  });\n};\n\nexports.withJsEngineGradleProps = withJsEngineGradleProps;\n\nfunction getJsEngine(config) {\n  var _ref, _config$android$jsEng, _config$android;\n\n  return (_ref = (_config$android$jsEng = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.jsEngine) !== null && _config$android$jsEng !== void 0 ? _config$android$jsEng : config.jsEngine) !== null && _ref !== void 0 ? _ref : DEFAULT_JS_ENGINE;\n}\n\nfunction setJsEngine(config, gradleProperties) {\n  var _ref2, _config$android$jsEng2, _config$android2;\n\n  var oldPropIndex = gradleProperties.findIndex(function (prop) {\n    return prop.type === 'property' && prop.key === JS_ENGINE_PROP_KEY;\n  });\n  var newProp = {\n    type: 'property',\n    key: JS_ENGINE_PROP_KEY,\n    value: (_ref2 = (_config$android$jsEng2 = (_config$android2 = config.android) === null || _config$android2 === void 0 ? void 0 : _config$android2.jsEngine) !== null && _config$android$jsEng2 !== void 0 ? _config$android$jsEng2 : config.jsEngine) !== null && _ref2 !== void 0 ? _ref2 : DEFAULT_JS_ENGINE\n  };\n\n  if (oldPropIndex >= 0) {\n    gradleProperties[oldPropIndex] = newProp;\n  } else {\n    gradleProperties.push(newProp);\n  }\n\n  return gradleProperties;\n}","map":{"version":3,"sources":["../../src/android/JsEngine.ts"],"names":["JS_ENGINE_PROP_KEY","DEFAULT_JS_ENGINE","withJsEngineGradleProps","config","setJsEngine","oldPropIndex","gradleProperties","prop","newProp","type","key","value"],"mappings":";;;;;;;;;AAGA,SAAA,eAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,8BAAA;;AAAA,EAAA,eAAA,GAAA,2BAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAGO,IAAMA,kBAAkB,GAAxB,eAAA;;AACA,IAAMC,iBAAiB,GAAvB,KAAA;;;AAEA,IAAMC,uBAAqC,GAAGC,SAAxCD,uBAAwCC,CAAAA,MAAM,EAAI;AAC7D,SAAO,CAAA,GAAA,eAAA,GAAA,oBAAA,EAAA,MAAA,EAA6BA,UAAAA,MAAM,EAAI;AAC5CA,IAAAA,MAAM,CAANA,UAAAA,GAAoBC,WAAW,CAAA,MAAA,EAASD,MAAM,CAA9CA,UAA+B,CAA/BA;AACA,WAAA,MAAA;AAFF,GAAO,CAAP;AADK,CAAA;;;;AAOA,SAAA,WAAA,CAAA,MAAA,EAAuE;AAAA,MAAA,IAAA,EAAA,qBAAA,EAAA,eAAA;;AAC5E,SAAA,CAAA,IAAA,GAAA,CAAA,qBAAA,GAAA,CAAA,eAAA,GAAOA,MAAM,CAAb,OAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,eAAAA,CAAP,QAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAmCA,MAAM,CAAzC,QAAA,MAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,iBAAA;AACD;;AAEM,SAAA,WAAA,CAAA,MAAA,EAAA,gBAAA,EAGa;AAAA,MAAA,KAAA,EAAA,sBAAA,EAAA,gBAAA;;AAClB,MAAME,YAAY,GAAGC,gBAAgB,CAAhBA,SAAAA,CACnBC,UAAAA,IAAI;AAAA,WAAIA,IAAI,CAAJA,IAAAA,KAAAA,UAAAA,IAA4BA,IAAI,CAAJA,GAAAA,KADtC,kBACM;AAAA,GADeD,CAArB;AAGA,MAAME,OAAuB,GAAG;AAC9BC,IAAAA,IAAI,EAD0B,UAAA;AAE9BC,IAAAA,GAAG,EAF2B,kBAAA;AAG9BC,IAAAA,KAAK,EAAA,CAAA,KAAA,GAAA,CAAA,sBAAA,GAAA,CAAA,gBAAA,GAAER,MAAM,CAAR,OAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,gBAAAA,CAAF,QAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,sBAAA,GAA8BA,MAAM,CAApC,QAAA,MAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAiDF;AAHxB,GAAhC;;AAMA,MAAII,YAAY,IAAhB,CAAA,EAAuB;AACrBC,IAAAA,gBAAgB,CAAhBA,YAAgB,CAAhBA,GAAAA,OAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,gBAAgB,CAAhBA,IAAAA,CAAAA,OAAAA;AACD;;AAED,SAAA,gBAAA;AACD","sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\n\nimport type { ConfigPlugin } from '../Plugin.types';\nimport { withGradleProperties } from '../plugins/android-plugins';\nimport type { PropertiesItem } from './Properties';\n\nexport const JS_ENGINE_PROP_KEY = 'expo.jsEngine';\nexport const DEFAULT_JS_ENGINE = 'jsc';\n\nexport const withJsEngineGradleProps: ConfigPlugin = config => {\n  return withGradleProperties(config, config => {\n    config.modResults = setJsEngine(config, config.modResults);\n    return config;\n  });\n};\n\nexport function getJsEngine(config: Pick<ExpoConfig, 'android' | 'jsEngine'>) {\n  return config.android?.jsEngine ?? config.jsEngine ?? DEFAULT_JS_ENGINE;\n}\n\nexport function setJsEngine(\n  config: Pick<ExpoConfig, 'android' | 'jsEngine'>,\n  gradleProperties: PropertiesItem[]\n): PropertiesItem[] {\n  const oldPropIndex = gradleProperties.findIndex(\n    prop => prop.type === 'property' && prop.key === JS_ENGINE_PROP_KEY\n  );\n  const newProp: PropertiesItem = {\n    type: 'property',\n    key: JS_ENGINE_PROP_KEY,\n    value: config.android?.jsEngine ?? config.jsEngine ?? DEFAULT_JS_ENGINE,\n  };\n\n  if (oldPropIndex >= 0) {\n    gradleProperties[oldPropIndex] = newProp;\n  } else {\n    gradleProperties.push(newProp);\n  }\n\n  return gradleProperties;\n}\n"]},"metadata":{},"sourceType":"script"}