{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createKnownCommunityMatcher = exports.createExpoMatcher = exports.createReactNativeMatcher = exports.createModuleMatcher = void 0;\n\nfunction createModuleMatcher(_ref) {\n  var _ref$folders = _ref.folders,\n      folders = _ref$folders === void 0 ? ['node_modules'] : _ref$folders,\n      moduleIds = _ref.moduleIds;\n  var modulePathsGroup = folders.join('|');\n  var moduleMatchersGroup = moduleIds.join('|');\n  var moduleMatcherId = '^' + [modulePathsGroup, moduleMatchersGroup].map(function (value) {\n    return \"(?:\" + value + \")\";\n  }).join('/');\n  return new RegExp(moduleMatcherId);\n}\n\nexports.createModuleMatcher = createModuleMatcher;\n\nvar createReactNativeMatcher = function createReactNativeMatcher(_ref2) {\n  var folders = _ref2.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['react-native/']\n  });\n};\n\nexports.createReactNativeMatcher = createReactNativeMatcher;\n\nvar createExpoMatcher = function createExpoMatcher(_ref3) {\n  var folders = _ref3.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['expo', '@expo', '@unimodules', '@use-expo']\n  });\n};\n\nexports.createExpoMatcher = createExpoMatcher;\n\nvar createKnownCommunityMatcher = function createKnownCommunityMatcher() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      folders = _ref4.folders,\n      _ref4$moduleIds = _ref4.moduleIds,\n      moduleIds = _ref4$moduleIds === void 0 ? [] : _ref4$moduleIds;\n\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: [].concat(_toConsumableArray(moduleIds), ['@react-', '@(?:[\\\\w|-]+)/react-native', 'react-native-', 'victory-', 'native-base', 'styled-components', 'three/build/three.module.js', 'three/examples/jsm', 'html-elements/', 'react-navigation-'])\n  });\n};\n\nexports.createKnownCommunityMatcher = createKnownCommunityMatcher;","map":{"version":3,"sources":["../../src/transformer/createMatcher.ts"],"names":[],"mappings":";;;;;;;;;AAEA,SAAgB,mBAAhB,OAMC;AAAA,0BALC,OAKD;AAAA,MALC,OAKD,6BALW,CAAC,cAAD,CAKX;AAAA,MAJC,SAID,QAJC,SAID;AACC,MAAM,gBAAgB,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAzB;AAEA,MAAM,mBAAmB,GAAG,SAAS,CAAC,IAAV,CAAe,GAAf,CAA5B;AAEA,MAAM,eAAe,GACnB,MAAM,CAAC,gBAAD,EAAmB,mBAAnB,EAAwC,GAAxC,CAA4C,UAAA,KAAK;AAAA,mBAAU,KAAV;AAAA,GAAjD,EAAqE,IAArE,CAA0E,GAA1E,CADR;AAGA,SAAO,IAAI,MAAJ,CAAW,eAAX,CAAP;AACD;;AAfD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAiBO,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B;AAAA,MAAG,OAAH,SAAG,OAAH;AAAA,SACtC,mBAAmB,CAAC;AAClB,IAAA,OAAO,EAAP,OADkB;AAElB,IAAA,SAAS,EAAE,CAAC,eAAD;AAFO,GAAD,CADmB;AAAA,CAAjC;;AAAM,OAAA,CAAA,wBAAA,GAAwB,wBAAxB;;AAMN,IAAM,iBAAiB,GAAG,SAApB,iBAAoB;AAAA,MAAG,OAAH,SAAG,OAAH;AAAA,SAC/B,mBAAmB,CAAC;AAClB,IAAA,OAAO,EAAP,OADkB;AAGlB,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,aAAlB,EAAiC,WAAjC;AAHO,GAAD,CADY;AAAA,CAA1B;;AAAM,OAAA,CAAA,iBAAA,GAAiB,iBAAjB;;AASN,IAAM,2BAA2B,GAAG,SAA9B,2BAA8B;AAAA,kFAMvC,EANuC;AAAA,MACzC,OADyC,SACzC,OADyC;AAAA,8BAEzC,SAFyC;AAAA,MAEzC,SAFyC,gCAE7B,EAF6B;;AAAA,SAOzC,mBAAmB,CAAC;AAClB,IAAA,OAAO,EAAP,OADkB;AAElB,IAAA,SAAS,+BACJ,SADI,IAIP,SAJO,EAMP,4BANO,EAOP,eAPO,EAQP,UARO,EASP,aATO,EAUP,mBAVO,EAYP,6BAZO,EAaP,oBAbO,EAeP,gBAfO,EAiBP,mBAjBO;AAFS,GAAD,CAPsB;AAAA,CAApC;;AAAM,OAAA,CAAA,2BAAA,GAA2B,2BAA3B","sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nexport function createModuleMatcher({\n  folders = ['node_modules'],\n  moduleIds,\n}: {\n  folders?: string[];\n  moduleIds: string[];\n}) {\n  const modulePathsGroup = folders.join('|');\n\n  const moduleMatchersGroup = moduleIds.join('|');\n\n  const moduleMatcherId =\n    '^' + [modulePathsGroup, moduleMatchersGroup].map(value => `(?:${value})`).join('/');\n\n  return new RegExp(moduleMatcherId);\n}\n\nexport const createReactNativeMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: ['react-native/'],\n  });\n\nexport const createExpoMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    // We'll work to start reducing this.\n    moduleIds: ['expo', '@expo', '@unimodules', '@use-expo'],\n  });\n\n// TODO: Make this list as short as possible before releasing.\n// TODO: Add SDK version compat list.\nexport const createKnownCommunityMatcher = ({\n  folders,\n  moduleIds = [],\n}: {\n  folders?: string[];\n  moduleIds?: string[];\n} = {}) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: [\n      ...moduleIds,\n      // The more complex, the longer the entire project takes...\n      // react-native-community, react-native-masked-view, react-native-picker, react-native-segmented-control, react-native\n      '@react-',\n      // @sentry/react-native\n      '@(?:[\\\\w|-]+)/react-native',\n      'react-native-',\n      'victory-',\n      'native-base',\n      'styled-components',\n      // three.js\n      'three/build/three.module.js',\n      'three/examples/jsm',\n      // Special case for testing expo/expo repo\n      'html-elements/',\n      // shared-element\n      'react-navigation-',\n    ],\n  });\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}