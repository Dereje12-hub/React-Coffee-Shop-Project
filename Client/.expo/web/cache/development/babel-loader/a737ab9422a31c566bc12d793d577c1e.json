{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nmodule.exports = npa;\nmodule.exports.resolve = resolve;\nmodule.exports.Result = Result;\nvar url;\nvar HostedGit;\nvar semver;\nvar path_;\n\nfunction path() {\n  if (!path_) path_ = require('path');\n  return path_;\n}\n\nvar validatePackageName;\nvar osenv;\nvar isWindows = process.platform === 'win32' || global.FAKE_WINDOWS;\nvar hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/;\nvar isURL = /^(?:git[+])?[a-z]+:/i;\nvar isFilename = /[.](?:tgz|tar.gz|tar)$/i;\n\nfunction npa(arg, where) {\n  var name;\n  var spec;\n\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where)) {\n      return arg;\n    } else if (arg.name && arg.rawSpec) {\n      return npa.resolve(arg.name, arg.rawSpec, where || arg.where);\n    } else {\n      return npa(arg.raw, where || arg.where);\n    }\n  }\n\n  var nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@');\n  var namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg;\n\n  if (isURL.test(arg)) {\n    spec = arg;\n  } else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart))) {\n    spec = arg;\n  } else if (nameEndsAt > 0) {\n    name = namePart;\n    spec = arg.slice(nameEndsAt + 1);\n  } else {\n    if (!validatePackageName) validatePackageName = require('validate-npm-package-name');\n    var valid = validatePackageName(arg);\n\n    if (valid.validForOldPackages) {\n      name = arg;\n    } else {\n      spec = arg;\n    }\n  }\n\n  return resolve(name, spec, where, arg);\n}\n\nvar isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/;\n\nfunction resolve(name, spec, where, arg) {\n  var res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null\n  });\n  if (name) res.setName(name);\n\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) {\n    return fromFile(res, where);\n  } else if (spec && /^npm:/i.test(spec)) {\n    return fromAlias(res, where);\n  }\n\n  if (!HostedGit) HostedGit = require('hosted-git-info');\n  var hosted = HostedGit.fromUrl(spec, {\n    noGitPlus: true,\n    noCommittish: true\n  });\n\n  if (hosted) {\n    return fromHostedGit(res, hosted);\n  } else if (spec && isURL.test(spec)) {\n    return fromURL(res);\n  } else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) {\n    return fromFile(res, where);\n  } else {\n    return fromRegistry(res);\n  }\n}\n\nfunction invalidPackageName(name, valid) {\n  var err = new Error(\"Invalid package name \\\"\" + name + \"\\\": \" + valid.errors.join('; '));\n  err.code = 'EINVALIDPACKAGENAME';\n  return err;\n}\n\nfunction invalidTagName(name) {\n  var err = new Error(\"Invalid tag name \\\"\" + name + \"\\\": Tags may not have any characters that encodeURIComponent encodes.\");\n  err.code = 'EINVALIDTAGNAME';\n  return err;\n}\n\nfunction Result(opts) {\n  this.type = opts.type;\n  this.registry = opts.registry;\n  this.where = opts.where;\n\n  if (opts.raw == null) {\n    this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec;\n  } else {\n    this.raw = opts.raw;\n  }\n\n  this.name = undefined;\n  this.escapedName = undefined;\n  this.scope = undefined;\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec;\n  this.saveSpec = opts.saveSpec;\n  this.fetchSpec = opts.fetchSpec;\n  if (opts.name) this.setName(opts.name);\n  this.gitRange = opts.gitRange;\n  this.gitCommittish = opts.gitCommittish;\n  this.hosted = opts.hosted;\n}\n\nResult.prototype.setName = function (name) {\n  if (!validatePackageName) validatePackageName = require('validate-npm-package-name');\n  var valid = validatePackageName(name);\n\n  if (!valid.validForOldPackages) {\n    throw invalidPackageName(name, valid);\n  }\n\n  this.name = name;\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined;\n  this.escapedName = name.replace('/', '%2f');\n  return this;\n};\n\nResult.prototype.toString = function () {\n  var full = [];\n  if (this.name != null && this.name !== '') full.push(this.name);\n  var spec = this.saveSpec || this.fetchSpec || this.rawSpec;\n  if (spec != null && spec !== '') full.push(spec);\n  return full.length ? full.join('@') : this.raw;\n};\n\nResult.prototype.toJSON = function () {\n  var result = _extends({}, this);\n\n  delete result.hosted;\n  return result;\n};\n\nfunction setGitCommittish(res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7));\n    res.gitCommittish = null;\n  } else {\n    res.gitCommittish = committish === '' ? null : committish;\n  }\n\n  return res;\n}\n\nvar isAbsolutePath = /^[/]|^[A-Za-z]:/;\n\nfunction resolvePath(where, spec) {\n  if (isAbsolutePath.test(spec)) return spec;\n  return path().resolve(where, spec);\n}\n\nfunction isAbsolute(dir) {\n  if (dir[0] === '/') return true;\n  if (/^[A-Za-z]:/.test(dir)) return true;\n  return false;\n}\n\nfunction fromFile(res, where) {\n  if (!where) where = process.cwd();\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory';\n  res.where = where;\n  var spec = res.rawSpec.replace(/\\\\/g, '/').replace(/^file:[/]*([A-Za-z]:)/, '$1').replace(/^file:(?:[/]*([~./]))?/, '$1');\n\n  if (/^~[/]/.test(spec)) {\n    if (!osenv) osenv = require('osenv');\n    res.fetchSpec = resolvePath(osenv.home(), spec.slice(2));\n    res.saveSpec = 'file:' + spec;\n  } else {\n    res.fetchSpec = resolvePath(where, spec);\n\n    if (isAbsolute(spec)) {\n      res.saveSpec = 'file:' + spec;\n    } else {\n      res.saveSpec = 'file:' + path().relative(where, res.fetchSpec);\n    }\n  }\n\n  return res;\n}\n\nfunction fromHostedGit(res, hosted) {\n  res.type = 'git';\n  res.hosted = hosted;\n  res.saveSpec = hosted.toString({\n    noGitPlus: false,\n    noCommittish: false\n  });\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString();\n  return setGitCommittish(res, hosted.committish);\n}\n\nfunction unsupportedURLType(protocol, spec) {\n  var err = new Error(\"Unsupported URL Type \\\"\" + protocol + \"\\\": \" + spec);\n  err.code = 'EUNSUPPORTEDPROTOCOL';\n  return err;\n}\n\nfunction matchGitScp(spec) {\n  var matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i);\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2]\n  };\n}\n\nfunction fromURL(res) {\n  if (!url) url = require('url');\n  var urlparse = url.parse(res.rawSpec);\n  res.saveSpec = res.rawSpec;\n\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:':\n      res.type = 'git';\n      var match = urlparse.protocol === 'git+ssh:' && matchGitScp(res.rawSpec);\n\n      if (match) {\n        setGitCommittish(res, match.gitCommittish);\n        res.fetchSpec = match.fetchSpec;\n      } else {\n        setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '');\n        urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '');\n\n        if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n          urlparse.host += ':';\n          urlparse.hostname += ':';\n        }\n\n        delete urlparse.hash;\n        res.fetchSpec = url.format(urlparse);\n      }\n\n      break;\n\n    case 'http:':\n    case 'https:':\n      res.type = 'remote';\n      res.fetchSpec = res.saveSpec;\n      break;\n\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec);\n  }\n\n  return res;\n}\n\nfunction fromAlias(res, where) {\n  var subSpec = npa(res.rawSpec.substr(4), where);\n\n  if (subSpec.type === 'alias') {\n    throw new Error('nested aliases not supported');\n  }\n\n  if (!subSpec.registry) {\n    throw new Error('aliases only work for registry deps');\n  }\n\n  res.subSpec = subSpec;\n  res.registry = true;\n  res.type = 'alias';\n  res.saveSpec = null;\n  res.fetchSpec = null;\n  return res;\n}\n\nfunction fromRegistry(res) {\n  res.registry = true;\n  var spec = res.rawSpec === '' ? 'latest' : res.rawSpec;\n  res.saveSpec = null;\n  res.fetchSpec = spec;\n  if (!semver) semver = require('semver');\n  var version = semver.valid(spec, true);\n  var range = semver.validRange(spec, true);\n\n  if (version) {\n    res.type = 'version';\n  } else if (range) {\n    res.type = 'range';\n  } else {\n    if (encodeURIComponent(spec) !== spec) {\n      throw invalidTagName(spec);\n    }\n\n    res.type = 'tag';\n  }\n\n  return res;\n}","map":{"version":3,"sources":["C:/Users/Dereje/node_modules/@expo/package-manager/node_modules/npm-package-arg/npa.js"],"names":["module","exports","npa","resolve","Result","url","HostedGit","semver","path_","path","require","validatePackageName","osenv","isWindows","process","platform","global","FAKE_WINDOWS","hasSlashes","isURL","isFilename","arg","where","name","spec","rawSpec","raw","nameEndsAt","slice","indexOf","namePart","test","valid","validForOldPackages","isFilespec","res","fromArgument","setName","fromFile","fromAlias","hosted","fromUrl","noGitPlus","noCommittish","fromHostedGit","fromURL","fromRegistry","invalidPackageName","err","Error","errors","join","code","invalidTagName","opts","type","registry","undefined","escapedName","scope","saveSpec","fetchSpec","gitRange","gitCommittish","prototype","replace","toString","full","push","length","toJSON","result","setGitCommittish","committish","decodeURIComponent","isAbsolutePath","resolvePath","isAbsolute","dir","cwd","home","relative","getDefaultRepresentation","unsupportedURLType","protocol","matchGitScp","matched","match","urlparse","parse","hash","host","hostname","format","subSpec","substr","version","range","validRange","encodeURIComponent"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,OAAf,GAAyBA,OAAzB;AACAH,MAAM,CAACC,OAAP,CAAeG,MAAf,GAAwBA,MAAxB;AAEA,IAAIC,GAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,KAAJ;;AACA,SAASC,IAAT,GAAiB;AACf,MAAI,CAACD,KAAL,EAAYA,KAAK,GAAGE,OAAO,CAAC,MAAD,CAAf;AACZ,SAAOF,KAAP;AACD;;AACD,IAAIG,mBAAJ;AACA,IAAIC,KAAJ;AAEA,IAAMC,SAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCC,MAAM,CAACC,YAAzD;AACA,IAAMC,UAAU,GAAGL,SAAS,GAAG,QAAH,GAAc,KAA1C;AACA,IAAMM,KAAK,GAAG,sBAAd;AACA,IAAMC,UAAU,GAAG,yBAAnB;;AAEA,SAASlB,GAAT,CAAcmB,GAAd,EAAmBC,KAAnB,EAA0B;AACxB,MAAIC,IAAJ;AACA,MAAIC,IAAJ;;AACA,MAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AAC3B,QAAIA,GAAG,YAAYjB,MAAf,KAA0B,CAACkB,KAAD,IAAUA,KAAK,KAAKD,GAAG,CAACC,KAAlD,CAAJ,EAA8D;AAC5D,aAAOD,GAAP;AACD,KAFD,MAEO,IAAIA,GAAG,CAACE,IAAJ,IAAYF,GAAG,CAACI,OAApB,EAA6B;AAClC,aAAOvB,GAAG,CAACC,OAAJ,CAAYkB,GAAG,CAACE,IAAhB,EAAsBF,GAAG,CAACI,OAA1B,EAAmCH,KAAK,IAAID,GAAG,CAACC,KAAhD,CAAP;AACD,KAFM,MAEA;AACL,aAAOpB,GAAG,CAACmB,GAAG,CAACK,GAAL,EAAUJ,KAAK,IAAID,GAAG,CAACC,KAAvB,CAAV;AACD;AACF;;AACD,MAAMK,UAAU,GAAGN,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,GAAiBA,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaC,OAAb,CAAqB,GAArB,IAA4B,CAA7C,GAAiDR,GAAG,CAACQ,OAAJ,CAAY,GAAZ,CAApE;AACA,MAAMC,QAAQ,GAAGH,UAAU,GAAG,CAAb,GAAiBN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaD,UAAb,CAAjB,GAA4CN,GAA7D;;AACA,MAAIF,KAAK,CAACY,IAAN,CAAWV,GAAX,CAAJ,EAAqB;AACnBG,IAAAA,IAAI,GAAGH,GAAP;AACD,GAFD,MAEO,IAAIS,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAAhB,KAAwBZ,UAAU,CAACa,IAAX,CAAgBD,QAAhB,KAA6BV,UAAU,CAACW,IAAX,CAAgBD,QAAhB,CAArD,CAAJ,EAAqF;AAC1FN,IAAAA,IAAI,GAAGH,GAAP;AACD,GAFM,MAEA,IAAIM,UAAU,GAAG,CAAjB,EAAoB;AACzBJ,IAAAA,IAAI,GAAGO,QAAP;AACAN,IAAAA,IAAI,GAAGH,GAAG,CAACO,KAAJ,CAAUD,UAAU,GAAG,CAAvB,CAAP;AACD,GAHM,MAGA;AACL,QAAI,CAAChB,mBAAL,EAA0BA,mBAAmB,GAAGD,OAAO,CAAC,2BAAD,CAA7B;AAC1B,QAAMsB,KAAK,GAAGrB,mBAAmB,CAACU,GAAD,CAAjC;;AACA,QAAIW,KAAK,CAACC,mBAAV,EAA+B;AAC7BV,MAAAA,IAAI,GAAGF,GAAP;AACD,KAFD,MAEO;AACLG,MAAAA,IAAI,GAAGH,GAAP;AACD;AACF;;AACD,SAAOlB,OAAO,CAACoB,IAAD,EAAOC,IAAP,EAAaF,KAAb,EAAoBD,GAApB,CAAd;AACD;;AAED,IAAMa,UAAU,GAAGrB,SAAS,GAAG,+BAAH,GAAqC,6BAAjE;;AAEA,SAASV,OAAT,CAAkBoB,IAAlB,EAAwBC,IAAxB,EAA8BF,KAA9B,EAAqCD,GAArC,EAA0C;AACxC,MAAMc,GAAG,GAAG,IAAI/B,MAAJ,CAAW;AACrBsB,IAAAA,GAAG,EAAEL,GADgB;AAErBE,IAAAA,IAAI,EAAEA,IAFe;AAGrBE,IAAAA,OAAO,EAAED,IAHY;AAIrBY,IAAAA,YAAY,EAAEf,GAAG,IAAI;AAJA,GAAX,CAAZ;AAOA,MAAIE,IAAJ,EAAUY,GAAG,CAACE,OAAJ,CAAYd,IAAZ;;AAEV,MAAIC,IAAI,KAAKU,UAAU,CAACH,IAAX,CAAgBP,IAAhB,KAAyB,UAAUO,IAAV,CAAeP,IAAf,CAA9B,CAAR,EAA6D;AAC3D,WAAOc,QAAQ,CAACH,GAAD,EAAMb,KAAN,CAAf;AACD,GAFD,MAEO,IAAIE,IAAI,IAAI,SAASO,IAAT,CAAcP,IAAd,CAAZ,EAAiC;AACtC,WAAOe,SAAS,CAACJ,GAAD,EAAMb,KAAN,CAAhB;AACD;;AACD,MAAI,CAAChB,SAAL,EAAgBA,SAAS,GAAGI,OAAO,CAAC,iBAAD,CAAnB;AAChB,MAAM8B,MAAM,GAAGlC,SAAS,CAACmC,OAAV,CAAkBjB,IAAlB,EAAwB;AAACkB,IAAAA,SAAS,EAAE,IAAZ;AAAkBC,IAAAA,YAAY,EAAE;AAAhC,GAAxB,CAAf;;AACA,MAAIH,MAAJ,EAAY;AACV,WAAOI,aAAa,CAACT,GAAD,EAAMK,MAAN,CAApB;AACD,GAFD,MAEO,IAAIhB,IAAI,IAAIL,KAAK,CAACY,IAAN,CAAWP,IAAX,CAAZ,EAA8B;AACnC,WAAOqB,OAAO,CAACV,GAAD,CAAd;AACD,GAFM,MAEA,IAAIX,IAAI,KAAKN,UAAU,CAACa,IAAX,CAAgBP,IAAhB,KAAyBJ,UAAU,CAACW,IAAX,CAAgBP,IAAhB,CAA9B,CAAR,EAA8D;AACnE,WAAOc,QAAQ,CAACH,GAAD,EAAMb,KAAN,CAAf;AACD,GAFM,MAEA;AACL,WAAOwB,YAAY,CAACX,GAAD,CAAnB;AACD;AACF;;AAED,SAASY,kBAAT,CAA6BxB,IAA7B,EAAmCS,KAAnC,EAA0C;AACxC,MAAMgB,GAAG,GAAG,IAAIC,KAAJ,6BAAmC1B,IAAnC,YAA6CS,KAAK,CAACkB,MAAN,CAAaC,IAAb,CAAkB,IAAlB,CAA7C,CAAZ;AACAH,EAAAA,GAAG,CAACI,IAAJ,GAAW,qBAAX;AACA,SAAOJ,GAAP;AACD;;AACD,SAASK,cAAT,CAAyB9B,IAAzB,EAA+B;AAC7B,MAAMyB,GAAG,GAAG,IAAIC,KAAJ,yBAA+B1B,IAA/B,2EAAZ;AACAyB,EAAAA,GAAG,CAACI,IAAJ,GAAW,iBAAX;AACA,SAAOJ,GAAP;AACD;;AAED,SAAS5C,MAAT,CAAiBkD,IAAjB,EAAuB;AACrB,OAAKC,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACA,OAAKC,QAAL,GAAgBF,IAAI,CAACE,QAArB;AACA,OAAKlC,KAAL,GAAagC,IAAI,CAAChC,KAAlB;;AACA,MAAIgC,IAAI,CAAC5B,GAAL,IAAY,IAAhB,EAAsB;AACpB,SAAKA,GAAL,GAAW4B,IAAI,CAAC/B,IAAL,GAAY+B,IAAI,CAAC/B,IAAL,GAAY,GAAZ,GAAkB+B,IAAI,CAAC7B,OAAnC,GAA6C6B,IAAI,CAAC7B,OAA7D;AACD,GAFD,MAEO;AACL,SAAKC,GAAL,GAAW4B,IAAI,CAAC5B,GAAhB;AACD;;AACD,OAAKH,IAAL,GAAYkC,SAAZ;AACA,OAAKC,WAAL,GAAmBD,SAAnB;AACA,OAAKE,KAAL,GAAaF,SAAb;AACA,OAAKhC,OAAL,GAAe6B,IAAI,CAAC7B,OAAL,IAAgB,IAAhB,GAAuB,EAAvB,GAA4B6B,IAAI,CAAC7B,OAAhD;AACA,OAAKmC,QAAL,GAAgBN,IAAI,CAACM,QAArB;AACA,OAAKC,SAAL,GAAiBP,IAAI,CAACO,SAAtB;AACA,MAAIP,IAAI,CAAC/B,IAAT,EAAe,KAAKc,OAAL,CAAaiB,IAAI,CAAC/B,IAAlB;AACf,OAAKuC,QAAL,GAAgBR,IAAI,CAACQ,QAArB;AACA,OAAKC,aAAL,GAAqBT,IAAI,CAACS,aAA1B;AACA,OAAKvB,MAAL,GAAcc,IAAI,CAACd,MAAnB;AACD;;AAEDpC,MAAM,CAAC4D,SAAP,CAAiB3B,OAAjB,GAA2B,UAAUd,IAAV,EAAgB;AACzC,MAAI,CAACZ,mBAAL,EAA0BA,mBAAmB,GAAGD,OAAO,CAAC,2BAAD,CAA7B;AAC1B,MAAMsB,KAAK,GAAGrB,mBAAmB,CAACY,IAAD,CAAjC;;AACA,MAAI,CAACS,KAAK,CAACC,mBAAX,EAAgC;AAC9B,UAAMc,kBAAkB,CAACxB,IAAD,EAAOS,KAAP,CAAxB;AACD;;AACD,OAAKT,IAAL,GAAYA,IAAZ;AACA,OAAKoC,KAAL,GAAapC,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,GAAkBA,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcL,IAAI,CAACM,OAAL,CAAa,GAAb,CAAd,CAAlB,GAAqD4B,SAAlE;AAEA,OAAKC,WAAL,GAAmBnC,IAAI,CAAC0C,OAAL,CAAa,GAAb,EAAkB,KAAlB,CAAnB;AACA,SAAO,IAAP;AACD,CAXD;;AAaA7D,MAAM,CAAC4D,SAAP,CAAiBE,QAAjB,GAA4B,YAAY;AACtC,MAAMC,IAAI,GAAG,EAAb;AACA,MAAI,KAAK5C,IAAL,IAAa,IAAb,IAAqB,KAAKA,IAAL,KAAc,EAAvC,EAA2C4C,IAAI,CAACC,IAAL,CAAU,KAAK7C,IAAf;AAC3C,MAAMC,IAAI,GAAG,KAAKoC,QAAL,IAAiB,KAAKC,SAAtB,IAAmC,KAAKpC,OAArD;AACA,MAAID,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,EAA7B,EAAiC2C,IAAI,CAACC,IAAL,CAAU5C,IAAV;AACjC,SAAO2C,IAAI,CAACE,MAAL,GAAcF,IAAI,CAAChB,IAAL,CAAU,GAAV,CAAd,GAA+B,KAAKzB,GAA3C;AACD,CAND;;AAQAtB,MAAM,CAAC4D,SAAP,CAAiBM,MAAjB,GAA0B,YAAY;AACpC,MAAMC,MAAM,GAAG,SAAc,EAAd,EAAkB,IAAlB,CAAf;;AACA,SAAOA,MAAM,CAAC/B,MAAd;AACA,SAAO+B,MAAP;AACD,CAJD;;AAMA,SAASC,gBAAT,CAA2BrC,GAA3B,EAAgCsC,UAAhC,EAA4C;AAC1C,MAAIA,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACJ,MAAX,IAAqB,CAA3C,IAAgDI,UAAU,CAAC7C,KAAX,CAAiB,CAAjB,EAAoB,CAApB,MAA2B,SAA/E,EAA0F;AACxFO,IAAAA,GAAG,CAAC2B,QAAJ,GAAeY,kBAAkB,CAACD,UAAU,CAAC7C,KAAX,CAAiB,CAAjB,CAAD,CAAjC;AACAO,IAAAA,GAAG,CAAC4B,aAAJ,GAAoB,IAApB;AACD,GAHD,MAGO;AACL5B,IAAAA,GAAG,CAAC4B,aAAJ,GAAoBU,UAAU,KAAK,EAAf,GAAoB,IAApB,GAA2BA,UAA/C;AACD;;AACD,SAAOtC,GAAP;AACD;;AAED,IAAMwC,cAAc,GAAG,iBAAvB;;AAEA,SAASC,WAAT,CAAsBtD,KAAtB,EAA6BE,IAA7B,EAAmC;AACjC,MAAImD,cAAc,CAAC5C,IAAf,CAAoBP,IAApB,CAAJ,EAA+B,OAAOA,IAAP;AAC/B,SAAOf,IAAI,GAAGN,OAAP,CAAemB,KAAf,EAAsBE,IAAtB,CAAP;AACD;;AAED,SAASqD,UAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB,OAAO,IAAP;AACpB,MAAI,aAAa/C,IAAb,CAAkB+C,GAAlB,CAAJ,EAA4B,OAAO,IAAP;AAC5B,SAAO,KAAP;AACD;;AAED,SAASxC,QAAT,CAAmBH,GAAnB,EAAwBb,KAAxB,EAA+B;AAC7B,MAAI,CAACA,KAAL,EAAYA,KAAK,GAAGR,OAAO,CAACiE,GAAR,EAAR;AACZ5C,EAAAA,GAAG,CAACoB,IAAJ,GAAWnC,UAAU,CAACW,IAAX,CAAgBI,GAAG,CAACV,OAApB,IAA+B,MAA/B,GAAwC,WAAnD;AACAU,EAAAA,GAAG,CAACb,KAAJ,GAAYA,KAAZ;AAEA,MAAME,IAAI,GAAGW,GAAG,CAACV,OAAJ,CAAYwC,OAAZ,CAAoB,KAApB,EAA2B,GAA3B,EACVA,OADU,CACF,uBADE,EACuB,IADvB,EAEVA,OAFU,CAEF,wBAFE,EAEwB,IAFxB,CAAb;;AAGA,MAAI,QAAQlC,IAAR,CAAaP,IAAb,CAAJ,EAAwB;AAEtB,QAAI,CAACZ,KAAL,EAAYA,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAf;AACZyB,IAAAA,GAAG,CAAC0B,SAAJ,GAAgBe,WAAW,CAAChE,KAAK,CAACoE,IAAN,EAAD,EAAexD,IAAI,CAACI,KAAL,CAAW,CAAX,CAAf,CAA3B;AACAO,IAAAA,GAAG,CAACyB,QAAJ,GAAe,UAAUpC,IAAzB;AACD,GALD,MAKO;AACLW,IAAAA,GAAG,CAAC0B,SAAJ,GAAgBe,WAAW,CAACtD,KAAD,EAAQE,IAAR,CAA3B;;AACA,QAAIqD,UAAU,CAACrD,IAAD,CAAd,EAAsB;AACpBW,MAAAA,GAAG,CAACyB,QAAJ,GAAe,UAAUpC,IAAzB;AACD,KAFD,MAEO;AACLW,MAAAA,GAAG,CAACyB,QAAJ,GAAe,UAAUnD,IAAI,GAAGwE,QAAP,CAAgB3D,KAAhB,EAAuBa,GAAG,CAAC0B,SAA3B,CAAzB;AACD;AACF;;AACD,SAAO1B,GAAP;AACD;;AAED,SAASS,aAAT,CAAwBT,GAAxB,EAA6BK,MAA7B,EAAqC;AACnCL,EAAAA,GAAG,CAACoB,IAAJ,GAAW,KAAX;AACApB,EAAAA,GAAG,CAACK,MAAJ,GAAaA,MAAb;AACAL,EAAAA,GAAG,CAACyB,QAAJ,GAAepB,MAAM,CAAC0B,QAAP,CAAgB;AAACxB,IAAAA,SAAS,EAAE,KAAZ;AAAmBC,IAAAA,YAAY,EAAE;AAAjC,GAAhB,CAAf;AACAR,EAAAA,GAAG,CAAC0B,SAAJ,GAAgBrB,MAAM,CAAC0C,wBAAP,OAAsC,UAAtC,GAAmD,IAAnD,GAA0D1C,MAAM,CAAC0B,QAAP,EAA1E;AACA,SAAOM,gBAAgB,CAACrC,GAAD,EAAMK,MAAM,CAACiC,UAAb,CAAvB;AACD;;AAED,SAASU,kBAAT,CAA6BC,QAA7B,EAAuC5D,IAAvC,EAA6C;AAC3C,MAAMwB,GAAG,GAAG,IAAIC,KAAJ,6BAAmCmC,QAAnC,YAAiD5D,IAAjD,CAAZ;AACAwB,EAAAA,GAAG,CAACI,IAAJ,GAAW,sBAAX;AACA,SAAOJ,GAAP;AACD;;AAED,SAASqC,WAAT,CAAsB7D,IAAtB,EAA4B;AAS1B,MAAM8D,OAAO,GAAG9D,IAAI,CAAC+D,KAAL,CAAW,oDAAX,CAAhB;AACA,SAAOD,OAAO,IAAI,CAACA,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAX,CAAiB,gBAAjB,CAAZ,IAAkD;AACvD1B,IAAAA,SAAS,EAAEyB,OAAO,CAAC,CAAD,CADqC;AAEvDvB,IAAAA,aAAa,EAAEuB,OAAO,CAAC,CAAD,CAAP,IAAc,IAAd,GAAqB,IAArB,GAA4BA,OAAO,CAAC,CAAD;AAFK,GAAzD;AAID;;AAED,SAASzC,OAAT,CAAkBV,GAAlB,EAAuB;AACrB,MAAI,CAAC9B,GAAL,EAAUA,GAAG,GAAGK,OAAO,CAAC,KAAD,CAAb;AACV,MAAM8E,QAAQ,GAAGnF,GAAG,CAACoF,KAAJ,CAAUtD,GAAG,CAACV,OAAd,CAAjB;AACAU,EAAAA,GAAG,CAACyB,QAAJ,GAAezB,GAAG,CAACV,OAAnB;;AAEA,UAAQ+D,QAAQ,CAACJ,QAAjB;AACE,SAAK,MAAL;AACA,SAAK,WAAL;AACA,SAAK,YAAL;AACA,SAAK,YAAL;AACA,SAAK,UAAL;AACA,SAAK,WAAL;AACA,SAAK,UAAL;AACEjD,MAAAA,GAAG,CAACoB,IAAJ,GAAW,KAAX;AACA,UAAMgC,KAAK,GAAGC,QAAQ,CAACJ,QAAT,KAAsB,UAAtB,IAAoCC,WAAW,CAAClD,GAAG,CAACV,OAAL,CAA7D;;AACA,UAAI8D,KAAJ,EAAW;AACTf,QAAAA,gBAAgB,CAACrC,GAAD,EAAMoD,KAAK,CAACxB,aAAZ,CAAhB;AACA5B,QAAAA,GAAG,CAAC0B,SAAJ,GAAgB0B,KAAK,CAAC1B,SAAtB;AACD,OAHD,MAGO;AACLW,QAAAA,gBAAgB,CAACrC,GAAD,EAAMqD,QAAQ,CAACE,IAAT,IAAiB,IAAjB,GAAwBF,QAAQ,CAACE,IAAT,CAAc9D,KAAd,CAAoB,CAApB,CAAxB,GAAiD,EAAvD,CAAhB;AACA4D,QAAAA,QAAQ,CAACJ,QAAT,GAAoBI,QAAQ,CAACJ,QAAT,CAAkBnB,OAAlB,CAA0B,SAA1B,EAAqC,EAArC,CAApB;;AACA,YAAIuB,QAAQ,CAACJ,QAAT,KAAsB,OAAtB,IAAiC,yBAAyBrD,IAAzB,CAA8BI,GAAG,CAACV,OAAlC,CAArC,EAAiF;AAE/E+D,UAAAA,QAAQ,CAACG,IAAT,IAAiB,GAAjB;AACAH,UAAAA,QAAQ,CAACI,QAAT,IAAqB,GAArB;AACD;;AACD,eAAOJ,QAAQ,CAACE,IAAhB;AACAvD,QAAAA,GAAG,CAAC0B,SAAJ,GAAgBxD,GAAG,CAACwF,MAAJ,CAAWL,QAAX,CAAhB;AACD;;AACD;;AACF,SAAK,OAAL;AACA,SAAK,QAAL;AACErD,MAAAA,GAAG,CAACoB,IAAJ,GAAW,QAAX;AACApB,MAAAA,GAAG,CAAC0B,SAAJ,GAAgB1B,GAAG,CAACyB,QAApB;AACA;;AAEF;AACE,YAAMuB,kBAAkB,CAACK,QAAQ,CAACJ,QAAV,EAAoBjD,GAAG,CAACV,OAAxB,CAAxB;AAhCJ;;AAmCA,SAAOU,GAAP;AACD;;AAED,SAASI,SAAT,CAAoBJ,GAApB,EAAyBb,KAAzB,EAAgC;AAC9B,MAAMwE,OAAO,GAAG5F,GAAG,CAACiC,GAAG,CAACV,OAAJ,CAAYsE,MAAZ,CAAmB,CAAnB,CAAD,EAAwBzE,KAAxB,CAAnB;;AACA,MAAIwE,OAAO,CAACvC,IAAR,KAAiB,OAArB,EAA8B;AAC5B,UAAM,IAAIN,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,MAAI,CAAC6C,OAAO,CAACtC,QAAb,EAAuB;AACrB,UAAM,IAAIP,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACDd,EAAAA,GAAG,CAAC2D,OAAJ,GAAcA,OAAd;AACA3D,EAAAA,GAAG,CAACqB,QAAJ,GAAe,IAAf;AACArB,EAAAA,GAAG,CAACoB,IAAJ,GAAW,OAAX;AACApB,EAAAA,GAAG,CAACyB,QAAJ,GAAe,IAAf;AACAzB,EAAAA,GAAG,CAAC0B,SAAJ,GAAgB,IAAhB;AACA,SAAO1B,GAAP;AACD;;AAED,SAASW,YAAT,CAAuBX,GAAvB,EAA4B;AAC1BA,EAAAA,GAAG,CAACqB,QAAJ,GAAe,IAAf;AACA,MAAMhC,IAAI,GAAGW,GAAG,CAACV,OAAJ,KAAgB,EAAhB,GAAqB,QAArB,GAAgCU,GAAG,CAACV,OAAjD;AAGAU,EAAAA,GAAG,CAACyB,QAAJ,GAAe,IAAf;AACAzB,EAAAA,GAAG,CAAC0B,SAAJ,GAAgBrC,IAAhB;AACA,MAAI,CAACjB,MAAL,EAAaA,MAAM,GAAGG,OAAO,CAAC,QAAD,CAAhB;AACb,MAAMsF,OAAO,GAAGzF,MAAM,CAACyB,KAAP,CAAaR,IAAb,EAAmB,IAAnB,CAAhB;AACA,MAAMyE,KAAK,GAAG1F,MAAM,CAAC2F,UAAP,CAAkB1E,IAAlB,EAAwB,IAAxB,CAAd;;AACA,MAAIwE,OAAJ,EAAa;AACX7D,IAAAA,GAAG,CAACoB,IAAJ,GAAW,SAAX;AACD,GAFD,MAEO,IAAI0C,KAAJ,EAAW;AAChB9D,IAAAA,GAAG,CAACoB,IAAJ,GAAW,OAAX;AACD,GAFM,MAEA;AACL,QAAI4C,kBAAkB,CAAC3E,IAAD,CAAlB,KAA6BA,IAAjC,EAAuC;AACrC,YAAM6B,cAAc,CAAC7B,IAAD,CAApB;AACD;;AACDW,IAAAA,GAAG,CAACoB,IAAJ,GAAW,KAAX;AACD;;AACD,SAAOpB,GAAP;AACD","sourcesContent":["'use strict'\nmodule.exports = npa\nmodule.exports.resolve = resolve\nmodule.exports.Result = Result\n\nlet url\nlet HostedGit\nlet semver\nlet path_\nfunction path () {\n  if (!path_) path_ = require('path')\n  return path_\n}\nlet validatePackageName\nlet osenv\n\nconst isWindows = process.platform === 'win32' || global.FAKE_WINDOWS\nconst hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/\nconst isURL = /^(?:git[+])?[a-z]+:/i\nconst isFilename = /[.](?:tgz|tar.gz|tar)$/i\n\nfunction npa (arg, where) {\n  let name\n  let spec\n  if (typeof arg === 'object') {\n    if (arg instanceof Result && (!where || where === arg.where)) {\n      return arg\n    } else if (arg.name && arg.rawSpec) {\n      return npa.resolve(arg.name, arg.rawSpec, where || arg.where)\n    } else {\n      return npa(arg.raw, where || arg.where)\n    }\n  }\n  const nameEndsAt = arg[0] === '@' ? arg.slice(1).indexOf('@') + 1 : arg.indexOf('@')\n  const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg\n  if (isURL.test(arg)) {\n    spec = arg\n  } else if (namePart[0] !== '@' && (hasSlashes.test(namePart) || isFilename.test(namePart))) {\n    spec = arg\n  } else if (nameEndsAt > 0) {\n    name = namePart\n    spec = arg.slice(nameEndsAt + 1)\n  } else {\n    if (!validatePackageName) validatePackageName = require('validate-npm-package-name')\n    const valid = validatePackageName(arg)\n    if (valid.validForOldPackages) {\n      name = arg\n    } else {\n      spec = arg\n    }\n  }\n  return resolve(name, spec, where, arg)\n}\n\nconst isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/\n\nfunction resolve (name, spec, where, arg) {\n  const res = new Result({\n    raw: arg,\n    name: name,\n    rawSpec: spec,\n    fromArgument: arg != null\n  })\n\n  if (name) res.setName(name)\n\n  if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) {\n    return fromFile(res, where)\n  } else if (spec && /^npm:/i.test(spec)) {\n    return fromAlias(res, where)\n  }\n  if (!HostedGit) HostedGit = require('hosted-git-info')\n  const hosted = HostedGit.fromUrl(spec, {noGitPlus: true, noCommittish: true})\n  if (hosted) {\n    return fromHostedGit(res, hosted)\n  } else if (spec && isURL.test(spec)) {\n    return fromURL(res)\n  } else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) {\n    return fromFile(res, where)\n  } else {\n    return fromRegistry(res)\n  }\n}\n\nfunction invalidPackageName (name, valid) {\n  const err = new Error(`Invalid package name \"${name}\": ${valid.errors.join('; ')}`)\n  err.code = 'EINVALIDPACKAGENAME'\n  return err\n}\nfunction invalidTagName (name) {\n  const err = new Error(`Invalid tag name \"${name}\": Tags may not have any characters that encodeURIComponent encodes.`)\n  err.code = 'EINVALIDTAGNAME'\n  return err\n}\n\nfunction Result (opts) {\n  this.type = opts.type\n  this.registry = opts.registry\n  this.where = opts.where\n  if (opts.raw == null) {\n    this.raw = opts.name ? opts.name + '@' + opts.rawSpec : opts.rawSpec\n  } else {\n    this.raw = opts.raw\n  }\n  this.name = undefined\n  this.escapedName = undefined\n  this.scope = undefined\n  this.rawSpec = opts.rawSpec == null ? '' : opts.rawSpec\n  this.saveSpec = opts.saveSpec\n  this.fetchSpec = opts.fetchSpec\n  if (opts.name) this.setName(opts.name)\n  this.gitRange = opts.gitRange\n  this.gitCommittish = opts.gitCommittish\n  this.hosted = opts.hosted\n}\n\nResult.prototype.setName = function (name) {\n  if (!validatePackageName) validatePackageName = require('validate-npm-package-name')\n  const valid = validatePackageName(name)\n  if (!valid.validForOldPackages) {\n    throw invalidPackageName(name, valid)\n  }\n  this.name = name\n  this.scope = name[0] === '@' ? name.slice(0, name.indexOf('/')) : undefined\n  // scoped packages in couch must have slash url-encoded, e.g. @foo%2Fbar\n  this.escapedName = name.replace('/', '%2f')\n  return this\n}\n\nResult.prototype.toString = function () {\n  const full = []\n  if (this.name != null && this.name !== '') full.push(this.name)\n  const spec = this.saveSpec || this.fetchSpec || this.rawSpec\n  if (spec != null && spec !== '') full.push(spec)\n  return full.length ? full.join('@') : this.raw\n}\n\nResult.prototype.toJSON = function () {\n  const result = Object.assign({}, this)\n  delete result.hosted\n  return result\n}\n\nfunction setGitCommittish (res, committish) {\n  if (committish != null && committish.length >= 7 && committish.slice(0, 7) === 'semver:') {\n    res.gitRange = decodeURIComponent(committish.slice(7))\n    res.gitCommittish = null\n  } else {\n    res.gitCommittish = committish === '' ? null : committish\n  }\n  return res\n}\n\nconst isAbsolutePath = /^[/]|^[A-Za-z]:/\n\nfunction resolvePath (where, spec) {\n  if (isAbsolutePath.test(spec)) return spec\n  return path().resolve(where, spec)\n}\n\nfunction isAbsolute (dir) {\n  if (dir[0] === '/') return true\n  if (/^[A-Za-z]:/.test(dir)) return true\n  return false\n}\n\nfunction fromFile (res, where) {\n  if (!where) where = process.cwd()\n  res.type = isFilename.test(res.rawSpec) ? 'file' : 'directory'\n  res.where = where\n\n  const spec = res.rawSpec.replace(/\\\\/g, '/')\n    .replace(/^file:[/]*([A-Za-z]:)/, '$1') // drive name paths on windows\n    .replace(/^file:(?:[/]*([~./]))?/, '$1')\n  if (/^~[/]/.test(spec)) {\n    // this is needed for windows and for file:~/foo/bar\n    if (!osenv) osenv = require('osenv')\n    res.fetchSpec = resolvePath(osenv.home(), spec.slice(2))\n    res.saveSpec = 'file:' + spec\n  } else {\n    res.fetchSpec = resolvePath(where, spec)\n    if (isAbsolute(spec)) {\n      res.saveSpec = 'file:' + spec\n    } else {\n      res.saveSpec = 'file:' + path().relative(where, res.fetchSpec)\n    }\n  }\n  return res\n}\n\nfunction fromHostedGit (res, hosted) {\n  res.type = 'git'\n  res.hosted = hosted\n  res.saveSpec = hosted.toString({noGitPlus: false, noCommittish: false})\n  res.fetchSpec = hosted.getDefaultRepresentation() === 'shortcut' ? null : hosted.toString()\n  return setGitCommittish(res, hosted.committish)\n}\n\nfunction unsupportedURLType (protocol, spec) {\n  const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`)\n  err.code = 'EUNSUPPORTEDPROTOCOL'\n  return err\n}\n\nfunction matchGitScp (spec) {\n  // git ssh specifiers are overloaded to also use scp-style git\n  // specifiers, so we have to parse those out and treat them special.\n  // They are NOT true URIs, so we can't hand them to `url.parse`.\n  //\n  // This regex looks for things that look like:\n  // git+ssh://git@my.custom.git.com:username/project.git#deadbeef\n  //\n  // ...and various combinations. The username in the beginning is *required*.\n  const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i)\n  return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n    fetchSpec: matched[1],\n    gitCommittish: matched[2] == null ? null : matched[2]\n  }\n}\n\nfunction fromURL (res) {\n  if (!url) url = require('url')\n  const urlparse = url.parse(res.rawSpec)\n  res.saveSpec = res.rawSpec\n  // check the protocol, and then see if it's git or not\n  switch (urlparse.protocol) {\n    case 'git:':\n    case 'git+http:':\n    case 'git+https:':\n    case 'git+rsync:':\n    case 'git+ftp:':\n    case 'git+file:':\n    case 'git+ssh:':\n      res.type = 'git'\n      const match = urlparse.protocol === 'git+ssh:' && matchGitScp(res.rawSpec)\n      if (match) {\n        setGitCommittish(res, match.gitCommittish)\n        res.fetchSpec = match.fetchSpec\n      } else {\n        setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : '')\n        urlparse.protocol = urlparse.protocol.replace(/^git[+]/, '')\n        if (urlparse.protocol === 'file:' && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n          // keep the drive letter : on windows file paths\n          urlparse.host += ':'\n          urlparse.hostname += ':'\n        }\n        delete urlparse.hash\n        res.fetchSpec = url.format(urlparse)\n      }\n      break\n    case 'http:':\n    case 'https:':\n      res.type = 'remote'\n      res.fetchSpec = res.saveSpec\n      break\n\n    default:\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec)\n  }\n\n  return res\n}\n\nfunction fromAlias (res, where) {\n  const subSpec = npa(res.rawSpec.substr(4), where)\n  if (subSpec.type === 'alias') {\n    throw new Error('nested aliases not supported')\n  }\n  if (!subSpec.registry) {\n    throw new Error('aliases only work for registry deps')\n  }\n  res.subSpec = subSpec\n  res.registry = true\n  res.type = 'alias'\n  res.saveSpec = null\n  res.fetchSpec = null\n  return res\n}\n\nfunction fromRegistry (res) {\n  res.registry = true\n  const spec = res.rawSpec === '' ? 'latest' : res.rawSpec\n  // no save spec for registry components as we save based on the fetched\n  // version, not on the argument so this can't compute that.\n  res.saveSpec = null\n  res.fetchSpec = spec\n  if (!semver) semver = require('semver')\n  const version = semver.valid(spec, true)\n  const range = semver.validRange(spec, true)\n  if (version) {\n    res.type = 'version'\n  } else if (range) {\n    res.type = 'range'\n  } else {\n    if (encodeURIComponent(spec) !== spec) {\n      throw invalidTagName(spec)\n    }\n    res.type = 'tag'\n  }\n  return res\n}\n"]},"metadata":{},"sourceType":"script"}