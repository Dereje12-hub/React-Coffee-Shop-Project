{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInfoPlistPlugin = createInfoPlistPlugin;\nexports.createEntitlementsPlugin = createEntitlementsPlugin;\nexports.withPodfileProperties = exports.withXcodeProject = exports.withExpoPlist = exports.withEntitlementsPlist = exports.withInfoPlist = exports.withAppDelegate = void 0;\n\nfunction _withMod() {\n  var data = require(\"./withMod\");\n\n  _withMod = function _withMod() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction createInfoPlistPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withInfoPlist(config, function _callee(config) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(action(config, config.modResults));\n\n            case 2:\n              config.modResults = _context.sent;\n              return _context.abrupt(\"return\", config);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n\n  return withUnknown;\n}\n\nfunction createEntitlementsPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withEntitlementsPlist(config, function _callee2(config) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(action(config, config.modResults));\n\n            case 2:\n              config.modResults = _context2.sent;\n              return _context2.abrupt(\"return\", config);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n\n  return withUnknown;\n}\n\nvar withAppDelegate = function withAppDelegate(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'appDelegate',\n    action: action\n  });\n};\n\nexports.withAppDelegate = withAppDelegate;\n\nvar withInfoPlist = function withInfoPlist(config, _action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'infoPlist',\n    action: function action(config) {\n      return function _callee3() {\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(_action(config));\n\n              case 2:\n                config = _context3.sent;\n\n                if (!config.ios) {\n                  config.ios = {};\n                }\n\n                config.ios.infoPlist = config.modResults;\n                return _context3.abrupt(\"return\", config);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }();\n    }\n  });\n};\n\nexports.withInfoPlist = withInfoPlist;\n\nvar withEntitlementsPlist = function withEntitlementsPlist(config, _action2) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'entitlements',\n    action: function action(config) {\n      return function _callee4() {\n        return _regeneratorRuntime.async(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(_action2(config));\n\n              case 2:\n                config = _context4.sent;\n\n                if (!config.ios) {\n                  config.ios = {};\n                }\n\n                config.ios.entitlements = config.modResults;\n                return _context4.abrupt(\"return\", config);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }();\n    }\n  });\n};\n\nexports.withEntitlementsPlist = withEntitlementsPlist;\n\nvar withExpoPlist = function withExpoPlist(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'expoPlist',\n    action: action\n  });\n};\n\nexports.withExpoPlist = withExpoPlist;\n\nvar withXcodeProject = function withXcodeProject(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'xcodeproj',\n    action: action\n  });\n};\n\nexports.withXcodeProject = withXcodeProject;\n\nvar withPodfileProperties = function withPodfileProperties(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'podfileProperties',\n    action: action\n  });\n};\n\nexports.withPodfileProperties = withPodfileProperties;","map":{"version":3,"sources":["../../src/plugins/ios-plugins.ts"],"names":["withUnknown","config","withInfoPlist","action","Object","value","name","withEntitlementsPlist","withAppDelegate","platform","mod","withExpoPlist","withXcodeProject","withPodfileProperties"],"mappings":"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","sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport type { JSONObject } from '@expo/json-file';\nimport type { XcodeProject } from 'xcode';\n\nimport type { ConfigPlugin, Mod } from '../Plugin.types';\nimport type { ExpoPlist, InfoPlist } from '../ios/IosConfig.types';\nimport type { AppDelegateProjectFile } from '../ios/Paths';\nimport { withMod } from './withMod';\n\ntype MutateInfoPlistAction = (expo: ExpoConfig, infoPlist: InfoPlist) => InfoPlist;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createInfoPlistPlugin(action: MutateInfoPlistAction, name?: string): ConfigPlugin {\n  const withUnknown: ConfigPlugin = config =>\n    withInfoPlist(config, async config => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\ntype MutateEntitlementsPlistAction = (expo: ExpoConfig, entitlements: JSONObject) => JSONObject;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createEntitlementsPlugin(\n  action: MutateEntitlementsPlistAction,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = config =>\n    withEntitlementsPlist(config, async config => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\n/**\n * Provides the AppDelegate file for modification.\n *\n * @param config\n * @param action\n */\nexport const withAppDelegate: ConfigPlugin<Mod<AppDelegateProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'appDelegate',\n    action,\n  });\n};\n\n/**\n * Provides the Info.plist file for modification.\n * Keeps the config's expo.ios.infoPlist object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withInfoPlist: ConfigPlugin<Mod<InfoPlist>> = (config, action) => {\n  return withMod<InfoPlist>(config, {\n    platform: 'ios',\n    mod: 'infoPlist',\n    async action(config) {\n      config = await action(config);\n      if (!config.ios) {\n        config.ios = {};\n      }\n      config.ios.infoPlist = config.modResults;\n      return config;\n    },\n  });\n};\n\n/**\n * Provides the main .entitlements file for modification.\n * Keeps the config's expo.ios.entitlements object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withEntitlementsPlist: ConfigPlugin<Mod<JSONObject>> = (config, action) => {\n  return withMod<JSONObject>(config, {\n    platform: 'ios',\n    mod: 'entitlements',\n    async action(config) {\n      config = await action(config);\n      if (!config.ios) {\n        config.ios = {};\n      }\n      config.ios.entitlements = config.modResults;\n      return config;\n    },\n  });\n};\n\n/**\n * Provides the Expo.plist for modification.\n *\n * @param config\n * @param action\n */\nexport const withExpoPlist: ConfigPlugin<Mod<ExpoPlist>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'expoPlist',\n    action,\n  });\n};\n\n/**\n * Provides the main .xcodeproj for modification.\n *\n * @param config\n * @param action\n */\nexport const withXcodeProject: ConfigPlugin<Mod<XcodeProject>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'xcodeproj',\n    action,\n  });\n};\n\n/**\n * Provides the Podfile.properties.json for modification.\n *\n * @param config\n * @param action\n */\nexport const withPodfileProperties: ConfigPlugin<Mod<Record<string, string>>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'podfileProperties',\n    action,\n  });\n};\n"]},"metadata":{},"sourceType":"script"}