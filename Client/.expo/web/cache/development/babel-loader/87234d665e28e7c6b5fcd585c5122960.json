{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModulesPath = exports.createForProject = exports.YarnPackageManager = exports.NpmPackageManager = exports.isUsingYarn = void 0;\n\nvar json_file_1 = __importDefault(require(\"@expo/json-file\"));\n\nvar spawn_async_1 = __importDefault(require(\"@expo/spawn-async\"));\n\nvar ansi_regex_1 = __importDefault(require(\"ansi-regex\"));\n\nvar find_yarn_workspace_root_1 = __importDefault(require(\"find-yarn-workspace-root\"));\n\nvar fs_1 = require(\"fs\");\n\nvar npm_package_arg_1 = __importDefault(require(\"npm-package-arg\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar rimraf_1 = __importDefault(require(\"rimraf\"));\n\nvar split_1 = __importDefault(require(\"split\"));\n\nvar stream_1 = require(\"stream\");\n\nvar isYarnOfflineAsync_1 = __importDefault(require(\"./utils/isYarnOfflineAsync\"));\n\nvar disableAdsEnv = {\n  DISABLE_OPENCOLLECTIVE: '1',\n  ADBLOCK: '1'\n};\nvar ansi = \"(?:\" + ansi_regex_1.default().source + \")*\";\nvar npmPeerDependencyWarningPattern = new RegExp(ansi + \"npm\" + ansi + \" \" + ansi + \"WARN\" + ansi + \".+You must install peer dependencies yourself\\\\.\\n\", 'g');\nvar yarnPeerDependencyWarningPattern = new RegExp(ansi + \"warning\" + ansi + \" \\\"[^\\\"]+\\\" has (?:unmet|incorrect) peer dependency \\\"[^\\\"]+\\\"\\\\.\\n\", 'g');\n\nfunction isUsingYarn(projectRoot) {\n  var workspaceRoot = find_yarn_workspace_root_1.default(projectRoot);\n\n  if (workspaceRoot) {\n    return fs_1.existsSync(path_1.default.join(workspaceRoot, 'yarn.lock'));\n  }\n\n  return fs_1.existsSync(path_1.default.join(projectRoot, 'yarn.lock'));\n}\n\nexports.isUsingYarn = isUsingYarn;\n\nvar NpmStderrTransform = function (_stream_1$Transform) {\n  _inherits(NpmStderrTransform, _stream_1$Transform);\n\n  var _super = _createSuper(NpmStderrTransform);\n\n  function NpmStderrTransform() {\n    _classCallCheck(this, NpmStderrTransform);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NpmStderrTransform, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      this.push(chunk.toString().replace(npmPeerDependencyWarningPattern, ''));\n      callback();\n    }\n  }]);\n\n  return NpmStderrTransform;\n}(stream_1.Transform);\n\nvar YarnStderrTransform = function (_stream_1$Transform2) {\n  _inherits(YarnStderrTransform, _stream_1$Transform2);\n\n  var _super2 = _createSuper(YarnStderrTransform);\n\n  function YarnStderrTransform() {\n    _classCallCheck(this, YarnStderrTransform);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(YarnStderrTransform, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      this.push(chunk.toString().replace(yarnPeerDependencyWarningPattern, ''));\n      callback();\n    }\n  }]);\n\n  return YarnStderrTransform;\n}(stream_1.Transform);\n\nvar NpmPackageManager = function () {\n  function NpmPackageManager(_ref) {\n    var cwd = _ref.cwd,\n        log = _ref.log,\n        silent = _ref.silent;\n\n    _classCallCheck(this, NpmPackageManager);\n\n    this.log = log || console.log;\n    this.options = _objectSpread({\n      env: _objectSpread(_objectSpread({}, process.env), disableAdsEnv),\n      cwd: cwd\n    }, silent ? {\n      ignoreStdio: true\n    } : {\n      stdio: ['inherit', 'inherit', 'pipe']\n    });\n  }\n\n  _createClass(NpmPackageManager, [{\n    key: \"name\",\n    get: function get() {\n      return 'npm';\n    }\n  }, {\n    key: \"installAsync\",\n    value: function installAsync() {\n      return _regeneratorRuntime.async(function installAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this._runAsync(['install']));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addGlobalAsync\",\n    value: function addGlobalAsync() {\n      var _len,\n          names,\n          _key,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.async(function addGlobalAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              for (_len = _args2.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n                names[_key] = _args2[_key];\n              }\n\n              if (names.length) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", this.installAsync());\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(this._runAsync(['install', '--global'].concat(names)));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addAsync\",\n    value: function addAsync() {\n      var _len2,\n          names,\n          _key2,\n          _this$_parseSpecs,\n          versioned,\n          unversioned,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.async(function addAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              for (_len2 = _args3.length, names = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                names[_key2] = _args3[_key2];\n              }\n\n              if (names.length) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", this.installAsync());\n\n            case 3:\n              _this$_parseSpecs = this._parseSpecs(names), versioned = _this$_parseSpecs.versioned, unversioned = _this$_parseSpecs.unversioned;\n\n              if (!versioned.length) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(this._patchAsync(versioned, 'dependencies'));\n\n            case 7:\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(this._runAsync(['install']));\n\n            case 9:\n              if (!unversioned.length) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(this._runAsync(['install', '--save'].concat(_toConsumableArray(unversioned.map(function (spec) {\n                return spec.raw;\n              })))));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addDevAsync\",\n    value: function addDevAsync() {\n      var _len3,\n          names,\n          _key3,\n          _this$_parseSpecs2,\n          versioned,\n          unversioned,\n          _args4 = arguments;\n\n      return _regeneratorRuntime.async(function addDevAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              for (_len3 = _args4.length, names = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                names[_key3] = _args4[_key3];\n              }\n\n              if (names.length) {\n                _context4.next = 3;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", this.installAsync());\n\n            case 3:\n              _this$_parseSpecs2 = this._parseSpecs(names), versioned = _this$_parseSpecs2.versioned, unversioned = _this$_parseSpecs2.unversioned;\n\n              if (!versioned.length) {\n                _context4.next = 9;\n                break;\n              }\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(this._patchAsync(versioned, 'devDependencies'));\n\n            case 7:\n              _context4.next = 9;\n              return _regeneratorRuntime.awrap(this._runAsync(['install']));\n\n            case 9:\n              if (!unversioned.length) {\n                _context4.next = 12;\n                break;\n              }\n\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(this._runAsync(['install', '--save-dev'].concat(_toConsumableArray(unversioned.map(function (spec) {\n                return spec.raw;\n              })))));\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"removeAsync\",\n    value: function removeAsync() {\n      var _len4,\n          names,\n          _key4,\n          _args5 = arguments;\n\n      return _regeneratorRuntime.async(function removeAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              for (_len4 = _args5.length, names = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                names[_key4] = _args5[_key4];\n              }\n\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(this._runAsync(['uninstall'].concat(names)));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"versionAsync\",\n    value: function versionAsync() {\n      var _await$spawn_async_1$, stdout;\n\n      return _regeneratorRuntime.async(function versionAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(spawn_async_1.default('npm', ['--version'], {\n                stdio: 'pipe'\n              }));\n\n            case 2:\n              _await$spawn_async_1$ = _context6.sent;\n              stdout = _await$spawn_async_1$.stdout;\n              return _context6.abrupt(\"return\", stdout.trim());\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getConfigAsync\",\n    value: function getConfigAsync(key) {\n      var _await$spawn_async_1$2, stdout;\n\n      return _regeneratorRuntime.async(function getConfigAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(spawn_async_1.default('npm', ['config', 'get', key], {\n                stdio: 'pipe'\n              }));\n\n            case 2:\n              _await$spawn_async_1$2 = _context7.sent;\n              stdout = _await$spawn_async_1$2.stdout;\n              return _context7.abrupt(\"return\", stdout.trim());\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"removeLockfileAsync\",\n    value: function removeLockfileAsync() {\n      var lockfilePath;\n      return _regeneratorRuntime.async(function removeLockfileAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (this.options.cwd) {\n                _context8.next = 2;\n                break;\n              }\n\n              throw new Error('cwd required for NpmPackageManager.removeLockfileAsync');\n\n            case 2:\n              lockfilePath = path_1.default.join(this.options.cwd, 'package-lock.json');\n\n              if (fs_1.existsSync(lockfilePath)) {\n                rimraf_1.default.sync(lockfilePath);\n              }\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"cleanAsync\",\n    value: function cleanAsync() {\n      var nodeModulesPath;\n      return _regeneratorRuntime.async(function cleanAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (this.options.cwd) {\n                _context9.next = 2;\n                break;\n              }\n\n              throw new Error('cwd required for NpmPackageManager.cleanAsync');\n\n            case 2:\n              nodeModulesPath = path_1.default.join(this.options.cwd, 'node_modules');\n\n              if (fs_1.existsSync(nodeModulesPath)) {\n                rimraf_1.default.sync(nodeModulesPath);\n              }\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_runAsync\",\n    value: function _runAsync(args) {\n      var promise;\n      return _regeneratorRuntime.async(function _runAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!this.options.ignoreStdio) {\n                this.log(\"> npm \" + args.join(' '));\n              }\n\n              promise = spawn_async_1.default('npm', _toConsumableArray(args), _objectSpread(_objectSpread({}, this.options), {}, {\n                ignoreStdio: false\n              }));\n\n              if (promise.child.stderr && !this.options.ignoreStdio) {\n                promise.child.stderr.pipe(split_1.default(/\\r?\\n/, function (line) {\n                  return line + '\\n';\n                })).pipe(new NpmStderrTransform()).pipe(process.stderr);\n              }\n\n              return _context10.abrupt(\"return\", promise);\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_parseSpecs\",\n    value: function _parseSpecs(names) {\n      var result = {\n        versioned: [],\n        unversioned: []\n      };\n      names.map(function (name) {\n        return npm_package_arg_1.default(name);\n      }).forEach(function (spec) {\n        if (spec.rawSpec) {\n          result.versioned.push(spec);\n        } else {\n          result.unversioned.push(spec);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"_patchAsync\",\n    value: function _patchAsync(specs, packageType) {\n      var pkgPath, pkg;\n      return _regeneratorRuntime.async(function _patchAsync$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              pkgPath = path_1.default.join(this.options.cwd || '.', 'package.json');\n              _context11.next = 3;\n              return _regeneratorRuntime.awrap(json_file_1.default.readAsync(pkgPath));\n\n            case 3:\n              pkg = _context11.sent;\n              specs.forEach(function (spec) {\n                pkg[packageType] = pkg[packageType] || {};\n                pkg[packageType][spec.name] = spec.rawSpec;\n              });\n              _context11.next = 7;\n              return _regeneratorRuntime.awrap(json_file_1.default.writeAsync(pkgPath, pkg, {\n                json5: false\n              }));\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return NpmPackageManager;\n}();\n\nexports.NpmPackageManager = NpmPackageManager;\n\nvar YarnPackageManager = function () {\n  function YarnPackageManager(_ref2) {\n    var cwd = _ref2.cwd,\n        log = _ref2.log,\n        silent = _ref2.silent;\n\n    _classCallCheck(this, YarnPackageManager);\n\n    this.log = log || console.log;\n    this.options = _objectSpread({\n      env: _objectSpread(_objectSpread({}, process.env), disableAdsEnv),\n      cwd: cwd\n    }, silent ? {\n      ignoreStdio: true\n    } : {\n      stdio: ['inherit', 'inherit', 'pipe']\n    });\n  }\n\n  _createClass(YarnPackageManager, [{\n    key: \"name\",\n    get: function get() {\n      return 'Yarn';\n    }\n  }, {\n    key: \"withOfflineSupportAsync\",\n    value: function withOfflineSupportAsync() {\n      var _len5,\n          args,\n          _key5,\n          _args12 = arguments;\n\n      return _regeneratorRuntime.async(function withOfflineSupportAsync$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              for (_len5 = _args12.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                args[_key5] = _args12[_key5];\n              }\n\n              _context12.next = 3;\n              return _regeneratorRuntime.awrap(isYarnOfflineAsync_1.default());\n\n            case 3:\n              if (!_context12.sent) {\n                _context12.next = 5;\n                break;\n              }\n\n              args.push('--offline');\n\n            case 5:\n              return _context12.abrupt(\"return\", args);\n\n            case 6:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"installAsync\",\n    value: function installAsync() {\n      var args;\n      return _regeneratorRuntime.async(function installAsync$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return _regeneratorRuntime.awrap(this.withOfflineSupportAsync('install'));\n\n            case 2:\n              args = _context13.sent;\n              _context13.next = 5;\n              return _regeneratorRuntime.awrap(this._runAsync(args));\n\n            case 5:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addGlobalAsync\",\n    value: function addGlobalAsync() {\n      var args,\n          _args14 = arguments;\n      return _regeneratorRuntime.async(function addGlobalAsync$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              if (_args14.length) {\n                _context14.next = 2;\n                break;\n              }\n\n              return _context14.abrupt(\"return\", this.installAsync());\n\n            case 2:\n              _context14.next = 4;\n              return _regeneratorRuntime.awrap(this.withOfflineSupportAsync('global', 'add'));\n\n            case 4:\n              args = _context14.sent;\n              args.push.apply(args, _args14);\n              _context14.next = 8;\n              return _regeneratorRuntime.awrap(this._runAsync(args));\n\n            case 8:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addAsync\",\n    value: function addAsync() {\n      var args,\n          _args15 = arguments;\n      return _regeneratorRuntime.async(function addAsync$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              if (_args15.length) {\n                _context15.next = 2;\n                break;\n              }\n\n              return _context15.abrupt(\"return\", this.installAsync());\n\n            case 2:\n              _context15.next = 4;\n              return _regeneratorRuntime.awrap(this.withOfflineSupportAsync('add'));\n\n            case 4:\n              args = _context15.sent;\n              args.push.apply(args, _args15);\n              _context15.next = 8;\n              return _regeneratorRuntime.awrap(this._runAsync(args));\n\n            case 8:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addDevAsync\",\n    value: function addDevAsync() {\n      var args,\n          _args16 = arguments;\n      return _regeneratorRuntime.async(function addDevAsync$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              if (_args16.length) {\n                _context16.next = 2;\n                break;\n              }\n\n              return _context16.abrupt(\"return\", this.installAsync());\n\n            case 2:\n              _context16.next = 4;\n              return _regeneratorRuntime.awrap(this.withOfflineSupportAsync('add', '--dev'));\n\n            case 4:\n              args = _context16.sent;\n              args.push.apply(args, _args16);\n              _context16.next = 8;\n              return _regeneratorRuntime.awrap(this._runAsync(args));\n\n            case 8:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"removeAsync\",\n    value: function removeAsync() {\n      var _len6,\n          names,\n          _key6,\n          _args17 = arguments;\n\n      return _regeneratorRuntime.async(function removeAsync$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              for (_len6 = _args17.length, names = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n                names[_key6] = _args17[_key6];\n              }\n\n              _context17.next = 3;\n              return _regeneratorRuntime.awrap(this._runAsync(['remove'].concat(names)));\n\n            case 3:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"versionAsync\",\n    value: function versionAsync() {\n      var _await$spawn_async_1$3, stdout;\n\n      return _regeneratorRuntime.async(function versionAsync$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return _regeneratorRuntime.awrap(spawn_async_1.default('yarnpkg', ['--version'], {\n                stdio: 'pipe'\n              }));\n\n            case 2:\n              _await$spawn_async_1$3 = _context18.sent;\n              stdout = _await$spawn_async_1$3.stdout;\n              return _context18.abrupt(\"return\", stdout.trim());\n\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getConfigAsync\",\n    value: function getConfigAsync(key) {\n      var _await$spawn_async_1$4, stdout;\n\n      return _regeneratorRuntime.async(function getConfigAsync$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return _regeneratorRuntime.awrap(spawn_async_1.default('yarnpkg', ['config', 'get', key], {\n                stdio: 'pipe'\n              }));\n\n            case 2:\n              _await$spawn_async_1$4 = _context19.sent;\n              stdout = _await$spawn_async_1$4.stdout;\n              return _context19.abrupt(\"return\", stdout.trim());\n\n            case 5:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"removeLockfileAsync\",\n    value: function removeLockfileAsync() {\n      var lockfilePath;\n      return _regeneratorRuntime.async(function removeLockfileAsync$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              if (this.options.cwd) {\n                _context20.next = 2;\n                break;\n              }\n\n              throw new Error('cwd required for YarnPackageManager.removeLockfileAsync');\n\n            case 2:\n              lockfilePath = path_1.default.join(this.options.cwd, 'yarn-lock.json');\n\n              if (fs_1.existsSync(lockfilePath)) {\n                rimraf_1.default.sync(lockfilePath);\n              }\n\n            case 4:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"cleanAsync\",\n    value: function cleanAsync() {\n      var nodeModulesPath;\n      return _regeneratorRuntime.async(function cleanAsync$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              if (this.options.cwd) {\n                _context21.next = 2;\n                break;\n              }\n\n              throw new Error('cwd required for YarnPackageManager.cleanAsync');\n\n            case 2:\n              nodeModulesPath = path_1.default.join(this.options.cwd, 'node_modules');\n\n              if (fs_1.existsSync(nodeModulesPath)) {\n                rimraf_1.default.sync(nodeModulesPath);\n              }\n\n            case 4:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_runAsync\",\n    value: function _runAsync(args) {\n      var promise;\n      return _regeneratorRuntime.async(function _runAsync$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              if (!this.options.ignoreStdio) {\n                this.log(\"> yarn \" + args.join(' '));\n              }\n\n              promise = spawn_async_1.default('yarnpkg', args, _objectSpread(_objectSpread({}, this.options), {}, {\n                ignoreStdio: false\n              }));\n\n              if (promise.child.stderr && !this.options.ignoreStdio) {\n                promise.child.stderr.pipe(new YarnStderrTransform()).pipe(process.stderr);\n              }\n\n              return _context22.abrupt(\"return\", promise);\n\n            case 4:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return YarnPackageManager;\n}();\n\nexports.YarnPackageManager = YarnPackageManager;\n\nfunction createForProject(projectRoot) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var PackageManager;\n\n  if (options.npm) {\n    PackageManager = NpmPackageManager;\n  } else if (options.yarn) {\n    PackageManager = YarnPackageManager;\n  } else if (isUsingYarn(projectRoot)) {\n    PackageManager = YarnPackageManager;\n  } else {\n    PackageManager = NpmPackageManager;\n  }\n\n  return new PackageManager({\n    cwd: projectRoot,\n    log: options.log,\n    silent: options.silent\n  });\n}\n\nexports.createForProject = createForProject;\n\nfunction getModulesPath(projectRoot) {\n  var workspaceRoot = find_yarn_workspace_root_1.default(path_1.default.resolve(projectRoot));\n\n  if (workspaceRoot) {\n    return path_1.default.resolve(workspaceRoot, 'node_modules');\n  }\n\n  return path_1.default.resolve(projectRoot, 'node_modules');\n}\n\nexports.getModulesPath = getModulesPath;","map":{"version":3,"sources":["../src/NodePackageManagers.ts"],"names":[],"mappings":"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","sourcesContent":["import JsonFile from '@expo/json-file';\nimport spawnAsync, { SpawnOptions } from '@expo/spawn-async';\nimport ansiRegex from 'ansi-regex';\nimport findWorkspaceRoot from 'find-yarn-workspace-root';\nimport { existsSync } from 'fs';\nimport npmPackageArg from 'npm-package-arg';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport split from 'split';\nimport { Transform } from 'stream';\n\nimport { Logger, PackageManager } from './PackageManager';\nimport isYarnOfflineAsync from './utils/isYarnOfflineAsync';\n\n/**\n * Disable various postinstall scripts\n * - https://github.com/opencollective/opencollective-postinstall/pull/9\n */\nconst disableAdsEnv = { DISABLE_OPENCOLLECTIVE: '1', ADBLOCK: '1' };\n\nconst ansi = `(?:${ansiRegex().source})*`;\nconst npmPeerDependencyWarningPattern = new RegExp(\n  `${ansi}npm${ansi} ${ansi}WARN${ansi}.+You must install peer dependencies yourself\\\\.\\n`,\n  'g'\n);\nconst yarnPeerDependencyWarningPattern = new RegExp(\n  `${ansi}warning${ansi} \"[^\"]+\" has (?:unmet|incorrect) peer dependency \"[^\"]+\"\\\\.\\n`,\n  'g'\n);\n\n/**\n * Returns true if the project is using yarn, false if the project is using npm.\n *\n * @param projectRoot\n */\nexport function isUsingYarn(projectRoot: string): boolean {\n  const workspaceRoot = findWorkspaceRoot(projectRoot);\n  if (workspaceRoot) {\n    return existsSync(path.join(workspaceRoot, 'yarn.lock'));\n  }\n  return existsSync(path.join(projectRoot, 'yarn.lock'));\n}\n\nclass NpmStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(npmPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\n\nclass YarnStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(yarnPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\nexport class NpmPackageManager implements PackageManager {\n  options: SpawnOptions;\n\n  private log: Logger;\n\n  constructor({ cwd, log, silent }: { cwd: string; log?: Logger; silent?: boolean }) {\n    this.log = log || console.log;\n    this.options = {\n      env: {\n        ...process.env,\n        ...disableAdsEnv,\n      },\n      cwd,\n      ...(silent\n        ? { ignoreStdio: true }\n        : {\n            stdio: ['inherit', 'inherit', 'pipe'],\n          }),\n    };\n  }\n\n  get name() {\n    return 'npm';\n  }\n\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n\n  async addGlobalAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    await this._runAsync(['install', '--global', ...names]);\n  }\n\n  async addAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'dependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n\n  async addDevAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'devDependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save-dev', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n\n  async removeAsync(...names: string[]) {\n    await this._runAsync(['uninstall', ...names]);\n  }\n\n  async versionAsync() {\n    const { stdout } = await spawnAsync('npm', ['--version'], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async getConfigAsync(key: string) {\n    const { stdout } = await spawnAsync('npm', ['config', 'get', key], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async removeLockfileAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for NpmPackageManager.removeLockfileAsync');\n    }\n    const lockfilePath = path.join(this.options.cwd, 'package-lock.json');\n    if (existsSync(lockfilePath)) {\n      rimraf.sync(lockfilePath);\n    }\n  }\n\n  async cleanAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for NpmPackageManager.cleanAsync');\n    }\n    const nodeModulesPath = path.join(this.options.cwd, 'node_modules');\n    if (existsSync(nodeModulesPath)) {\n      rimraf.sync(nodeModulesPath);\n    }\n  }\n\n  // Private\n  private async _runAsync(args: string[]) {\n    if (!this.options.ignoreStdio) {\n      this.log(`> npm ${args.join(' ')}`);\n    }\n\n    // Have spawnAsync consume stdio but we don't actually do anything with it if it's ignored\n    const promise = spawnAsync('npm', [...args], { ...this.options, ignoreStdio: false });\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr\n        .pipe(split(/\\r?\\n/, (line: string) => line + '\\n'))\n        .pipe(new NpmStderrTransform())\n        .pipe(process.stderr);\n    }\n    return promise;\n  }\n\n  private _parseSpecs(names: string[]) {\n    const result: {\n      versioned: npmPackageArg.Result[];\n      unversioned: npmPackageArg.Result[];\n    } = { versioned: [], unversioned: [] };\n    names\n      .map(name => npmPackageArg(name))\n      .forEach(spec => {\n        if (spec.rawSpec) {\n          result.versioned.push(spec);\n        } else {\n          result.unversioned.push(spec);\n        }\n      });\n    return result;\n  }\n\n  private async _patchAsync(\n    specs: npmPackageArg.Result[],\n    packageType: 'dependencies' | 'devDependencies'\n  ) {\n    const pkgPath = path.join(this.options.cwd || '.', 'package.json');\n    const pkg = await JsonFile.readAsync(pkgPath);\n    specs.forEach(spec => {\n      pkg[packageType] = pkg[packageType] || {};\n      // @ts-ignore\n      pkg[packageType][spec.name!] = spec.rawSpec;\n    });\n    await JsonFile.writeAsync(pkgPath, pkg, { json5: false });\n  }\n}\n\nexport class YarnPackageManager implements PackageManager {\n  options: SpawnOptions;\n  private log: Logger;\n\n  constructor({ cwd, log, silent }: { cwd: string; log?: Logger; silent?: boolean }) {\n    this.log = log || console.log;\n    this.options = {\n      env: {\n        ...process.env,\n        ...disableAdsEnv,\n      },\n      cwd,\n      ...(silent\n        ? { ignoreStdio: true }\n        : {\n            stdio: ['inherit', 'inherit', 'pipe'],\n          }),\n    };\n  }\n\n  get name() {\n    return 'Yarn';\n  }\n\n  private async withOfflineSupportAsync(...args: string[]): Promise<string[]> {\n    if (await isYarnOfflineAsync()) {\n      args.push('--offline');\n    }\n    // TODO: Maybe prompt about being offline and using local yarn cache.\n    return args;\n  }\n\n  async installAsync() {\n    const args = await this.withOfflineSupportAsync('install');\n    await this._runAsync(args);\n  }\n\n  async addGlobalAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    const args = await this.withOfflineSupportAsync('global', 'add');\n    args.push(...names);\n\n    await this._runAsync(args);\n  }\n\n  async addAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    const args = await this.withOfflineSupportAsync('add');\n    args.push(...names);\n\n    await this._runAsync(args);\n  }\n\n  async addDevAsync(...names: string[]) {\n    if (!names.length) return this.installAsync();\n    const args = await this.withOfflineSupportAsync('add', '--dev');\n    args.push(...names);\n    await this._runAsync(args);\n  }\n\n  async removeAsync(...names: string[]) {\n    await this._runAsync(['remove', ...names]);\n  }\n\n  async versionAsync() {\n    const { stdout } = await spawnAsync('yarnpkg', ['--version'], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async getConfigAsync(key: string) {\n    const { stdout } = await spawnAsync('yarnpkg', ['config', 'get', key], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async removeLockfileAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for YarnPackageManager.removeLockfileAsync');\n    }\n    const lockfilePath = path.join(this.options.cwd, 'yarn-lock.json');\n    if (existsSync(lockfilePath)) {\n      rimraf.sync(lockfilePath);\n    }\n  }\n\n  async cleanAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for YarnPackageManager.cleanAsync');\n    }\n    const nodeModulesPath = path.join(this.options.cwd, 'node_modules');\n    if (existsSync(nodeModulesPath)) {\n      rimraf.sync(nodeModulesPath);\n    }\n  }\n\n  // Private\n  private async _runAsync(args: string[]) {\n    if (!this.options.ignoreStdio) {\n      this.log(`> yarn ${args.join(' ')}`);\n    }\n\n    // Have spawnAsync consume stdio but we don't actually do anything with it if it's ignored\n    const promise = spawnAsync('yarnpkg', args, { ...this.options, ignoreStdio: false });\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr.pipe(new YarnStderrTransform()).pipe(process.stderr);\n    }\n    return promise;\n  }\n}\n\nexport type CreateForProjectOptions = {\n  npm?: boolean;\n  yarn?: boolean;\n  log?: Logger;\n  silent?: boolean;\n};\n\nexport function createForProject(\n  projectRoot: string,\n  options: CreateForProjectOptions = {}\n): NpmPackageManager | YarnPackageManager {\n  let PackageManager;\n  if (options.npm) {\n    PackageManager = NpmPackageManager;\n  } else if (options.yarn) {\n    PackageManager = YarnPackageManager;\n  } else if (isUsingYarn(projectRoot)) {\n    PackageManager = YarnPackageManager;\n  } else {\n    PackageManager = NpmPackageManager;\n  }\n\n  return new PackageManager({ cwd: projectRoot, log: options.log, silent: options.silent });\n}\n\nexport function getModulesPath(projectRoot: string): string {\n  const workspaceRoot = findWorkspaceRoot(path.resolve(projectRoot)); // Absolute path or null\n  if (workspaceRoot) {\n    return path.resolve(workspaceRoot, 'node_modules');\n  }\n\n  return path.resolve(projectRoot, 'node_modules');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}