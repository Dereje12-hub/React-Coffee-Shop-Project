{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModuleDependencyWarning = exports.getNotFoundError = void 0;\n\nvar chalk_1 = __importDefault(require(\"chalk\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar WebpackFileError_1 = require(\"./WebpackFileError\");\n\nvar createOriginalStackFrame_1 = require(\"./createOriginalStackFrame\");\n\nvar isWebpack5 = false;\n\nfunction getModuleTrace(input, compilation) {\n  var visitedModules = new Set();\n  var moduleTrace = [];\n  var current = input.module;\n\n  while (current) {\n    if (visitedModules.has(current)) break;\n    visitedModules.add(current);\n    var origin = compilation.moduleGraph.getIssuer(current);\n    if (!origin) break;\n    moduleTrace.push({\n      origin: origin,\n      module: current\n    });\n    current = origin;\n  }\n\n  return moduleTrace;\n}\n\nfunction getNotFoundError(compilation, input, fileName) {\n  var stack, errorMessage;\n  return _regeneratorRuntime.async(function getNotFoundError$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(input.name !== 'ModuleNotFoundError')) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", false);\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(createStackTrace(getProjectRoot(compilation), {\n            loc: input.loc ? input.loc : (input.dependencies || []).map(function (d) {\n              return d.loc;\n            }).filter(Boolean)[0],\n            originalSource: input.module.originalSource()\n          }));\n\n        case 4:\n          stack = _context.sent;\n\n          if (stack) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", input);\n\n        case 7:\n          errorMessage = input.error.message.replace(/ in '.*?'/, '').replace(/Can't resolve '(.*)'/, \"Can't resolve '\" + chalk_1.default.green('$1') + \"'\");\n          return _context.abrupt(\"return\", new WebpackFileError_1.WebpackFileError({\n            filePath: fileName,\n            line: stack.lineNumber,\n            col: stack.column\n          }, [chalk_1.default.red.bold('Module not found') + (\": \" + errorMessage), stack.frame, getImportTrace(compilation, input)].filter(Boolean).join('\\n')));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.getNotFoundError = getNotFoundError;\n\nfunction getImportTrace(compilation, input) {\n  if (!isWebpack5) {\n    return '';\n  }\n\n  var projectRoot = getProjectRoot(compilation);\n  var importTraceLine = '\\nImport trace for requested module:\\n';\n  var moduleTrace = getModuleTrace(input, compilation);\n\n  for (var _iterator = _createForOfIteratorHelperLoose(moduleTrace), _step; !(_step = _iterator()).done;) {\n    var _ref = _step.value;\n    var origin = _ref.origin;\n\n    if (!origin.resource) {\n      continue;\n    }\n\n    var filePath = path_1.default.relative(projectRoot, origin.resource);\n    importTraceLine += \"./\" + filePath + \"\\n\";\n  }\n\n  return importTraceLine + '\\n';\n}\n\nfunction getModuleDependencyWarning(compilation, input, fileName) {\n  var stack;\n  return _regeneratorRuntime.async(function getModuleDependencyWarning$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(input.name !== 'ModuleDependencyWarning')) {\n            _context2.next = 2;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", false);\n\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(createStackTrace(getProjectRoot(compilation), {\n            loc: input.loc,\n            originalSource: input.module.originalSource()\n          }));\n\n        case 4:\n          stack = _context2.sent;\n\n          if (stack) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", input);\n\n        case 7:\n          return _context2.abrupt(\"return\", new WebpackFileError_1.WebpackFileError({\n            filePath: fileName,\n            line: stack.lineNumber,\n            col: stack.column\n          }, [input.error.message, stack.frame, getImportTrace(compilation, input)].filter(Boolean).join('\\n')));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.getModuleDependencyWarning = getModuleDependencyWarning;\n\nfunction getProjectRoot(compilation) {\n  var _a;\n\n  return (_a = compilation.options.context) !== null && _a !== void 0 ? _a : compilation.context;\n}\n\nfunction createStackTrace(projectRoot, _ref2) {\n  var loc, originalSource, _a, _b, _c, result;\n\n  return _regeneratorRuntime.async(function createStackTrace$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          loc = _ref2.loc, originalSource = _ref2.originalSource;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(createOriginalStackFrame_1.createOriginalStackFrame({\n            line: (_a = loc === null || loc === void 0 ? void 0 : loc.start) === null || _a === void 0 ? void 0 : _a.line,\n            column: (_b = loc === null || loc === void 0 ? void 0 : loc.start) === null || _b === void 0 ? void 0 : _b.column,\n            source: originalSource,\n            rootDirectory: projectRoot,\n            frameNodeModules: true,\n            frame: {}\n          }));\n\n        case 4:\n          result = _context3.sent;\n\n          if (result) {\n            _context3.next = 7;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 7:\n          return _context3.abrupt(\"return\", {\n            lineNumber: result.originalStackFrame.lineNumber,\n            column: result.originalStackFrame.column,\n            frame: (_c = result.originalCodeFrame) !== null && _c !== void 0 ? _c : ''\n          });\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log('Failed to parse source map:', _context3.t0);\n          return _context3.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 10]], Promise);\n}","map":{"version":3,"sources":["../../../src/plugins/ExpectedErrors/parseNotFoundError.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright JS Foundation and other contributors\n * Copyright (c) 2021 Vercel, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Based on https://github.com/webpack/webpack/blob/fcdd04a833943394bbb0a9eeb54a962a24cc7e41/lib/stats/DefaultStatsFactoryPlugin.js#L422-L431\n * Based on https://github.com/vercel/next.js/pull/27840\n */\nimport chalk from 'chalk';\nimport path from 'path';\nimport webpack from 'webpack';\n\nimport { WebpackFileError } from './WebpackFileError';\nimport { createOriginalStackFrame } from './createOriginalStackFrame';\n\n// import { isWebpack5 } from 'webpack';\n// TODO: Webpack 5\nconst isWebpack5 = false;\n\nfunction getModuleTrace(input: any, compilation: any) {\n  const visitedModules = new Set();\n  const moduleTrace = [];\n  let current = input.module;\n  while (current) {\n    if (visitedModules.has(current)) break; // circular (technically impossible, but who knows)\n    visitedModules.add(current);\n    const origin = compilation.moduleGraph.getIssuer(current);\n    if (!origin) break;\n    moduleTrace.push({ origin, module: current });\n    current = origin;\n  }\n\n  return moduleTrace;\n}\n\nexport async function getNotFoundError(compilation: any, input: any, fileName: string) {\n  if (input.name !== 'ModuleNotFoundError') {\n    return false;\n  }\n  const stack = await createStackTrace(getProjectRoot(compilation), {\n    loc: input.loc\n      ? input.loc\n      : (input.dependencies || []).map((d: any) => d.loc).filter(Boolean)[0],\n    originalSource: input.module.originalSource(),\n  });\n  // If we could not result the original location we still need to show the existing error\n  if (!stack) {\n    return input;\n  }\n\n  const errorMessage = input.error.message\n    .replace(/ in '.*?'/, '')\n    .replace(/Can't resolve '(.*)'/, `Can't resolve '${chalk.green('$1')}'`);\n\n  return new WebpackFileError(\n    {\n      filePath: fileName,\n      line: stack.lineNumber,\n      col: stack.column,\n    },\n    [\n      chalk.red.bold('Module not found') + `: ${errorMessage}`,\n      stack.frame,\n      getImportTrace(compilation, input),\n      // TODO: FYI\n    ]\n      .filter(Boolean)\n      .join('\\n')\n  );\n}\n\nfunction getImportTrace(compilation: webpack.compilation.Compilation, input: any) {\n  if (!isWebpack5) {\n    return '';\n  }\n\n  const projectRoot = getProjectRoot(compilation);\n\n  let importTraceLine = '\\nImport trace for requested module:\\n';\n  const moduleTrace = getModuleTrace(input, compilation);\n\n  for (const { origin } of moduleTrace) {\n    if (!origin.resource) {\n      continue;\n    }\n    const filePath = path.relative(projectRoot, origin.resource);\n    importTraceLine += `./${filePath}\\n`;\n  }\n\n  return importTraceLine + '\\n';\n}\n\n// This can occur in React Native when using require incorrectly:\n// i.e. `(require: any).Systrace = Systrace;` which is valid in Metro.\nexport async function getModuleDependencyWarning(\n  compilation: webpack.compilation.Compilation,\n  input: any,\n  fileName: string\n) {\n  if (input.name !== 'ModuleDependencyWarning') {\n    return false;\n  }\n\n  const stack = await createStackTrace(getProjectRoot(compilation), {\n    loc: input.loc,\n    originalSource: input.module.originalSource(),\n  });\n\n  // If we could not result the original location we still need to show the existing error\n  if (!stack) {\n    return input;\n  }\n\n  return new WebpackFileError(\n    {\n      filePath: fileName,\n      line: stack.lineNumber,\n      col: stack.column,\n    },\n    [\n      input.error.message,\n      stack.frame,\n      getImportTrace(compilation, input),\n      // TODO: FYI\n    ]\n      .filter(Boolean)\n      .join('\\n')\n  );\n}\n\nfunction getProjectRoot(compilation: webpack.compilation.Compilation): string {\n  // @ts-ignore: Webpack v5/v4\n  return compilation.options.context ?? compilation.context;\n}\n\nasync function createStackTrace(\n  projectRoot: string,\n  { loc, originalSource }: { loc: any; originalSource: any }\n) {\n  try {\n    const result = await createOriginalStackFrame({\n      line: loc?.start?.line,\n      column: loc?.start?.column,\n      source: originalSource,\n      rootDirectory: projectRoot,\n      frameNodeModules: true,\n      frame: {},\n    });\n\n    // If we could not result the original location we still need to show the existing error\n    if (!result) {\n      return null;\n    }\n    return {\n      lineNumber: result.originalStackFrame.lineNumber,\n      column: result.originalStackFrame.column,\n      frame: result.originalCodeFrame ?? '',\n    };\n  } catch (err) {\n    console.log('Failed to parse source map:', err);\n    // Don't fail on failure to resolve sourcemaps\n    return null;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}