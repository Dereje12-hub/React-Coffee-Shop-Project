{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport CustomerOrderSize from \"./CustomerOrderSize\";\nimport CustomerOrderType from \"./CustomerOrderType\";\nimport CustomerOrderElements from \"./CustomerOrderElements.css\";\nimport IncDecReset from \"../IncDecReset/IncDecReset\";\nimport Invoice from \"../Invoice/Invoice\";\nimport Axios from 'axios';\nimport DisplayTime from \"../DisplayTimer/DisplayTimer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar CustomerOrder = function CustomerOrder() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      customername = _useState4[0],\n      setCustomerName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderType = _useState6[0],\n      setOrderType = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      orderSizePrice = _useState8[0],\n      setOrderSizePrice = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      orderCount = _useState10[0],\n      setOrderCount = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      subtotal = _useState12[0],\n      setSubtotal = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tax = _useState14[0],\n      setTax = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      total = _useState16[0],\n      setTotal = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      listInvoice = _useState18[0],\n      setListInvoice = _useState18[1];\n\n  var SetOnDb = function SetOnDb() {\n    console.log(\"I am in setOnDB\");\n    Axios.post(\"http://localhost:4000/sale\", {\n      username: username,\n      customername: customername,\n      orderType: orderType,\n      orderSizeprice: orderSizePrice,\n      orderCount: orderCount,\n      subtotal: subtotal,\n      tax: tax,\n      total: total\n    }).then(function (response) {\n      console.log(response);\n    });\n  };\n\n  var COTTP = function COTTP(acceptType) {\n    setOrderType(acceptType);\n  };\n\n  var COSTP = function COSTP(acceptSize) {\n    setOrderSizePrice(acceptSize);\n  };\n\n  var IDCTP = function IDCTP(acceptCount) {\n    setOrderCount(acceptCount);\n  };\n\n  var INVOICE = function INVOICE(calInvoice) {\n    listInvoice(calInvoice);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(\"div\", {\n      children: [_jsxs(\"div\", {\n        className: \"flexbox-container\",\n        children: [_jsx(CustomerOrderType, {\n          COTTP: COTTP\n        }), _jsx(CustomerOrderSize, {\n          COSTP: COSTP\n        }), _jsx(IncDecReset, {\n          IDCTP: IDCTP\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return SetOnDb();\n          },\n          title: \"Place an Order\",\n          color: \"green\"\n        })]\n      }), _jsxs(\"div\", {\n        children: [_jsx(\"div\", {\n          children: _jsx(DisplayTime, {})\n        }), _jsx(Invoice, {\n          INVOICE: INVOICE\n        })]\n      })]\n    })\n  });\n};\n\nexport default CustomerOrder;","map":{"version":3,"sources":["C:/Users/Dereje/Documents/React-CoffeeShop-Project/Client/src/Components/CustomerOrder/CustomerOrder.js"],"names":["React","useState","useEffect","CustomerOrderSize","CustomerOrderType","CustomerOrderElements","IncDecReset","Invoice","Axios","DisplayTime","CustomerOrder","username","setUserName","customername","setCustomerName","orderType","setOrderType","orderSizePrice","setOrderSizePrice","orderCount","setOrderCount","subtotal","setSubtotal","tax","setTax","total","setTotal","listInvoice","setListInvoice","SetOnDb","console","log","post","orderSizeprice","then","response","COTTP","acceptType","COSTP","acceptSize","IDCTP","acceptCount","INVOICE","calInvoice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  StyleSheet,\r\n  Pressable,\r\n  Text,\r\n  Button,\r\n  View,\r\n  Image,\r\n} from 'react-native';\r\nimport CustomerOrderSize from './CustomerOrderSize';\r\nimport CustomerOrderType from './CustomerOrderType';\r\nimport CustomerOrderElements from './CustomerOrderElements.css'\r\nimport IncDecReset from '../IncDecReset/IncDecReset';\r\nimport Invoice from '../Invoice/Invoice';\r\nimport Axios from 'axios';\r\nimport DisplayTime from '../DisplayTimer/DisplayTimer';\r\n\r\n\r\n\r\nconst CustomerOrder = () => {\r\n\r\n  const [username, setUserName] = useState('')\r\n  const [customername, setCustomerName] = useState('');\r\n  \r\n  const [orderType, setOrderType] = useState('')\r\n  const [orderSizePrice, setOrderSizePrice] = useState('');\r\n  const [orderCount, setOrderCount] = useState('');\r\n  \r\n  const [subtotal, setSubtotal] = useState('');\r\n  const [tax, setTax] = useState('');\r\n  //const [tip, setTip] = useState('');\r\n  const [total, setTotal] = useState('');\r\n\r\n  const [listInvoice, setListInvoice] = useState([]);\r\n\r\n  \r\n  \r\n  const SetOnDb = () => {\r\n       console.log(\"I am in setOnDB\");\r\n      Axios.post(\"http://localhost:4000/sale\", {\r\n              username: username,\r\n              customername: customername,\r\n              orderType: orderType,\r\n              orderSizeprice: orderSizePrice,\r\n              orderCount: orderCount,\r\n              subtotal: subtotal,\r\n              tax: tax,\r\n              total: total,\r\n\r\n            }).then((response) => {\r\n              //console.log(\"Registry is successful!\");\r\n              console.log(response);\r\n            \r\n            })\r\n  }\r\n\r\n  const COTTP =(acceptType) => {\r\n    setOrderType(acceptType)\r\n  }\r\n\r\n  const COSTP =(acceptSize) => {\r\n    setOrderSizePrice(acceptSize)\r\n  }\r\n\r\n  const IDCTP =(acceptCount) => {\r\n    setOrderCount(acceptCount)\r\n  }\r\n\r\n  const INVOICE =(calInvoice) => {\r\n    listInvoice(calInvoice)\r\n  }\r\n\r\n  return (\r\n    <> \r\n    <div> \r\n        <div className=\"flexbox-container\">\r\n          <CustomerOrderType COTTP={COTTP} /> \r\n          <CustomerOrderSize COSTP ={COSTP} /> \r\n          <IncDecReset IDCTP={IDCTP} />\r\n          <Button\r\n            onPress={() => SetOnDb()}\r\n            title=\"Place an Order\"\r\n            color=\"green\"\r\n          />\r\n        </div> \r\n        <div> \r\n          <div> \r\n             <DisplayTime />\r\n          </div>\r\n             <Invoice INVOICE={INVOICE} /> \r\n          </div>\r\n          \r\n\r\n    </div>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default CustomerOrder;"]},"metadata":{},"sourceType":"module"}