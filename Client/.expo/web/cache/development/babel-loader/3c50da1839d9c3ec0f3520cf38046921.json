{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGoogleMapsApiKey = getGoogleMapsApiKey;\nexports.setGoogleMapsApiKey = setGoogleMapsApiKey;\nexports.withGoogleMapsApiKey = void 0;\n\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n\n  _Manifest = function _Manifest() {\n    return data;\n  };\n\n  return data;\n}\n\nvar META_API_KEY = 'com.google.android.geo.API_KEY';\nvar LIB_HTTP = 'org.apache.http.legacy';\nvar withGoogleMapsApiKey = (0, _androidPlugins().createAndroidManifestPlugin)(setGoogleMapsApiKey, 'withGoogleMapsApiKey');\nexports.withGoogleMapsApiKey = withGoogleMapsApiKey;\n\nfunction getGoogleMapsApiKey(config) {\n  var _config$android$confi, _config$android, _config$android$confi2, _config$android$confi3;\n\n  return (_config$android$confi = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : (_config$android$confi2 = _config$android.config) === null || _config$android$confi2 === void 0 ? void 0 : (_config$android$confi3 = _config$android$confi2.googleMaps) === null || _config$android$confi3 === void 0 ? void 0 : _config$android$confi3.apiKey) !== null && _config$android$confi !== void 0 ? _config$android$confi : null;\n}\n\nfunction setGoogleMapsApiKey(config, androidManifest) {\n  var apiKey = getGoogleMapsApiKey(config);\n  var mainApplication = (0, _Manifest().getMainApplicationOrThrow)(androidManifest);\n\n  if (apiKey) {\n    (0, _Manifest().addMetaDataItemToMainApplication)(mainApplication, META_API_KEY, apiKey);\n    (0, _Manifest().addUsesLibraryItemToMainApplication)(mainApplication, {\n      name: LIB_HTTP,\n      required: false\n    });\n  } else {\n    (0, _Manifest().removeMetaDataItemFromMainApplication)(mainApplication, META_API_KEY);\n    (0, _Manifest().removeUsesLibraryItemFromMainApplication)(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}","map":{"version":3,"sources":["../../src/android/GoogleMapsApiKey.ts"],"names":["META_API_KEY","LIB_HTTP","withGoogleMapsApiKey","config","apiKey","getGoogleMapsApiKey","mainApplication","name","required"],"mappings":";;;;;;;;;AAEA,SAAA,eAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,8BAAA;;AAAA,EAAA,eAAA,GAAA,2BAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,SAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,cAAA;;AAAA,EAAA,SAAA,GAAA,qBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AASA,IAAMA,YAAY,GAAlB,gCAAA;AACA,IAAMC,QAAQ,GAAd,wBAAA;AAEO,IAAMC,oBAAoB,GAAG,CAAA,GAAA,eAAA,GAAA,2BAAA,EAAA,mBAAA,EAA7B,sBAA6B,CAA7B;;;AAKA,SAAA,mBAAA,CAAA,MAAA,EAAkE;AAAA,MAAA,qBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,sBAAA;;AACvE,SAAA,CAAA,qBAAA,GAAA,CAAA,eAAA,GAAOC,MAAM,CAAb,OAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOA,eAAAA,CAAP,MAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOA,sBAAAA,CAAP,UAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,sBAAAA,CAAP,MAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA;AACD;;AAEM,SAAA,mBAAA,CAAA,MAAA,EAAA,eAAA,EAGL;AACA,MAAMC,MAAM,GAAGC,mBAAmB,CAAlC,MAAkC,CAAlC;AACA,MAAMC,eAAe,GAAG,CAAA,GAAA,SAAA,GAAA,yBAAA,EAAxB,eAAwB,CAAxB;;AAEA,MAAA,MAAA,EAAY;AAEV,KAAA,GAAA,SAAA,GAAA,gCAAA,EAAA,eAAA,EAAA,YAAA,EAAA,MAAA;AACA,KAAA,GAAA,SAAA,GAAA,mCAAA,EAAA,eAAA,EAAqD;AACnDC,MAAAA,IAAI,EAD+C,QAAA;AAEnDC,MAAAA,QAAQ,EAAE;AAFyC,KAArD;AAHF,GAAA,MAOO;AAEL,KAAA,GAAA,SAAA,GAAA,qCAAA,EAAA,eAAA,EAAA,YAAA;AACA,KAAA,GAAA,SAAA,GAAA,wCAAA,EAAA,eAAA,EAAA,QAAA;AACD;;AAED,SAAA,eAAA;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport {\n  addMetaDataItemToMainApplication,\n  addUsesLibraryItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n  removeUsesLibraryItemFromMainApplication,\n} from './Manifest';\n\nconst META_API_KEY = 'com.google.android.geo.API_KEY';\nconst LIB_HTTP = 'org.apache.http.legacy';\n\nexport const withGoogleMapsApiKey = createAndroidManifestPlugin(\n  setGoogleMapsApiKey,\n  'withGoogleMapsApiKey'\n);\n\nexport function getGoogleMapsApiKey(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport function setGoogleMapsApiKey(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const apiKey = getGoogleMapsApiKey(config);\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false,\n    });\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}