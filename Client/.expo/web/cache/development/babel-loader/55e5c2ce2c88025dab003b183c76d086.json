{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInfoPlistPathFromPbxproj = getInfoPlistPathFromPbxproj;\n\nfunction _Target() {\n  var data = require(\"../Target\");\n\n  _Target = function _Target() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Xcodeproj() {\n  var data = require(\"./Xcodeproj\");\n\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction getInfoPlistPathFromPbxproj(projectRootOrProject) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      targetName = _ref.targetName,\n      _ref$buildConfigurati = _ref.buildConfiguration,\n      buildConfiguration = _ref$buildConfigurati === void 0 ? 'Release' : _ref$buildConfigurati;\n\n  var project = (0, _Xcodeproj().resolvePathOrProject)(projectRootOrProject);\n\n  if (!project) {\n    return null;\n  }\n\n  var xcBuildConfiguration = (0, _Target().getXCBuildConfigurationFromPbxproj)(project, {\n    targetName: targetName,\n    buildConfiguration: buildConfiguration\n  });\n\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n\n  return sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);\n}\n\nfunction sanitizeInfoPlistBuildProperty(infoPlist) {\n  var _infoPlist$replace$re;\n\n  return (_infoPlist$replace$re = infoPlist === null || infoPlist === void 0 ? void 0 : infoPlist.replace(/\"/g, '').replace('$(SRCROOT)', '')) !== null && _infoPlist$replace$re !== void 0 ? _infoPlist$replace$re : null;\n}","map":{"version":3,"sources":["../../../src/ios/utils/getInfoPlistPath.ts"],"names":["buildConfiguration","project","xcBuildConfiguration","targetName","sanitizeInfoPlistBuildProperty","infoPlist"],"mappings":";;;;;;;AAEA,SAAA,OAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,aAAA;;AAAA,EAAA,OAAA,GAAA,mBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,UAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,eAAA;;AAAA,EAAA,UAAA,GAAA,sBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AASO,SAAA,2BAAA,CAAA,oBAAA,EAMU;AAAA,iFANV,EAMU;AAAA,MAJf,UAIe,QAJf,UAIe;AAAA,mCAFbA,kBAEa;AAAA,MAFbA,kBAEa,sCAFQ,SAER;;AACf,MAAMC,OAAO,GAAG,CAAA,GAAA,UAAA,GAAA,oBAAA,EAAhB,oBAAgB,CAAhB;;AACA,MAAI,CAAJ,OAAA,EAAc;AACZ,WAAA,IAAA;AACD;;AAED,MAAMC,oBAAoB,GAAG,CAAA,GAAA,OAAA,GAAA,kCAAA,EAAA,OAAA,EAA4C;AACvEC,IAAAA,UADuE,EACvEA,UADuE;AAEvEH,IAAAA,kBAAAA,EAAAA;AAFuE,GAA5C,CAA7B;;AAIA,MAAI,CAAJ,oBAAA,EAA2B;AACzB,WAAA,IAAA;AAXa;;AAcf,SAAOI,8BAA8B,CAACF,oBAAoB,CAApBA,aAAAA,CAAtC,cAAqC,CAArC;AACD;;AAED,SAAA,8BAAA,CAAA,SAAA,EAA2E;AAAA,MAAA,qBAAA;;AACzE,SAAA,CAAA,qBAAA,GAAOG,SAAP,KAAA,IAAOA,IAAAA,SAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,SAAS,CAATA,OAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,CAAAA,YAAAA,EAAP,EAAOA,CAAP,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA;AACD","sourcesContent":["import { XcodeProject } from 'xcode';\n\nimport { getXCBuildConfigurationFromPbxproj } from '../Target';\nimport { resolvePathOrProject } from './Xcodeproj';\n\n/**\n * Find the Info.plist path linked to a specific build configuration.\n *\n * @param projectRoot\n * @param param1\n * @returns\n */\nexport function getInfoPlistPathFromPbxproj(\n  projectRootOrProject: string | XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string | 'Release' | 'Debug' } = {}\n): string | null {\n  const project = resolvePathOrProject(projectRootOrProject);\n  if (!project) {\n    return null;\n  }\n\n  const xcBuildConfiguration = getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  // The `INFOPLIST_FILE` is relative to the project folder, ex: app/Info.plist.\n  return sanitizeInfoPlistBuildProperty(xcBuildConfiguration.buildSettings.INFOPLIST_FILE);\n}\n\nfunction sanitizeInfoPlistBuildProperty(infoPlist?: string): string | null {\n  return infoPlist?.replace(/\"/g, '').replace('$(SRCROOT)', '') ?? null;\n}\n"]},"metadata":{},"sourceType":"script"}