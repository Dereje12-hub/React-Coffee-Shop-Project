{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDevices = exports.assembleOrientationMedia = void 0;\n\nvar Orientation_1 = require(\"./Orientation\");\n\nvar Devices = [{\n  names: ['iPhone SE'],\n  width: 640,\n  height: 1136,\n  scale: 2,\n  isTablet: false\n}, {\n  names: ['iPhone Xs Max'],\n  width: 1242,\n  height: 2688,\n  scale: 3,\n  isTablet: false\n}, {\n  names: ['iPhone Xr'],\n  width: 828,\n  height: 1792,\n  scale: 2,\n  isTablet: false\n}, {\n  names: ['iPhone X', 'iPhone Xs'],\n  width: 1125,\n  height: 2436,\n  scale: 3,\n  isTablet: false\n}, {\n  names: ['iPhone 8 Plus', 'iPhone 7 Plus', 'iPhone 6s Plus', 'iPhone 6 Plus'],\n  width: 1242,\n  height: 2208,\n  scale: 3,\n  isTablet: false\n}, {\n  names: ['iPhone 8', 'iPhone 7', 'iPhone 6s', 'iPhone 6'],\n  width: 750,\n  height: 1334,\n  scale: 2,\n  isTablet: false\n}, {\n  names: ['iPad Pro 12.9\"'],\n  width: 2048,\n  height: 2732,\n  scale: 2,\n  isTablet: true\n}, {\n  names: ['iPad Pro 11\"'],\n  width: 1668,\n  height: 2388,\n  scale: 2,\n  isTablet: true\n}, {\n  names: ['iPad Pro 10.5\"'],\n  width: 1668,\n  height: 2224,\n  scale: 2,\n  isTablet: true\n}, {\n  names: ['iPad Mini', 'iPad Air'],\n  width: 1536,\n  height: 2048,\n  scale: 2,\n  isTablet: true\n}];\n\nfunction assembleOrientationMedia(width, height, scale, orientation) {\n  var params = {\n    'device-width': Math.floor(width / scale) + \"px\",\n    'device-height': Math.floor(height / scale) + \"px\",\n    '-webkit-device-pixel-ratio': scale,\n    orientation: orientation\n  };\n  var query = ['screen'].concat(_toConsumableArray(Object.keys(params).map(function (key) {\n    return \"(\" + key + \": \" + params[key] + \")\";\n  })));\n  return query.join(' and ');\n}\n\nexports.assembleOrientationMedia = assembleOrientationMedia;\n\nfunction getDevices() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 'portrait' : _ref$orientation,\n      _ref$supportsTablet = _ref.supportsTablet,\n      supportsTablet = _ref$supportsTablet === void 0 ? true : _ref$supportsTablet;\n\n  if (!Orientation_1.isValid(orientation)) {\n    throw new Error(orientation + \" is not a valid orientation\");\n  }\n\n  var orientations = [];\n\n  if (Orientation_1.isLandscape(orientation)) {\n    orientations.push('landscape');\n  }\n\n  if (Orientation_1.isPortrait(orientation)) {\n    orientations.push('portrait');\n  }\n\n  var devices = [];\n\n  if (supportsTablet) {\n    devices = Devices;\n  } else {\n    devices = Devices.filter(function (_ref2) {\n      var isTablet = _ref2.isTablet;\n      return !isTablet;\n    });\n  }\n\n  return devices.map(function (device) {\n    return _objectSpread(_objectSpread({}, device), {}, {\n      orientations: orientations\n    });\n  });\n}\n\nexports.getDevices = getDevices;","map":{"version":3,"sources":["../src/Splash.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,iBAAA;;AAUA,IAAM,OAAO,GAAa,CACxB;AAAE,EAAA,KAAK,EAAE,CAAC,WAAD,CAAT;AAAwB,EAAA,KAAK,EAAE,GAA/B;AAAoC,EAAA,MAAM,EAAE,IAA5C;AAAkD,EAAA,KAAK,EAAE,CAAzD;AAA4D,EAAA,QAAQ,EAAE;AAAtE,CADwB,EAExB;AAAE,EAAA,KAAK,EAAE,CAAC,eAAD,CAAT;AAA4B,EAAA,KAAK,EAAE,IAAnC;AAAyC,EAAA,MAAM,EAAE,IAAjD;AAAuD,EAAA,KAAK,EAAE,CAA9D;AAAiE,EAAA,QAAQ,EAAE;AAA3E,CAFwB,EAGxB;AAAE,EAAA,KAAK,EAAE,CAAC,WAAD,CAAT;AAAwB,EAAA,KAAK,EAAE,GAA/B;AAAoC,EAAA,MAAM,EAAE,IAA5C;AAAkD,EAAA,KAAK,EAAE,CAAzD;AAA4D,EAAA,QAAQ,EAAE;AAAtE,CAHwB,EAIxB;AAAE,EAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,CAAT;AAAoC,EAAA,KAAK,EAAE,IAA3C;AAAiD,EAAA,MAAM,EAAE,IAAzD;AAA+D,EAAA,KAAK,EAAE,CAAtE;AAAyE,EAAA,QAAQ,EAAE;AAAnF,CAJwB,EAKxB;AACE,EAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,eAAlB,EAAmC,gBAAnC,EAAqD,eAArD,CADT;AAEE,EAAA,KAAK,EAAE,IAFT;AAGE,EAAA,MAAM,EAAE,IAHV;AAIE,EAAA,KAAK,EAAE,CAJT;AAKE,EAAA,QAAQ,EAAE;AALZ,CALwB,EAYxB;AACE,EAAA,KAAK,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,UAAtC,CADT;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,IAHV;AAIE,EAAA,KAAK,EAAE,CAJT;AAKE,EAAA,QAAQ,EAAE;AALZ,CAZwB,EAmBxB;AAAE,EAAA,KAAK,EAAE,CAAC,gBAAD,CAAT;AAA6B,EAAA,KAAK,EAAE,IAApC;AAA0C,EAAA,MAAM,EAAE,IAAlD;AAAwD,EAAA,KAAK,EAAE,CAA/D;AAAkE,EAAA,QAAQ,EAAE;AAA5E,CAnBwB,EAoBxB;AAAE,EAAA,KAAK,EAAE,CAAC,cAAD,CAAT;AAA2B,EAAA,KAAK,EAAE,IAAlC;AAAwC,EAAA,MAAM,EAAE,IAAhD;AAAsD,EAAA,KAAK,EAAE,CAA7D;AAAgE,EAAA,QAAQ,EAAE;AAA1E,CApBwB,EAqBxB;AAAE,EAAA,KAAK,EAAE,CAAC,gBAAD,CAAT;AAA6B,EAAA,KAAK,EAAE,IAApC;AAA0C,EAAA,MAAM,EAAE,IAAlD;AAAwD,EAAA,KAAK,EAAE,CAA/D;AAAkE,EAAA,QAAQ,EAAE;AAA5E,CArBwB,EAsBxB;AAAE,EAAA,KAAK,EAAE,CAAC,WAAD,EAAc,UAAd,CAAT;AAAoC,EAAA,KAAK,EAAE,IAA3C;AAAiD,EAAA,MAAM,EAAE,IAAzD;AAA+D,EAAA,KAAK,EAAE,CAAtE;AAAyE,EAAA,QAAQ,EAAE;AAAnF,CAtBwB,CAA1B;;AAyBA,SAAgB,wBAAhB,CACE,KADF,EAEE,MAFF,EAGE,KAHF,EAIE,WAJF,EAIqB;AAEnB,MAAM,MAAM,GAAG;AACb,oBAAmB,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,KAAnB,CAAnB,OADa;AAEb,qBAAoB,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,KAApB,CAApB,OAFa;AAGb,kCAA8B,KAHjB;AAIb,IAAA,WAAW,EAAX;AAJa,GAAf;AAQA,MAAM,KAAK,IAAI,QAAJ,4BAAiB,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,GAApB,CAAwB,UAAA,GAAG;AAAA,iBAAQ,GAAR,UAAgB,MAAM,CAAC,GAAD,CAAtB;AAAA,GAA3B,CAAjB,EAAX;AAEA,SAAO,KAAK,CAAC,IAAN,CAAW,OAAX,CAAP;AACD;;AAjBD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAmBA,SAAgB,UAAhB,GAOM;AAAA,iFAAF,EAAE;AAAA,8BALJ,WAKI;AAAA,MALJ,WAKI,iCALU,UAKV;AAAA,iCAJJ,cAII;AAAA,MAJJ,cAII,oCAJa,IAIb;;AACJ,MAAI,CAAC,aAAA,CAAA,OAAA,CAAQ,WAAR,CAAL,EAA2B;AACzB,UAAM,IAAI,KAAJ,CAAa,WAAb,iCAAN;AACD;;AAED,MAAM,YAAY,GAAkB,EAApC;;AACA,MAAI,aAAA,CAAA,WAAA,CAAY,WAAZ,CAAJ,EAA8B;AAC5B,IAAA,YAAY,CAAC,IAAb,CAAkB,WAAlB;AACD;;AACD,MAAI,aAAA,CAAA,UAAA,CAAW,WAAX,CAAJ,EAA6B;AAC3B,IAAA,YAAY,CAAC,IAAb,CAAkB,UAAlB;AACD;;AAED,MAAI,OAAO,GAAG,EAAd;;AACA,MAAI,cAAJ,EAAoB;AAClB,IAAA,OAAO,GAAG,OAAV;AACD,GAFD,MAEO;AACL,IAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe;AAAA,UAAG,QAAH,SAAG,QAAH;AAAA,aAAkB,CAAC,QAAnB;AAAA,KAAf,CAAV;AACD;;AAED,SAAO,OAAO,CAAC,GAAR,CAAY,UAAA,MAAM;AAAA,2CAAU,MAAV;AAAkB,MAAA,YAAY,EAAZ;AAAlB;AAAA,GAAlB,CAAP;AACD;;AA5BD,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import { isLandscape, isPortrait, isValid, Orientation } from './Orientation';\n\ninterface Device {\n  names: string[];\n  width: number;\n  height: number;\n  scale: number;\n  isTablet: boolean;\n}\n\nconst Devices: Device[] = [\n  { names: ['iPhone SE'], width: 640, height: 1136, scale: 2, isTablet: false },\n  { names: ['iPhone Xs Max'], width: 1242, height: 2688, scale: 3, isTablet: false },\n  { names: ['iPhone Xr'], width: 828, height: 1792, scale: 2, isTablet: false },\n  { names: ['iPhone X', 'iPhone Xs'], width: 1125, height: 2436, scale: 3, isTablet: false },\n  {\n    names: ['iPhone 8 Plus', 'iPhone 7 Plus', 'iPhone 6s Plus', 'iPhone 6 Plus'],\n    width: 1242,\n    height: 2208,\n    scale: 3,\n    isTablet: false,\n  },\n  {\n    names: ['iPhone 8', 'iPhone 7', 'iPhone 6s', 'iPhone 6'],\n    width: 750,\n    height: 1334,\n    scale: 2,\n    isTablet: false,\n  },\n  { names: ['iPad Pro 12.9\"'], width: 2048, height: 2732, scale: 2, isTablet: true },\n  { names: ['iPad Pro 11\"'], width: 1668, height: 2388, scale: 2, isTablet: true },\n  { names: ['iPad Pro 10.5\"'], width: 1668, height: 2224, scale: 2, isTablet: true },\n  { names: ['iPad Mini', 'iPad Air'], width: 1536, height: 2048, scale: 2, isTablet: true },\n];\n\nexport function assembleOrientationMedia(\n  width: number,\n  height: number,\n  scale: number,\n  orientation: string\n): string {\n  const params = {\n    'device-width': `${Math.floor(width / scale)}px`,\n    'device-height': `${Math.floor(height / scale)}px`,\n    '-webkit-device-pixel-ratio': scale,\n    orientation,\n  };\n\n  // @ts-ignore\n  const query = ['screen', ...Object.keys(params).map(key => `(${key}: ${params[key]})`)];\n\n  return query.join(' and ');\n}\n\nexport function getDevices({\n  // disable landscape PWAs by default\n  orientation = 'portrait',\n  supportsTablet = true,\n}: {\n  orientation?: Orientation;\n  supportsTablet?: boolean;\n} = {}): (Device & { orientations: Orientation[] })[] {\n  if (!isValid(orientation)) {\n    throw new Error(`${orientation} is not a valid orientation`);\n  }\n\n  const orientations: Orientation[] = [];\n  if (isLandscape(orientation)) {\n    orientations.push('landscape');\n  }\n  if (isPortrait(orientation)) {\n    orientations.push('portrait');\n  }\n\n  let devices = [];\n  if (supportsTablet) {\n    devices = Devices;\n  } else {\n    devices = Devices.filter(({ isTablet }) => !isTablet);\n  }\n\n  return devices.map(device => ({ ...device, orientations }));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}