{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar code_frame_1 = require(\"@babel/code-frame\");\n\nvar fs_1 = __importDefault(require(\"fs\"));\n\nvar json5_1 = __importDefault(require(\"json5\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar util_1 = require(\"util\");\n\nvar write_file_atomic_1 = __importDefault(require(\"write-file-atomic\"));\n\nvar JsonFileError_1 = __importStar(require(\"./JsonFileError\"));\n\nvar writeFileAtomicAsync = util_1.promisify(write_file_atomic_1.default);\nvar DEFAULT_OPTIONS = {\n  badJsonDefault: undefined,\n  jsonParseErrorDefault: undefined,\n  cantReadFileDefault: undefined,\n  ensureDir: false,\n  default: undefined,\n  json5: false,\n  space: 2,\n  addNewLineAtEOF: true\n};\n\nvar JsonFile = function () {\n  function JsonFile(file) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, JsonFile);\n\n    this.file = file;\n    this.options = options;\n  }\n\n  _createClass(JsonFile, [{\n    key: \"read\",\n    value: function read(options) {\n      return _read(this.file, this._getOptions(options));\n    }\n  }, {\n    key: \"readAsync\",\n    value: function readAsync(options) {\n      return _regeneratorRuntime.async(function readAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", _readAsync(this.file, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"writeAsync\",\n    value: function writeAsync(object, options) {\n      return _regeneratorRuntime.async(function writeAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", _writeAsync(this.file, object, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"parseJsonString\",\n    value: function parseJsonString(json, options) {\n      return _parseJsonString(json, options);\n    }\n  }, {\n    key: \"getAsync\",\n    value: function getAsync(key, defaultValue, options) {\n      return _regeneratorRuntime.async(function getAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", _getAsync(this.file, key, defaultValue, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setAsync\",\n    value: function setAsync(key, value, options) {\n      return _regeneratorRuntime.async(function setAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", _setAsync(this.file, key, value, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"mergeAsync\",\n    value: function mergeAsync(sources, options) {\n      return _regeneratorRuntime.async(function mergeAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", _mergeAsync(this.file, sources, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteKeyAsync\",\n    value: function deleteKeyAsync(key, options) {\n      return _regeneratorRuntime.async(function deleteKeyAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", _deleteKeyAsync(this.file, key, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"deleteKeysAsync\",\n    value: function deleteKeysAsync(keys, options) {\n      return _regeneratorRuntime.async(function deleteKeysAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", _deleteKeysAsync(this.file, keys, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"rewriteAsync\",\n    value: function rewriteAsync(options) {\n      return _regeneratorRuntime.async(function rewriteAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", _rewriteAsync(this.file, this._getOptions(options)));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_getOptions\",\n    value: function _getOptions(options) {\n      return _objectSpread(_objectSpread({}, this.options), options);\n    }\n  }]);\n\n  return JsonFile;\n}();\n\nexports.default = JsonFile;\nJsonFile.read = _read;\nJsonFile.readAsync = _readAsync;\nJsonFile.parseJsonString = _parseJsonString;\nJsonFile.writeAsync = _writeAsync;\nJsonFile.getAsync = _getAsync;\nJsonFile.setAsync = _setAsync;\nJsonFile.mergeAsync = _mergeAsync;\nJsonFile.deleteKeyAsync = _deleteKeyAsync;\nJsonFile.deleteKeysAsync = _deleteKeysAsync;\nJsonFile.rewriteAsync = _rewriteAsync;\n\nfunction _read(file, options) {\n  var json;\n\n  try {\n    json = fs_1.default.readFileSync(file, 'utf8');\n  } catch (error) {\n    assertEmptyJsonString(json, file);\n    var defaultValue = cantReadFileDefault(options);\n\n    if (defaultValue === undefined) {\n      throw new JsonFileError_1.default(\"Can't read JSON file: \" + file, error, error.code, file);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  return _parseJsonString(json, options, file);\n}\n\nfunction _readAsync(file, options) {\n  var json, defaultValue;\n  return _regeneratorRuntime.async(function _readAsync$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(fs_1.default.promises.readFile(file, 'utf8'));\n\n        case 3:\n          json = _context9.sent;\n          _context9.next = 15;\n          break;\n\n        case 6:\n          _context9.prev = 6;\n          _context9.t0 = _context9[\"catch\"](0);\n          assertEmptyJsonString(json, file);\n          defaultValue = cantReadFileDefault(options);\n\n          if (!(defaultValue === undefined)) {\n            _context9.next = 14;\n            break;\n          }\n\n          throw new JsonFileError_1.default(\"Can't read JSON file: \" + file, _context9.t0, _context9.t0.code);\n\n        case 14:\n          return _context9.abrupt(\"return\", defaultValue);\n\n        case 15:\n          return _context9.abrupt(\"return\", _parseJsonString(json, options));\n\n        case 16:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nfunction _parseJsonString(json, options, fileName) {\n  assertEmptyJsonString(json, fileName);\n\n  try {\n    if (_getOption(options, 'json5')) {\n      return json5_1.default.parse(json);\n    } else {\n      return JSON.parse(json);\n    }\n  } catch (e) {\n    var defaultValue = jsonParseErrorDefault(options);\n\n    if (defaultValue === undefined) {\n      var location = locationFromSyntaxError(e, json);\n\n      if (location) {\n        var codeFrame = code_frame_1.codeFrameColumns(json, {\n          start: location\n        });\n        e.codeFrame = codeFrame;\n        e.message += \"\\n\" + codeFrame;\n      }\n\n      throw new JsonFileError_1.default(\"Error parsing JSON: \" + json, e, 'EJSONPARSE', fileName);\n    } else {\n      return defaultValue;\n    }\n  }\n}\n\nfunction _getAsync(file, key, defaultValue, options) {\n  var object;\n  return _regeneratorRuntime.async(function _getAsync$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(_readAsync(file, options));\n\n        case 2:\n          object = _context10.sent;\n\n          if (!(key in object)) {\n            _context10.next = 5;\n            break;\n          }\n\n          return _context10.abrupt(\"return\", object[key]);\n\n        case 5:\n          if (!(defaultValue === undefined)) {\n            _context10.next = 7;\n            break;\n          }\n\n          throw new JsonFileError_1.default(\"No value at key path \\\"\" + key + \"\\\" in JSON object from: \" + file);\n\n        case 7:\n          return _context10.abrupt(\"return\", defaultValue);\n\n        case 8:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _writeAsync(file, object, options) {\n  var space, json5, addNewLineAtEOF, json, data;\n  return _regeneratorRuntime.async(function _writeAsync$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          if (!(options === null || options === void 0 ? void 0 : options.ensureDir)) {\n            _context11.next = 3;\n            break;\n          }\n\n          _context11.next = 3;\n          return _regeneratorRuntime.awrap(fs_1.default.promises.mkdir(path_1.default.dirname(file), {\n            recursive: true\n          }));\n\n        case 3:\n          space = _getOption(options, 'space');\n          json5 = _getOption(options, 'json5');\n          addNewLineAtEOF = _getOption(options, 'addNewLineAtEOF');\n          _context11.prev = 6;\n\n          if (json5) {\n            json = json5_1.default.stringify(object, null, space);\n          } else {\n            json = JSON.stringify(object, null, space);\n          }\n\n          _context11.next = 13;\n          break;\n\n        case 10:\n          _context11.prev = 10;\n          _context11.t0 = _context11[\"catch\"](6);\n          throw new JsonFileError_1.default(\"Couldn't JSON.stringify object for file: \" + file, _context11.t0);\n\n        case 13:\n          data = addNewLineAtEOF ? json + \"\\n\" : json;\n          _context11.next = 16;\n          return _regeneratorRuntime.awrap(writeFileAtomicAsync(file, data, {}));\n\n        case 16:\n          return _context11.abrupt(\"return\", object);\n\n        case 17:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[6, 10]], Promise);\n}\n\nfunction _setAsync(file, key, value, options) {\n  var object;\n  return _regeneratorRuntime.async(function _setAsync$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(_readAsync(file, options));\n\n        case 2:\n          object = _context12.sent;\n          return _context12.abrupt(\"return\", _writeAsync(file, _objectSpread(_objectSpread({}, object), {}, _defineProperty({}, key, value)), options));\n\n        case 4:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _mergeAsync(file, sources, options) {\n  var object;\n  return _regeneratorRuntime.async(function _mergeAsync$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(_readAsync(file, options));\n\n        case 2:\n          object = _context13.sent;\n\n          if (Array.isArray(sources)) {\n            Object.assign.apply(Object, [object].concat(_toConsumableArray(sources)));\n          } else {\n            _extends(object, sources);\n          }\n\n          return _context13.abrupt(\"return\", _writeAsync(file, object, options));\n\n        case 5:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _deleteKeyAsync(file, key, options) {\n  return _regeneratorRuntime.async(function _deleteKeyAsync$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", _deleteKeysAsync(file, [key], options));\n\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _deleteKeysAsync(file, keys, options) {\n  var object, didDelete, i, key;\n  return _regeneratorRuntime.async(function _deleteKeysAsync$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return _regeneratorRuntime.awrap(_readAsync(file, options));\n\n        case 2:\n          object = _context15.sent;\n          didDelete = false;\n\n          for (i = 0; i < keys.length; i++) {\n            key = keys[i];\n\n            if (object.hasOwnProperty(key)) {\n              delete object[key];\n              didDelete = true;\n            }\n          }\n\n          if (!didDelete) {\n            _context15.next = 7;\n            break;\n          }\n\n          return _context15.abrupt(\"return\", _writeAsync(file, object, options));\n\n        case 7:\n          return _context15.abrupt(\"return\", object);\n\n        case 8:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _rewriteAsync(file, options) {\n  var object;\n  return _regeneratorRuntime.async(function _rewriteAsync$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return _regeneratorRuntime.awrap(_readAsync(file, options));\n\n        case 2:\n          object = _context16.sent;\n          return _context16.abrupt(\"return\", _writeAsync(file, object, options));\n\n        case 4:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction jsonParseErrorDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.jsonParseErrorDefault === undefined) {\n    return options.default;\n  } else {\n    return options.jsonParseErrorDefault;\n  }\n}\n\nfunction cantReadFileDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.cantReadFileDefault === undefined) {\n    return options.default;\n  } else {\n    return options.cantReadFileDefault;\n  }\n}\n\nfunction _getOption(options, field) {\n  if (options) {\n    if (options[field] !== undefined) {\n      return options[field];\n    }\n  }\n\n  return DEFAULT_OPTIONS[field];\n}\n\nfunction locationFromSyntaxError(error, sourceString) {\n  if ('lineNumber' in error && 'columnNumber' in error) {\n    return {\n      line: error.lineNumber,\n      column: error.columnNumber\n    };\n  }\n\n  var match = /at position (\\d+)/.exec(error.message);\n\n  if (match) {\n    var index = parseInt(match[1], 10);\n    var lines = sourceString.slice(0, index + 1).split('\\n');\n    return {\n      line: lines.length,\n      column: lines[lines.length - 1].length\n    };\n  }\n\n  return null;\n}\n\nfunction assertEmptyJsonString(json, file) {\n  if ((json === null || json === void 0 ? void 0 : json.trim()) === '') {\n    throw new JsonFileError_1.EmptyJsonFileError(file);\n  }\n}","map":{"version":3,"sources":["../src/JsonFile.ts"],"names":[],"mappings":"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","sourcesContent":["import { codeFrameColumns } from '@babel/code-frame';\nimport fs from 'fs';\nimport JSON5 from 'json5';\nimport path from 'path';\nimport { promisify } from 'util';\nimport writeFileAtomic from 'write-file-atomic';\n\nimport JsonFileError, { EmptyJsonFileError } from './JsonFileError';\n\nconst writeFileAtomicAsync: (\n  filename: string,\n  data: string | Buffer,\n  options: writeFileAtomic.Options\n) => void = promisify(writeFileAtomic);\n\nexport type JSONValue = boolean | number | string | null | JSONArray | JSONObject;\nexport interface JSONArray extends Array<JSONValue> {}\nexport interface JSONObject {\n  [key: string]: JSONValue | undefined;\n}\n\ntype Defined<T> = T extends undefined ? never : T;\n\ntype Options<TJSONObject extends JSONObject> = {\n  badJsonDefault?: TJSONObject;\n  jsonParseErrorDefault?: TJSONObject;\n  cantReadFileDefault?: TJSONObject;\n  ensureDir?: boolean;\n  default?: TJSONObject;\n  json5?: boolean;\n  space?: number;\n  addNewLineAtEOF?: boolean;\n};\n\nconst DEFAULT_OPTIONS = {\n  badJsonDefault: undefined,\n  jsonParseErrorDefault: undefined,\n  cantReadFileDefault: undefined,\n  ensureDir: false,\n  default: undefined,\n  json5: false,\n  space: 2,\n  addNewLineAtEOF: true,\n};\n\n/**\n * The JsonFile class represents the contents of json file.\n *\n * It's polymorphic on \"JSONObject\", which is a simple type representing\n * and object with string keys and either objects or primitive types as values.\n * @type {[type]}\n */\nexport default class JsonFile<TJSONObject extends JSONObject> {\n  file: string;\n  options: Options<TJSONObject>;\n\n  static read = read;\n  static readAsync = readAsync;\n  static parseJsonString = parseJsonString;\n  static writeAsync = writeAsync;\n  static getAsync = getAsync;\n  static setAsync = setAsync;\n  static mergeAsync = mergeAsync;\n  static deleteKeyAsync = deleteKeyAsync;\n  static deleteKeysAsync = deleteKeysAsync;\n  static rewriteAsync = rewriteAsync;\n\n  constructor(file: string, options: Options<TJSONObject> = {}) {\n    this.file = file;\n    this.options = options;\n  }\n\n  read(options?: Options<TJSONObject>): TJSONObject {\n    return read(this.file, this._getOptions(options));\n  }\n\n  async readAsync(options?: Options<TJSONObject>): Promise<TJSONObject> {\n    return readAsync(this.file, this._getOptions(options));\n  }\n\n  async writeAsync(object: TJSONObject, options?: Options<TJSONObject>) {\n    return writeAsync(this.file, object, this._getOptions(options));\n  }\n\n  parseJsonString(json: string, options?: Options<TJSONObject>): TJSONObject {\n    return parseJsonString(json, options);\n  }\n\n  async getAsync<K extends keyof TJSONObject, TDefault extends TJSONObject[K] | null>(\n    key: K,\n    defaultValue: TDefault,\n    options?: Options<TJSONObject>\n  ): Promise<Defined<TJSONObject[K]> | TDefault> {\n    return getAsync(this.file, key, defaultValue, this._getOptions(options));\n  }\n\n  async setAsync(key: string, value: unknown, options?: Options<TJSONObject>) {\n    return setAsync(this.file, key, value, this._getOptions(options));\n  }\n\n  async mergeAsync(\n    sources: Partial<TJSONObject> | Partial<TJSONObject>[],\n    options?: Options<TJSONObject>\n  ): Promise<TJSONObject> {\n    return mergeAsync<TJSONObject>(this.file, sources, this._getOptions(options));\n  }\n\n  async deleteKeyAsync(key: string, options?: Options<TJSONObject>) {\n    return deleteKeyAsync(this.file, key, this._getOptions(options));\n  }\n\n  async deleteKeysAsync(keys: string[], options?: Options<TJSONObject>) {\n    return deleteKeysAsync(this.file, keys, this._getOptions(options));\n  }\n\n  async rewriteAsync(options?: Options<TJSONObject>) {\n    return rewriteAsync(this.file, this._getOptions(options));\n  }\n\n  _getOptions(options?: Options<TJSONObject>): Options<TJSONObject> {\n    return {\n      ...this.options,\n      ...options,\n    };\n  }\n}\n\nfunction read<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): TJSONObject {\n  let json;\n  try {\n    json = fs.readFileSync(file, 'utf8');\n  } catch (error) {\n    assertEmptyJsonString(json, file);\n    const defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError(`Can't read JSON file: ${file}`, error, error.code, file);\n    } else {\n      return defaultValue;\n    }\n  }\n  return parseJsonString(json, options, file);\n}\n\nasync function readAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  let json;\n  try {\n    json = await fs.promises.readFile(file, 'utf8');\n  } catch (error) {\n    assertEmptyJsonString(json, file);\n    const defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError(`Can't read JSON file: ${file}`, error, error.code);\n    } else {\n      return defaultValue;\n    }\n  }\n  return parseJsonString(json, options);\n}\n\nfunction parseJsonString<TJSONObject extends JSONObject>(\n  json: string,\n  options?: Options<TJSONObject>,\n  fileName?: string\n): TJSONObject {\n  assertEmptyJsonString(json, fileName);\n  try {\n    if (_getOption(options, 'json5')) {\n      return JSON5.parse(json);\n    } else {\n      return JSON.parse(json);\n    }\n  } catch (e) {\n    const defaultValue = jsonParseErrorDefault(options);\n    if (defaultValue === undefined) {\n      const location = locationFromSyntaxError(e, json);\n      if (location) {\n        const codeFrame = codeFrameColumns(json, { start: location });\n        e.codeFrame = codeFrame;\n        e.message += `\\n${codeFrame}`;\n      }\n      throw new JsonFileError(`Error parsing JSON: ${json}`, e, 'EJSONPARSE', fileName);\n    } else {\n      return defaultValue;\n    }\n  }\n}\n\nasync function getAsync<TJSONObject extends JSONObject, K extends keyof TJSONObject, DefaultValue>(\n  file: string,\n  key: K,\n  defaultValue: DefaultValue,\n  options?: Options<TJSONObject>\n): Promise<any> {\n  const object = await readAsync(file, options);\n  if (key in object) {\n    return object[key];\n  }\n  if (defaultValue === undefined) {\n    throw new JsonFileError(`No value at key path \"${key}\" in JSON object from: ${file}`);\n  }\n  return defaultValue;\n}\n\nasync function writeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  object: TJSONObject,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  if (options?.ensureDir) {\n    await fs.promises.mkdir(path.dirname(file), { recursive: true });\n  }\n  const space = _getOption(options, 'space');\n  const json5 = _getOption(options, 'json5');\n  const addNewLineAtEOF = _getOption(options, 'addNewLineAtEOF');\n  let json;\n  try {\n    if (json5) {\n      json = JSON5.stringify(object, null, space);\n    } else {\n      json = JSON.stringify(object, null, space);\n    }\n  } catch (e) {\n    throw new JsonFileError(`Couldn't JSON.stringify object for file: ${file}`, e);\n  }\n  const data = addNewLineAtEOF ? `${json}\\n` : json;\n  await writeFileAtomicAsync(file, data, {});\n  return object;\n}\n\nasync function setAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  value: unknown,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  // TODO: Consider implementing some kind of locking mechanism, but\n  // it's not critical for our use case, so we'll leave it out for now\n  const object = await readAsync(file, options);\n  return writeAsync(file, { ...object, [key]: value }, options);\n}\n\nasync function mergeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  sources: Partial<TJSONObject> | Partial<TJSONObject>[],\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  if (Array.isArray(sources)) {\n    Object.assign(object, ...sources);\n  } else {\n    Object.assign(object, sources);\n  }\n  return writeAsync(file, object, options);\n}\n\nasync function deleteKeyAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  return deleteKeysAsync(file, [key], options);\n}\n\nasync function deleteKeysAsync<TJSONObject extends JSONObject>(\n  file: string,\n  keys: string[],\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  let didDelete = false;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (object.hasOwnProperty(key)) {\n      delete object[key];\n      didDelete = true;\n    }\n  }\n\n  if (didDelete) {\n    return writeAsync(file, object, options);\n  }\n  return object;\n}\n\nasync function rewriteAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  return writeAsync(file, object, options);\n}\n\nfunction jsonParseErrorDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.jsonParseErrorDefault === undefined) {\n    return options.default;\n  } else {\n    return options.jsonParseErrorDefault;\n  }\n}\n\nfunction cantReadFileDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.cantReadFileDefault === undefined) {\n    return options.default;\n  } else {\n    return options.cantReadFileDefault;\n  }\n}\n\nfunction _getOption<TJSONObject extends JSONObject, K extends keyof Options<TJSONObject>>(\n  options: Options<TJSONObject> | undefined,\n  field: K\n): Options<TJSONObject>[K] {\n  if (options) {\n    if (options[field] !== undefined) {\n      return options[field];\n    }\n  }\n  return DEFAULT_OPTIONS[field];\n}\n\nfunction locationFromSyntaxError(error: any, sourceString: string) {\n  // JSON5 SyntaxError has lineNumber and columnNumber.\n  if ('lineNumber' in error && 'columnNumber' in error) {\n    return { line: error.lineNumber, column: error.columnNumber };\n  }\n  // JSON SyntaxError only includes the index in the message.\n  const match = /at position (\\d+)/.exec(error.message);\n  if (match) {\n    const index = parseInt(match[1], 10);\n    const lines = sourceString.slice(0, index + 1).split('\\n');\n    return { line: lines.length, column: lines[lines.length - 1].length };\n  }\n\n  return null;\n}\n\nfunction assertEmptyJsonString(json?: string, file?: string) {\n  if (json?.trim() === '') {\n    throw new EmptyJsonFileError(file);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}