{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nvar WindowsPlatform = _createClass(function WindowsPlatform() {\n  _classCallCheck(this, WindowsPlatform);\n});\n\nexport { WindowsPlatform as default };","map":{"version":3,"sources":["C:/Users/Dereje/node_modules/@expo/devcert/dist/platforms/win32.d.ts"],"names":["WindowsPlatform"],"mappings":";;;IAEqBA,e;;;;SAAAA,e","sourcesContent":["import { Options } from '../index';\nimport { Platform } from '.';\nexport default class WindowsPlatform implements Platform {\n    private HOST_FILE_PATH;\n    /**\n     * Windows is at least simple. Like macOS, most applications will delegate to\n     * the system trust store, which is updated with the confusingly named\n     * `certutil` exe (not the same as the NSS/Mozilla certutil). Firefox does it's\n     * own thing as usual, and getting a copy of NSS certutil onto the Windows\n     * machine to try updating the Firefox store is basically a nightmare, so we\n     * don't even try it - we just bail out to the GUI.\n     */\n    addToTrustStores(certificatePath: string, options?: Options): Promise<void>;\n    removeFromTrustStores(certificatePath: string): void;\n    addDomainToHostFileIfMissing(domain: string): Promise<void>;\n    deleteProtectedFiles(filepath: string): void;\n    readProtectedFile(filepath: string): Promise<string>;\n    writeProtectedFile(filepath: string, contents: string): Promise<void>;\n    private encrypt;\n    private decrypt;\n}\n"]},"metadata":{},"sourceType":"module"}