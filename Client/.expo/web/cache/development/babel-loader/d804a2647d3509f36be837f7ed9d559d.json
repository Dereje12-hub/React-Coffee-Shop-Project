{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPWAManifestFromWebConfig = exports.getChromeIconConfig = exports.getFaviconIconConfig = exports.getSafariIconConfig = exports.getSafariStartupImageConfig = exports.getConfigForPWA = void 0;\n\nvar config_1 = require(\"@expo/config\");\n\nvar DEFAULT_LANGUAGE_ISO_CODE = \"en\";\nvar DEFAULT_DISPLAY = 'standalone';\nvar DEFAULT_STATUS_BAR = 'black-translucent';\nvar DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\nfunction ensurePWAorientation(orientation) {\n  if (orientation && typeof orientation === 'string') {\n    var webOrientation = orientation.toLowerCase();\n\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n\n  return undefined;\n}\n\nfunction sanitizePublicPath(publicPath) {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n\n  return publicPath + '/';\n}\n\nfunction getConfigForPWA(projectRoot) {\n  var _config_1$getConfig = config_1.getConfig(projectRoot, {\n    skipSDKVersionRequirement: true\n  }),\n      exp = _config_1$getConfig.exp;\n\n  return ensurePWAConfig(exp);\n}\n\nexports.getConfigForPWA = getConfigForPWA;\n\nfunction applyWebDefaults(appJSON) {\n  var appManifest = appJSON.expo || appJSON || {};\n  var _appManifest$web = appManifest.web,\n      webManifest = _appManifest$web === void 0 ? {} : _appManifest$web,\n      _appManifest$splash = appManifest.splash,\n      splash = _appManifest$splash === void 0 ? {} : _appManifest$splash,\n      _appManifest$ios = appManifest.ios,\n      ios = _appManifest$ios === void 0 ? {} : _appManifest$ios,\n      _appManifest$android = appManifest.android,\n      android = _appManifest$android === void 0 ? {} : _appManifest$android;\n  var _webManifest$build = webManifest.build,\n      webBuild = _webManifest$build === void 0 ? {} : _webManifest$build,\n      _webManifest$webDange = webManifest.webDangerous,\n      webDangerous = _webManifest$webDange === void 0 ? {} : _webManifest$webDange,\n      _webManifest$meta = webManifest.meta,\n      meta = _webManifest$meta === void 0 ? {} : _webManifest$meta;\n  var _meta$apple = meta.apple,\n      apple = _meta$apple === void 0 ? {} : _meta$apple;\n\n  var _config_1$getNameFrom = config_1.getNameFromConfig(appJSON),\n      appName = _config_1$getNameFrom.appName,\n      webName = _config_1$getNameFrom.webName;\n\n  var languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  var buildOutputPath = config_1.getWebOutputPath(appJSON);\n  var publicPath = sanitizePublicPath(webManifest.publicPath);\n  var primaryColor = appManifest.primaryColor;\n  var description = appManifest.description;\n  var webThemeColor = webManifest.themeColor || primaryColor;\n  var dir = webManifest.dir;\n  var shortName = webManifest.shortName || webName;\n  var display = webManifest.display || DEFAULT_DISPLAY;\n  var startUrl = webManifest.startUrl;\n  var scope = webManifest.scope,\n      crossorigin = webManifest.crossorigin;\n  var barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n  var orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n  var backgroundColor = webManifest.backgroundColor || splash.backgroundColor;\n  var preferRelatedApplications = webManifest.preferRelatedApplications === undefined ? DEFAULT_PREFER_RELATED_APPLICATIONS : webManifest.preferRelatedApplications;\n  var relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n  return _objectSpread(_objectSpread({}, appManifest), {}, {\n    name: appName,\n    description: description,\n    primaryColor: primaryColor,\n    ios: _objectSpread({}, ios),\n    android: _objectSpread({}, android),\n    web: _objectSpread(_objectSpread({}, webManifest), {}, {\n      meta: _objectSpread(_objectSpread({}, meta), {}, {\n        apple: _objectSpread(_objectSpread({}, apple), {}, {\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle: barStyle\n        })\n      }),\n      build: _objectSpread(_objectSpread({}, webBuild), {}, {\n        output: buildOutputPath,\n        publicPath: publicPath\n      }),\n      dangerous: webDangerous,\n      scope: scope,\n      crossorigin: crossorigin,\n      description: description,\n      preferRelatedApplications: preferRelatedApplications,\n      relatedApplications: relatedApplications,\n      startUrl: startUrl,\n      shortName: shortName,\n      display: display,\n      orientation: orientation,\n      dir: dir,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName\n    })\n  });\n}\n\nfunction inferWebRelatedApplicationsFromConfig(_ref) {\n  var _ref$web = _ref.web,\n      web = _ref$web === void 0 ? {} : _ref$web,\n      _ref$ios = _ref.ios,\n      ios = _ref$ios === void 0 ? {} : _ref$ios,\n      _ref$android = _ref.android,\n      android = _ref$android === void 0 ? {} : _ref$android;\n  var relatedApplications = web.relatedApplications || [];\n  var bundleIdentifier = ios.bundleIdentifier,\n      appStoreUrl = ios.appStoreUrl;\n\n  if (bundleIdentifier) {\n    var PLATFORM_ITUNES = 'itunes';\n    var iosApp = relatedApplications.some(function (_ref2) {\n      var platform = _ref2.platform;\n      return platform === PLATFORM_ITUNES;\n    });\n\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier\n      });\n    }\n  }\n\n  var androidPackage = android.package,\n      playStoreUrl = android.playStoreUrl;\n\n  if (androidPackage) {\n    var PLATFORM_PLAY = 'play';\n    var alreadyHasAndroidApp = relatedApplications.some(function (_ref3) {\n      var platform = _ref3.platform;\n      return platform === PLATFORM_PLAY;\n    });\n\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || \"http://play.google.com/store/apps/details?id=\" + androidPackage,\n        id: androidPackage\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nfunction getSafariStartupImageConfig(config) {\n  var _a, _b, _c, _d;\n\n  var splashScreenObject = function splashScreenObject(input) {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor\n    };\n  };\n\n  if (isObject((_a = config.web) === null || _a === void 0 ? void 0 : _a.splash)) {\n    return splashScreenObject((_b = config.web) === null || _b === void 0 ? void 0 : _b.splash);\n  }\n\n  if (isObject((_c = config.ios) === null || _c === void 0 ? void 0 : _c.splash)) {\n    return splashScreenObject((_d = config.ios) === null || _d === void 0 ? void 0 : _d.splash);\n  }\n\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n\n  return null;\n}\n\nexports.getSafariStartupImageConfig = getSafariStartupImageConfig;\n\nfunction getSafariIconConfig(config) {\n  var _a;\n\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n\n  if (typeof ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.icon) === 'string') {\n    return validate(config.ios.icon);\n  }\n\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n\n  return null;\n}\n\nexports.getSafariIconConfig = getSafariIconConfig;\n\nfunction getFaviconIconConfig(config) {\n  var _a, _b;\n\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n\n  if (typeof ((_a = config.web) === null || _a === void 0 ? void 0 : _a.favicon) === 'string') {\n    if (!((_b = config.web) === null || _b === void 0 ? void 0 : _b.favicon)) {\n      return null;\n    }\n\n    return validate(config.web.favicon);\n  }\n\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n\n  return null;\n}\n\nexports.getFaviconIconConfig = getFaviconIconConfig;\n\nfunction getChromeIconConfig(config) {\n  var _a;\n\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n\n  if (typeof ((_a = config.android) === null || _a === void 0 ? void 0 : _a.icon) === 'string') {\n    return validate(config.android.icon);\n  }\n\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n\n  return null;\n}\n\nexports.getChromeIconConfig = getChromeIconConfig;\n\nfunction ensurePWAConfig(appJSON) {\n  var config = applyWebDefaults(appJSON);\n  return config;\n}\n\nfunction isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nfunction createPWAManifestFromWebConfig(config) {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n\n  var manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url: typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin\n  };\n\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase();\n  }\n\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase();\n  }\n\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n\n  return manifest;\n}\n\nexports.createPWAManifestFromWebConfig = createPWAManifestFromWebConfig;","map":{"version":3,"sources":["../src/Manifest.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getNameFromConfig,\n  getWebOutputPath,\n} from '@expo/config';\n\nimport { IconOptions, Manifest, PWAConfig } from './Manifest.types';\n\n// Use root to work better with create-react-app\nconst DEFAULT_LANGUAGE_ISO_CODE = `en`;\nconst DEFAULT_DISPLAY = 'standalone';\nconst DEFAULT_STATUS_BAR = 'black-translucent';\nconst DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\n// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation: string): string | undefined {\n  if (orientation && typeof orientation === 'string') {\n    const webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return undefined;\n}\n\nfunction sanitizePublicPath(publicPath: unknown): string {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\n\nexport function getConfigForPWA(projectRoot: string): PWAConfig {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  return ensurePWAConfig(exp);\n}\n\nfunction applyWebDefaults(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  // For RN CLI support\n  // @ts-ignore: expo object doesn't exist on ExpoConfig\n  const appManifest = appJSON.expo || appJSON || {};\n  const { web: webManifest = {}, splash = {}, ios = {}, android = {} } = appManifest;\n  const { build: webBuild = {}, webDangerous = {}, meta = {} } = webManifest;\n  const { apple = {} } = meta;\n\n  // rn-cli apps use a displayName value as well.\n  const { appName, webName } = getNameFromConfig(appJSON);\n\n  const languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  const buildOutputPath = getWebOutputPath(appJSON);\n  const publicPath = sanitizePublicPath(webManifest.publicPath);\n  const primaryColor = appManifest.primaryColor;\n  const description = appManifest.description;\n  // The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\n  const webThemeColor = webManifest.themeColor || primaryColor;\n  const dir = webManifest.dir;\n  const shortName = webManifest.shortName || webName;\n  const display = webManifest.display || DEFAULT_DISPLAY;\n  const startUrl = webManifest.startUrl;\n  const { scope, crossorigin } = webManifest;\n  const barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n\n  const orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n\n  /**\n   * **Splash screen background color**\n   * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n   * The background_color should be the same color as the load page,\n   * to provide a smooth transition from the splash screen to your app.\n   */\n  const backgroundColor = webManifest.backgroundColor || splash.backgroundColor; // No default background color\n\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n   * Specifies a boolean value that hints for the user agent to indicate\n   * to the user that the specified native applications (see below) are recommended over the website.\n   * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n   *\n   * >> The banner won't show up if the app is already installed:\n   * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n   */\n  const preferRelatedApplications =\n    webManifest.preferRelatedApplications === undefined\n      ? DEFAULT_PREFER_RELATED_APPLICATIONS\n      : webManifest.preferRelatedApplications;\n\n  const relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n\n  return {\n    ...appManifest,\n    name: appName,\n    description,\n    primaryColor,\n    // Ensure these objects exist\n    ios: {\n      ...ios,\n    },\n    android: {\n      ...android,\n    },\n    web: {\n      ...webManifest,\n      meta: {\n        ...meta,\n        apple: {\n          ...apple,\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle,\n        },\n      },\n      build: {\n        ...webBuild,\n        output: buildOutputPath,\n        publicPath,\n      },\n      dangerous: webDangerous,\n      scope,\n      crossorigin,\n      description,\n      preferRelatedApplications,\n      relatedApplications,\n      startUrl,\n      shortName,\n      display,\n      orientation,\n      dir,\n      barStyle,\n      backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName,\n    },\n  };\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality — like the native app version of the website.\n */\nfunction inferWebRelatedApplicationsFromConfig({ web = {}, ios = {}, android = {} }: any) {\n  const relatedApplications = web.relatedApplications || [];\n\n  const { bundleIdentifier, appStoreUrl } = ios;\n  if (bundleIdentifier) {\n    const PLATFORM_ITUNES = 'itunes';\n    const iosApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_ITUNES\n    );\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier,\n      });\n    }\n  }\n\n  const { package: androidPackage, playStoreUrl } = android;\n  if (androidPackage) {\n    const PLATFORM_PLAY = 'play';\n    const alreadyHasAndroidApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_PLAY\n    );\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || `http://play.google.com/store/apps/details?id=${androidPackage}`,\n        id: androidPackage,\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nexport function getSafariStartupImageConfig(config: ExpoConfig): IconOptions | null {\n  // enforce no defaults\n  const splashScreenObject = (input: any): IconOptions | null => {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor,\n    };\n  };\n\n  // Allow empty objects\n  if (isObject(config.web?.splash)) {\n    return splashScreenObject(config.web?.splash);\n  }\n  if (isObject(config.ios?.splash)) {\n    return splashScreenObject(config.ios?.splash);\n  }\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n  return null;\n}\n\nexport function getSafariIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.ios?.icon === 'string') {\n    return validate(config.ios.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getFaviconIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // If the favicon is set but empty, we assume that the user does not want us to generate a favicon\n  if (typeof config.web?.favicon === 'string') {\n    // Empty string can be used to disable favicon generation.\n    if (!config.web?.favicon) {\n      return null;\n    }\n    return validate(config.web.favicon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getChromeIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.android?.icon === 'string') {\n    return validate(config.android.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nfunction ensurePWAConfig(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  const config = applyWebDefaults(appJSON);\n  return config;\n}\n\nfunction isObject(item: any): item is Record<any, any> {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nexport function createPWAManifestFromWebConfig(config?: ExpoConfig['web']): Manifest {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n\n  const manifest: Manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url:\n      typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin,\n  };\n\n  // Browser will default to auto\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase() as any;\n  }\n\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase() as any;\n  }\n\n  // Avoid defining an empty array, or setting prefer_related_applications to true when no applications are defined.\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n\n  return manifest;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}