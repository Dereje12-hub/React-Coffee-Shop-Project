{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOriginalStackFrame = void 0;\n\nvar code_frame_1 = require(\"@babel/code-frame\");\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar source_map_1 = require(\"source-map\");\n\nfunction getSourcePath(source) {\n  if (source.startsWith('webpack:///')) {\n    return source.substring(11);\n  }\n\n  if (source.startsWith('webpack://_N_E/')) {\n    return source.substring(15);\n  }\n\n  if (source.startsWith('webpack://')) {\n    return source.substring(10);\n  }\n\n  return source;\n}\n\nfunction findOriginalSourcePositionAndContent(webpackSource, position) {\n  var _a, _b, _c, consumer, sourcePosition, sourceContent;\n\n  return _regeneratorRuntime.async(function findOriginalSourcePositionAndContent$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(new source_map_1.SourceMapConsumer(webpackSource.map()));\n\n        case 2:\n          consumer = _context.sent;\n          _context.prev = 3;\n          sourcePosition = consumer.originalPositionFor({\n            line: position.line,\n            column: (_a = position.column) !== null && _a !== void 0 ? _a : 0\n          });\n\n          if (sourcePosition.source) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", null);\n\n        case 7:\n          sourceContent = (_b = consumer.sourceContentFor(sourcePosition.source, true)) !== null && _b !== void 0 ? _b : null;\n          return _context.abrupt(\"return\", {\n            sourcePosition: sourcePosition,\n            sourceContent: sourceContent\n          });\n\n        case 9:\n          _context.prev = 9;\n          (_c = consumer.destroy) === null || _c === void 0 ? void 0 : _c.call(consumer);\n          return _context.finish(9);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3,, 9, 12]], Promise);\n}\n\nfunction createOriginalStackFrame(_ref) {\n  var line, column, source, modulePath, rootDirectory, frame, frameNodeModules, _a, _b, _c, result, sourcePosition, sourceContent, filePath, originalFrame, originalCodeFrame;\n\n  return _regeneratorRuntime.async(function createOriginalStackFrame$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          line = _ref.line, column = _ref.column, source = _ref.source, modulePath = _ref.modulePath, rootDirectory = _ref.rootDirectory, frame = _ref.frame, frameNodeModules = _ref.frameNodeModules;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(findOriginalSourcePositionAndContent(source, {\n            line: line,\n            column: column\n          }));\n\n        case 3:\n          result = _context2.sent;\n\n          if (!(result === null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 6:\n          sourcePosition = result.sourcePosition, sourceContent = result.sourceContent;\n\n          if (sourcePosition.source) {\n            _context2.next = 9;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 9:\n          filePath = path_1.default.resolve(rootDirectory, modulePath || getSourcePath(sourcePosition.source));\n          originalFrame = {\n            file: sourceContent ? path_1.default.relative(rootDirectory, filePath) : sourcePosition.source,\n            lineNumber: sourcePosition.line,\n            column: sourcePosition.column,\n            methodName: frame.methodName,\n            arguments: []\n          };\n          originalCodeFrame = (frameNodeModules || !((_b = (_a = originalFrame.file) === null || _a === void 0 ? void 0 : _a.includes('node_modules')) !== null && _b !== void 0 ? _b : true)) && sourceContent && sourcePosition.line ? code_frame_1.codeFrameColumns(sourceContent, {\n            start: {\n              line: sourcePosition.line,\n              column: (_c = sourcePosition.column) !== null && _c !== void 0 ? _c : 0\n            }\n          }, {\n            forceColor: true\n          }) : null;\n          return _context2.abrupt(\"return\", {\n            originalStackFrame: originalFrame,\n            originalCodeFrame: originalCodeFrame\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.createOriginalStackFrame = createOriginalStackFrame;","map":{"version":3,"sources":["../../../src/plugins/ExpectedErrors/createOriginalStackFrame.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2021 Vercel, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/vercel/next.js/blob/1552b8341e5b512a2827485a4a9689cd429c520e/packages/react-dev-overlay/src/middleware.ts#L63-L178\n */\n\nimport { codeFrameColumns } from '@babel/code-frame';\nimport path from 'path';\n// @ts-ignore\nimport { NullableMappedPosition, SourceMapConsumer } from 'source-map';\nimport { StackFrame } from 'stacktrace-parser';\n\nexport type OriginalStackFrameResponse = {\n  originalStackFrame: StackFrame;\n  originalCodeFrame: string | null;\n};\n\nfunction getSourcePath(source: string) {\n  // Webpack prefixes certain source paths with this path\n  if (source.startsWith('webpack:///')) {\n    return source.substring(11);\n  }\n\n  // Make sure library name is filtered out as well\n  if (source.startsWith('webpack://_N_E/')) {\n    return source.substring(15);\n  }\n\n  if (source.startsWith('webpack://')) {\n    return source.substring(10);\n  }\n\n  return source;\n}\n\n// TODO: Use dev-server symbolicator instead\nasync function findOriginalSourcePositionAndContent(\n  webpackSource: any,\n  position: { line: number; column: number | null }\n) {\n  const consumer = await new SourceMapConsumer(webpackSource.map());\n  try {\n    const sourcePosition: NullableMappedPosition = consumer.originalPositionFor({\n      line: position.line,\n      column: position.column ?? 0,\n    });\n\n    if (!sourcePosition.source) {\n      return null;\n    }\n\n    const sourceContent: string | null =\n      consumer.sourceContentFor(sourcePosition.source, /* returnNullOnMissing */ true) ?? null;\n\n    return {\n      sourcePosition,\n      sourceContent,\n    };\n  } finally {\n    // @ts-ignore: unexpected type\n    consumer.destroy?.();\n  }\n}\n\nexport async function createOriginalStackFrame({\n  line,\n  column,\n  source,\n  modulePath,\n  rootDirectory,\n  frame,\n  frameNodeModules,\n}: {\n  line: number;\n  column: number | null;\n  source: any;\n  modulePath?: string;\n  rootDirectory: string;\n  frameNodeModules?: boolean;\n  frame: any;\n}): Promise<OriginalStackFrameResponse | null> {\n  const result = await findOriginalSourcePositionAndContent(source, {\n    line,\n    column,\n  });\n\n  if (result === null) {\n    return null;\n  }\n\n  const { sourcePosition, sourceContent } = result;\n\n  if (!sourcePosition.source) {\n    return null;\n  }\n\n  const filePath = path.resolve(rootDirectory, modulePath || getSourcePath(sourcePosition.source));\n\n  const originalFrame: StackFrame = {\n    file: sourceContent ? path.relative(rootDirectory, filePath) : sourcePosition.source,\n    lineNumber: sourcePosition.line,\n    column: sourcePosition.column,\n    methodName: frame.methodName, // TODO: resolve original method name (?)\n    arguments: [],\n  };\n\n  const originalCodeFrame: string | null =\n    (frameNodeModules || !(originalFrame.file?.includes('node_modules') ?? true)) &&\n    sourceContent &&\n    sourcePosition.line\n      ? (codeFrameColumns(\n          sourceContent,\n          {\n            start: {\n              line: sourcePosition.line,\n              column: sourcePosition.column ?? 0,\n            },\n          },\n          { forceColor: true }\n        ) as string)\n      : null;\n\n  return {\n    originalStackFrame: originalFrame,\n    originalCodeFrame,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}