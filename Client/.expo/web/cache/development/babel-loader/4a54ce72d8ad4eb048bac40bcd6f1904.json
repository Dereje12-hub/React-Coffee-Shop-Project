{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModulesPaths = void 0;\n\nvar find_yarn_workspace_root_1 = __importDefault(require(\"find-yarn-workspace-root\"));\n\nvar path_1 = __importDefault(require(\"path\"));\n\nfunction getModulesPaths(projectRoot) {\n  var paths = [];\n  var workspaceRoot = find_yarn_workspace_root_1.default(path_1.default.resolve(projectRoot));\n\n  if (workspaceRoot) {\n    paths.push(path_1.default.resolve(projectRoot));\n    paths.push(path_1.default.resolve(workspaceRoot, 'node_modules'));\n  }\n\n  return paths;\n}\n\nexports.getModulesPaths = getModulesPaths;","map":{"version":3,"sources":["../src/getModulesPaths.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,0BAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,SAAgB,eAAhB,CAAgC,WAAhC,EAAmD;AACjD,MAAM,KAAK,GAAa,EAAxB;AAIA,MAAM,aAAa,GAAG,0BAAA,CAAA,OAAA,CAAkB,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,WAAb,CAAlB,CAAtB;;AACA,MAAI,aAAJ,EAAmB;AACjB,IAAA,KAAK,CAAC,IAAN,CAAW,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,WAAb,CAAX;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,aAAb,EAA4B,cAA5B,CAAX;AACD;;AAED,SAAO,KAAP;AACD;;AAZD,OAAA,CAAA,eAAA,GAAA,eAAA","sourcesContent":["import findWorkspaceRoot from 'find-yarn-workspace-root';\nimport path from 'path';\n\nexport function getModulesPaths(projectRoot: string): string[] {\n  const paths: string[] = [];\n\n  // Only add the project root if it's not the current working directory\n  // this minimizes the chance of Metro resolver breaking on new Node.js versions.\n  const workspaceRoot = findWorkspaceRoot(path.resolve(projectRoot)); // Absolute path or null\n  if (workspaceRoot) {\n    paths.push(path.resolve(projectRoot));\n    paths.push(path.resolve(workspaceRoot, 'node_modules'));\n  }\n\n  return paths;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}