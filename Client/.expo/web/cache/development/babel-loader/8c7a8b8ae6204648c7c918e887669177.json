{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeAssetsPlugin = void 0;\n\nvar NativeAssetResolver_1 = require(\"./NativeAssetResolver\");\n\nvar NativeAssetsPlugin = function () {\n  function NativeAssetsPlugin(config) {\n    _classCallCheck(this, NativeAssetsPlugin);\n\n    this.config = config;\n  }\n\n  _createClass(NativeAssetsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var resolver = new NativeAssetResolver_1.NativeAssetResolver(this.config, compiler);\n\n      if (!compiler.options.module) {\n        compiler.options.module = {\n          rules: []\n        };\n      }\n\n      compiler.options.module.rules.push({\n        test: resolver.config.test,\n        use: [{\n          loader: require.resolve(\"./loader.cjs\"),\n          options: {\n            platforms: this.config.platforms,\n            assetExtensions: this.config.assetExtensions,\n            persist: this.config.persist\n          }\n        }]\n      });\n\n      if (!compiler.options.resolve) {\n        compiler.options.resolve = {};\n      }\n\n      compiler.options.resolve.plugins = (compiler.options.resolve.plugins || []).concat(resolver);\n    }\n  }]);\n\n  return NativeAssetsPlugin;\n}();\n\nexports.NativeAssetsPlugin = NativeAssetsPlugin;","map":{"version":3,"sources":["../../../src/plugins/NativeAssetsPlugin/NativeAssetsPlugin.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,IAAA,qBAAA,GAAA,OAAA,yBAAA;;IAKa,kB;AACX,8BAAoB,MAApB,EAA6E;AAAA;;AAAzD,SAAA,MAAA,GAAA,MAAA;AAA6D;;;;WAEjF,eAAM,QAAN,EAAwB;AACtB,UAAM,QAAQ,GAAG,IAAI,qBAAA,CAAA,mBAAJ,CAAwB,KAAK,MAA7B,EAAqC,QAArC,CAAjB;;AAEA,UAAI,CAAC,QAAQ,CAAC,OAAT,CAAiB,MAAtB,EAA8B;AAC5B,QAAA,QAAQ,CAAC,OAAT,CAAiB,MAAjB,GAA0B;AACxB,UAAA,KAAK,EAAE;AADiB,SAA1B;AAGD;;AAED,MAAA,QAAQ,CAAC,OAAT,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,IAA9B,CAAmC;AACjC,QAAA,IAAI,EAAE,QAAQ,CAAC,MAAT,CAAgB,IADW;AAEjC,QAAA,GAAG,EAAE,CACH;AACE,UAAA,MAAM,EAAE,OAAO,CAAC,OAAR,gBADV;AAEE,UAAA,OAAO,EAAE;AACP,YAAA,SAAS,EAAE,KAAK,MAAL,CAAY,SADhB;AAEP,YAAA,eAAe,EAAE,KAAK,MAAL,CAAY,eAFtB;AAGP,YAAA,OAAO,EAAE,KAAK,MAAL,CAAY;AAHd;AAFX,SADG;AAF4B,OAAnC;;AAcA,UAAI,CAAC,QAAQ,CAAC,OAAT,CAAiB,OAAtB,EAA+B;AAC7B,QAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,GAA2B,EAA3B;AACD;;AAED,MAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,OAAzB,GAAmC,CAAC,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,OAAzB,IAAoC,EAArC,EAAyC,MAAzC,CAAgD,QAAhD,CAAnC;AACD;;;;;;AA/BH,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["import { Compiler, Plugin } from 'webpack';\n\nimport { NativeAssetResolver, NativeAssetResolverConfig } from './NativeAssetResolver';\n\n/**\n * Convert any asset type to a JS code block that uses React Native's AssetRegistry module.\n */\nexport class NativeAssetsPlugin implements Plugin {\n  constructor(private config: NativeAssetResolverConfig & { persist?: boolean }) {}\n\n  apply(compiler: Compiler) {\n    const resolver = new NativeAssetResolver(this.config, compiler);\n\n    if (!compiler.options.module) {\n      compiler.options.module = {\n        rules: [],\n      };\n    }\n\n    compiler.options.module.rules.push({\n      test: resolver.config.test,\n      use: [\n        {\n          loader: require.resolve('./loader.cjs'),\n          options: {\n            platforms: this.config.platforms,\n            assetExtensions: this.config.assetExtensions,\n            persist: this.config.persist,\n          },\n        },\n      ],\n    });\n\n    if (!compiler.options.resolve) {\n      compiler.options.resolve = {};\n    }\n\n    compiler.options.resolve.plugins = (compiler.options.resolve.plugins || []).concat(resolver);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}