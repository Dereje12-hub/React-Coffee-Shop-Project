{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"@babel/runtime/helpers/toArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAppDelegateHeaderFilePath = getAppDelegateHeaderFilePath;\nexports.getAppDelegateFilePath = getAppDelegateFilePath;\nexports.getAppDelegateObjcHeaderFilePath = getAppDelegateObjcHeaderFilePath;\nexports.getFileInfo = getFileInfo;\nexports.getAppDelegate = getAppDelegate;\nexports.getSourceRoot = getSourceRoot;\nexports.findSchemePaths = findSchemePaths;\nexports.findSchemeNames = findSchemeNames;\nexports.getAllXcodeProjectPaths = getAllXcodeProjectPaths;\nexports.getXcodeProjectPath = getXcodeProjectPath;\nexports.getAllPBXProjectPaths = getAllPBXProjectPaths;\nexports.getPBXProjectPath = getPBXProjectPath;\nexports.getAllInfoPlistPaths = getAllInfoPlistPaths;\nexports.getInfoPlistPath = getInfoPlistPath;\nexports.getAllEntitlementsPaths = getAllEntitlementsPaths;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.getSupportingPath = getSupportingPath;\nexports.getExpoPlistPath = getExpoPlistPath;\n\nfunction _fsExtra() {\n  var data = require(\"fs-extra\");\n\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _glob() {\n  var data = require(\"glob\");\n\n  _glob = function _glob() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  var data = _interopRequireWildcard(require(\"path\"));\n\n  path = function path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _errors() {\n  var data = require(\"../utils/errors\");\n\n  _errors = function _errors() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _warnings() {\n  var data = require(\"../utils/warnings\");\n\n  _warnings = function _warnings() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\nfunction getAppDelegateHeaderFilePath(projectRoot) {\n  var _ref = (0, _glob().sync)('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref2 = _toArray(_ref),\n      using = _ref2[0],\n      extra = _ref2.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate header at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAppDelegateFilePath(projectRoot) {\n  var _ref3 = (0, _glob().sync)('ios/*/AppDelegate.@(m|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref4 = _toArray(_ref3),\n      using = _ref4[0],\n      extra = _ref4.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAppDelegateObjcHeaderFilePath(projectRoot) {\n  var _ref5 = (0, _glob().sync)('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }),\n      _ref6 = _toArray(_ref5),\n      using = _ref6[0],\n      extra = _ref6.slice(1);\n\n  if (!using) {\n    throw new (_errors().UnexpectedError)(\"Could not locate a valid AppDelegate.h at root: \\\"\" + projectRoot + \"\\\"\");\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath) {\n  var extension = path().extname(filePath);\n\n  switch (extension) {\n    case '.m':\n    case '.h':\n      return 'objc';\n\n    case '.swift':\n      return 'swift';\n\n    default:\n      throw new (_errors().UnexpectedError)(\"Unexpected iOS file extension: \" + extension);\n  }\n}\n\nfunction getFileInfo(filePath) {\n  return {\n    path: path().normalize(filePath),\n    contents: (0, _fsExtra().readFileSync)(filePath, 'utf8'),\n    language: getLanguage(filePath)\n  };\n}\n\nfunction getAppDelegate(projectRoot) {\n  var filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nfunction getSourceRoot(projectRoot) {\n  var appDelegate = getAppDelegate(projectRoot);\n  return path().dirname(appDelegate.path);\n}\n\nfunction findSchemePaths(projectRoot) {\n  return (0, _glob().sync)('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n}\n\nfunction findSchemeNames(projectRoot) {\n  var schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(function (schemePath) {\n    return path().basename(schemePath).split('.')[0];\n  });\n}\n\nfunction getAllXcodeProjectPaths(projectRoot) {\n  var iosFolder = 'ios';\n  var pbxprojPaths = (0, _glob().sync)('**/*.xcodeproj', {\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).filter(function (project) {\n    return !/test|example|sample/i.test(project) || path().dirname(project) === iosFolder;\n  }).sort(function (project) {\n    return path().dirname(project) === iosFolder ? -1 : 1;\n  }).sort();\n\n  if (!pbxprojPaths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return pbxprojPaths.map(function (value) {\n    return path().join(projectRoot, value);\n  });\n}\n\nfunction getXcodeProjectPath(projectRoot) {\n  var _getAllXcodeProjectPa = getAllXcodeProjectPaths(projectRoot),\n      _getAllXcodeProjectPa2 = _toArray(_getAllXcodeProjectPa),\n      using = _getAllXcodeProjectPa2[0],\n      extra = _getAllXcodeProjectPa2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllPBXProjectPaths(projectRoot) {\n  var projectPaths = getAllXcodeProjectPaths(projectRoot);\n  var paths = projectPaths.map(function (value) {\n    return path().join(value, 'project.pbxproj');\n  }).filter(function (value) {\n    return (0, _fsExtra().pathExistsSync)(value);\n  });\n\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nfunction getPBXProjectPath(projectRoot) {\n  var _getAllPBXProjectPath = getAllPBXProjectPaths(projectRoot),\n      _getAllPBXProjectPath2 = _toArray(_getAllPBXProjectPath),\n      using = _getAllPBXProjectPath2[0],\n      extra = _getAllPBXProjectPath2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllInfoPlistPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  }).sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  if (!paths.length) {\n    throw new (_errors().UnexpectedError)(\"Failed to locate Info.plist files relative to path \\\"\" + projectRoot + \"\\\".\");\n  }\n\n  return paths;\n}\n\nfunction getInfoPlistPath(projectRoot) {\n  var _getAllInfoPlistPaths = getAllInfoPlistPaths(projectRoot),\n      _getAllInfoPlistPaths2 = _toArray(_getAllInfoPlistPaths),\n      using = _getAllInfoPlistPaths2[0],\n      extra = _getAllInfoPlistPaths2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using;\n}\n\nfunction getAllEntitlementsPaths(projectRoot) {\n  var paths = (0, _glob().sync)('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths\n  });\n  return paths;\n}\n\nfunction getEntitlementsPath(projectRoot) {\n  var _getAllEntitlementsPa = getAllEntitlementsPaths(projectRoot),\n      _getAllEntitlementsPa2 = _toArray(_getAllEntitlementsPa),\n      using = _getAllEntitlementsPa2[0],\n      extra = _getAllEntitlementsPa2.slice(1);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'entitlements',\n      fileName: '*.entitlements',\n      projectRoot: projectRoot,\n      using: using,\n      extra: extra\n    });\n  }\n\n  return using !== null && using !== void 0 ? using : null;\n}\n\nfunction getSupportingPath(projectRoot) {\n  return path().resolve(projectRoot, 'ios', path().basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nfunction getExpoPlistPath(projectRoot) {\n  var supportingPath = getSupportingPath(projectRoot);\n  return path().join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles(_ref7) {\n  var tag = _ref7.tag,\n      fileName = _ref7.fileName,\n      projectRoot = _ref7.projectRoot,\n      using = _ref7.using,\n      extra = _ref7.extra;\n  var usingPath = projectRoot ? path().relative(projectRoot, using) : using;\n  var extraPaths = projectRoot ? extra.map(function (v) {\n    return path().relative(projectRoot, v);\n  }) : extra;\n  (0, _warnings().addWarningIOS)(\"paths-\" + tag, \"Found multiple \" + fileName + \" file paths, using \\\"\" + usingPath + \"\\\". Ignored paths: \" + JSON.stringify(extraPaths));\n}","map":{"version":3,"sources":["../../src/ios/Paths.ts"],"names":["ignoredPaths","absolute","cwd","ignore","UnexpectedError","extra","warnMultipleFiles","tag","fileName","projectRoot","using","extension","path","contents","language","getLanguage","filePath","getAppDelegateFilePath","getFileInfo","appDelegate","getAppDelegate","schemePaths","findSchemePaths","schemePath","iosFolder","pbxprojPaths","project","value","getAllXcodeProjectPaths","projectPaths","paths","getAllPBXProjectPaths","a","b","getAllInfoPlistPaths","getAllEntitlementsPaths","getSourceRoot","supportingPath","getSupportingPath","usingPath","extraPaths","v","JSON"],"mappings":"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","sourcesContent":["import { pathExistsSync, readFileSync } from 'fs-extra';\nimport { sync as globSync } from 'glob';\nimport * as path from 'path';\n\nimport { UnexpectedError } from '../utils/errors';\nimport { addWarningIOS } from '../utils/warnings';\n\nconst ignoredPaths = ['**/@(Carthage|Pods|vendor|node_modules)/**'];\n\ninterface ProjectFile<L extends string = string> {\n  path: string;\n  language: L;\n  contents: string;\n}\n\nexport type AppDelegateProjectFile = ProjectFile<'objc' | 'swift'>;\n\nexport function getAppDelegateHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(\n      `Could not locate a valid AppDelegate header at root: \"${projectRoot}\"`\n    );\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-header',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.@(m|swift)', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate',\n      fileName: 'AppDelegate',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAppDelegateObjcHeaderFilePath(projectRoot: string): string {\n  const [using, ...extra] = globSync('ios/*/AppDelegate.h', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n\n  if (!using) {\n    throw new UnexpectedError(`Could not locate a valid AppDelegate.h at root: \"${projectRoot}\"`);\n  }\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'app-delegate-objc-header',\n      fileName: 'AppDelegate.h',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nfunction getLanguage(filePath: string): 'objc' | 'swift' {\n  const extension = path.extname(filePath);\n  switch (extension) {\n    case '.m':\n    case '.h':\n      return 'objc';\n    case '.swift':\n      return 'swift';\n    default:\n      throw new UnexpectedError(`Unexpected iOS file extension: ${extension}`);\n  }\n}\n\nexport function getFileInfo(filePath: string) {\n  return {\n    path: path.normalize(filePath),\n    contents: readFileSync(filePath, 'utf8'),\n    language: getLanguage(filePath),\n  };\n}\n\nexport function getAppDelegate(projectRoot: string): AppDelegateProjectFile {\n  const filePath = getAppDelegateFilePath(projectRoot);\n  return getFileInfo(filePath);\n}\n\nexport function getSourceRoot(projectRoot: string): string {\n  const appDelegate = getAppDelegate(projectRoot);\n  return path.dirname(appDelegate.path);\n}\n\nexport function findSchemePaths(projectRoot: string): string[] {\n  return globSync('ios/*.xcodeproj/xcshareddata/xcschemes/*.xcscheme', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n}\n\nexport function findSchemeNames(projectRoot: string): string[] {\n  const schemePaths = findSchemePaths(projectRoot);\n  return schemePaths.map(schemePath => path.basename(schemePath).split('.')[0]);\n}\n\nexport function getAllXcodeProjectPaths(projectRoot: string): string[] {\n  const iosFolder = 'ios';\n  const pbxprojPaths = globSync('**/*.xcodeproj', { cwd: projectRoot, ignore: ignoredPaths })\n    .filter(project => !/test|example|sample/i.test(project) || path.dirname(project) === iosFolder)\n    .sort(project => (path.dirname(project) === iosFolder ? -1 : 1))\n    // sort alphabetically to ensure this works the same across different devices (Fail in CI (linux) without this)\n    .sort();\n\n  if (!pbxprojPaths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return pbxprojPaths.map(value => path.join(projectRoot, value));\n}\n\n/**\n * Get the pbxproj for the given path\n */\nexport function getXcodeProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllXcodeProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'xcodeproj',\n      fileName: '*.xcodeproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllPBXProjectPaths(projectRoot: string): string[] {\n  const projectPaths = getAllXcodeProjectPaths(projectRoot);\n  const paths = projectPaths\n    .map(value => path.join(value, 'project.pbxproj'))\n    .filter(value => pathExistsSync(value));\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate the ios/*.xcodeproj/project.pbxproj files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getPBXProjectPath(projectRoot: string): string {\n  const [using, ...extra] = getAllPBXProjectPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'project-pbxproj',\n      fileName: 'project.pbxproj',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllInfoPlistPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/Info.plist', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  }).sort(\n    // longer name means more suffixes, we want the shortest possible one to be first.\n    (a, b) => a.length - b.length\n  );\n\n  if (!paths.length) {\n    throw new UnexpectedError(\n      `Failed to locate Info.plist files relative to path \"${projectRoot}\".`\n    );\n  }\n  return paths;\n}\n\nexport function getInfoPlistPath(projectRoot: string): string {\n  const [using, ...extra] = getAllInfoPlistPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'info-plist',\n      fileName: 'Info.plist',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using;\n}\n\nexport function getAllEntitlementsPaths(projectRoot: string): string[] {\n  const paths = globSync('ios/*/*.entitlements', {\n    absolute: true,\n    cwd: projectRoot,\n    ignore: ignoredPaths,\n  });\n  return paths;\n}\n\n/**\n * Get the entitlements file path if it exists.\n *\n * @param projectRoot\n */\nexport function getEntitlementsPath(projectRoot: string): string | null {\n  const [using, ...extra] = getAllEntitlementsPaths(projectRoot);\n\n  if (extra.length) {\n    warnMultipleFiles({\n      tag: 'entitlements',\n      fileName: '*.entitlements',\n      projectRoot,\n      using,\n      extra,\n    });\n  }\n\n  return using ?? null;\n}\n\nexport function getSupportingPath(projectRoot: string): string {\n  return path.resolve(projectRoot, 'ios', path.basename(getSourceRoot(projectRoot)), 'Supporting');\n}\n\nexport function getExpoPlistPath(projectRoot: string): string {\n  const supportingPath = getSupportingPath(projectRoot);\n  return path.join(supportingPath, 'Expo.plist');\n}\n\nfunction warnMultipleFiles({\n  tag,\n  fileName,\n  projectRoot,\n  using,\n  extra,\n}: {\n  tag: string;\n  fileName: string;\n  projectRoot?: string;\n  using: string;\n  extra: string[];\n}) {\n  const usingPath = projectRoot ? path.relative(projectRoot, using) : using;\n  const extraPaths = projectRoot ? extra.map(v => path.relative(projectRoot, v)) : extra;\n  addWarningIOS(\n    `paths-${tag}`,\n    `Found multiple ${fileName} file paths, using \"${usingPath}\". Ignored paths: ${JSON.stringify(\n      extraPaths\n    )}`\n  );\n}\n"]},"metadata":{},"sourceType":"script"}