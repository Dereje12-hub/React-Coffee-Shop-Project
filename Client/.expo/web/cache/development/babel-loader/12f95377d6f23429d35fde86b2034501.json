{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCacheKey = exports.cacheKeyParts = void 0;\n\nvar crypto_1 = __importDefault(require(\"crypto\"));\n\nvar fs_1 = require(\"fs\");\n\nexports.cacheKeyParts = [fs_1.readFileSync(__filename), process.env.EXPO_METRO_CACHE_KEY_VERSION || '3.3.0'];\n\nfunction getCacheKey() {\n  var key = crypto_1.default.createHash('md5');\n  exports.cacheKeyParts.forEach(function (part) {\n    return key.update(part);\n  });\n  return key.digest('hex');\n}\n\nexports.getCacheKey = getCacheKey;","map":{"version":3,"sources":["../../src/transformer/getCacheKey.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEa,OAAA,CAAA,aAAA,GAAgB,CAC3B,IAAA,CAAA,YAAA,CAAa,UAAb,CAD2B,EAI3B,OAAO,CAAC,GAAR,CAAY,4BAAZ,IAA4C,OAJjB,CAAhB;;AASb,SAAgB,WAAhB,GAA2B;AACzB,MAAM,GAAG,GAAG,QAAA,CAAA,OAAA,CAAO,UAAP,CAAkB,KAAlB,CAAZ;AACA,EAAA,OAAA,CAAA,aAAA,CAAc,OAAd,CAAsB,UAAA,IAAI;AAAA,WAAI,GAAG,CAAC,MAAJ,CAAW,IAAX,CAAJ;AAAA,GAA1B;AACA,SAAO,GAAG,CAAC,MAAJ,CAAW,KAAX,CAAP;AACD;;AAJD,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import crypto from 'crypto';\nimport { readFileSync } from 'fs';\n\nexport const cacheKeyParts = [\n  readFileSync(__filename),\n  // Since babel-preset-fbjs cannot be safely resolved relative to the\n  // project root, use this environment variable that we define earlier.\n  process.env.EXPO_METRO_CACHE_KEY_VERSION || '3.3.0',\n  //   require('babel-preset-fbjs/package.json').version,\n];\n\n// Matches upstream\nexport function getCacheKey(): string {\n  const key = crypto.createHash('md5');\n  cacheKeyParts.forEach(part => key.update(part));\n  return key.digest('hex');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}