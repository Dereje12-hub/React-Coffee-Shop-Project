{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomerOrderType = function CustomerOrderType(_ref) {\n  var COTTP = _ref.COTTP;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setCoffeeType = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coffeeList = _useState4[0],\n      setCoffeList = _useState4[1];\n\n  useEffect(function () {\n    Axios.get('http://localhost:4000/order/coffee').then(function (response) {\n      console.log(response.data);\n      setCoffeList(response.data);\n    });\n  }, []);\n\n  var handleCoffeePrice = function handleCoffeePrice(e) {\n    setCoffeeType(e.target.value);\n    console.log(e);\n  };\n\n  return _jsxs(\"div\", {\n    children: [_jsx(Button, {\n      className: styles.buttons,\n      onPress: function onPress() {\n        return COTTP(type);\n      },\n      title: \" Coffee \",\n      color: \"brown\"\n    }), _jsx(View, {\n      children: _jsx(DropdownCoffee, {\n        style: styles.fontSize,\n        coffee: \"Choose coffee ?\",\n        options: coffeeList,\n        price: type,\n        onChange: handleCoffeePrice\n      })\n    }), _jsxs(\"h5\", {\n      children: [\"Price: \", type]\n    })]\n  });\n};\n\nvar DropdownCoffee = function DropdownCoffee(_ref2) {\n  var type = _ref2.type,\n      price = _ref2.price,\n      options = _ref2.options,\n      onChange = _ref2.onChange;\n  return _jsxs(\"label\", {\n    children: [type, _jsx(\"select\", {\n      price: price,\n      onChange: onChange,\n      children: options.map(function (option) {\n        return _jsx(\"option\", {\n          value: option.price.toString(),\n          children: option.type\n        }, option.id);\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fontSize: {\n    fontSize: 200,\n    fontWeight: 'bold',\n    margin: 200\n  },\n  buttons: {\n    width: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'bottom',\n    paddingVertical: 12,\n    paddingHorizontal: 100,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  }\n});\nexport default CustomerOrderType;","map":{"version":3,"sources":["C:/Users/Dereje/Documents/React-CoffeeShop-Project/Client/src/Components/CustomerOrder/CustomerOrderType.js"],"names":["React","useEffect","useState","Axios","CustomerOrderType","COTTP","type","setCoffeeType","coffeeList","setCoffeList","get","then","response","console","log","data","handleCoffeePrice","e","target","value","styles","buttons","fontSize","DropdownCoffee","price","options","onChange","map","option","toString","id","StyleSheet","create","body","flex","justifyContent","alignItems","fontWeight","margin","width","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  //Pressable,\r\n  Text,\r\n  Button,\r\n  View,\r\n\r\n} from 'react-native';\r\nimport Axios from 'axios'\r\n\r\n//COTTP means customer order type to parent\r\n//\r\nconst CustomerOrderType = ({ COTTP }) => {\r\n\r\n  const [type, setCoffeeType] = useState(\"\");\r\n  //const [tea, setTea] = useState(\"\");\r\n  const [coffeeList, setCoffeList] = useState([])\r\n   //const [teaList, setTeaList] = useState([])\r\n\r\n\r\n    //const callOrderCoffeeList = () => {\r\n      //   Axios\r\n      //       .get('http://localhost:4000/order/coffeeSize')\r\n      //       .then((response) => response.data)\r\n      //       .then(response => {\r\n\r\n      //           console.log(\"inside getOrderCoffeeList\")\r\n      //           console.log(response.data);\r\n      //   });\r\n      // }\r\n\r\n      useEffect(() => {\r\n          Axios.get('http://localhost:4000/order/coffee').then((response) => {\r\n            console.log(response.data);\r\n            setCoffeList(response.data)\r\n        });\r\n      }, []);\r\n\r\n\r\n  const handleCoffeePrice = (e) => {\r\n     setCoffeeType(e.target.value);\r\n     console.log(e);\r\n     //typeToOrder.setOrderType(type);\r\n   };\r\n\r\n  return (\r\n    <div>\r\n           <Button\r\n            className={styles.buttons}\r\n            onPress={()=>COTTP(type)}\r\n            title=\" Coffee \"\r\n            color=\"brown\"\r\n          />\r\n           <View><DropdownCoffee\r\n                style={styles.fontSize}\r\n                coffee=\"Choose coffee ?\"\r\n                options={coffeeList}\r\n                price={type}\r\n                onChange={ handleCoffeePrice\r\n                     } />\r\n        </View> \r\n        <h5>Price: {type}</h5>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst DropdownCoffee = ({ type, price, options, onChange }) => {\r\n  return (\r\n    <label>\r\n      {type}\r\n      <select price={price} onChange={onChange}>\r\n        {options.map((option) => (\r\n          <option key={option.id} value={option.price.toString()} >\r\n            {option.type}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n fontSize: {\r\n    fontSize: 200,\r\n    fontWeight: 'bold',\r\n    margin: 200,\r\n  },\r\n\r\n  buttons: {\r\n    width: \"100%\",\r\n    alignItems: 'center',\r\n    justifyContent: 'bottom',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 100,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n\r\n})\r\n\r\nexport default CustomerOrderType;"]},"metadata":{},"sourceType":"module"}