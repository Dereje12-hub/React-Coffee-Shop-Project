{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction withNodeMocks(webpackConfig) {\n  if (typeof webpackConfig.target === 'string' && ['electron', 'electron-main', 'node'].includes(webpackConfig.target)) {\n    return webpackConfig;\n  }\n\n  webpackConfig.node = _objectSpread({\n    module: 'empty',\n    dgram: 'empty',\n    dns: 'mock',\n    fs: 'empty',\n    http2: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty'\n  }, webpackConfig.node || {});\n  return webpackConfig;\n}\n\nexports.default = withNodeMocks;","map":{"version":3,"sources":["../../src/addons/withNodeMocks.ts"],"names":[],"mappings":";;;;;;;;;;;;AASA,SAAwB,aAAxB,CAAsC,aAAtC,EAAqE;AACnE,MACE,OAAO,aAAa,CAAC,MAArB,KAAgC,QAAhC,IACA,CAAC,UAAD,EAAa,eAAb,EAA8B,MAA9B,EAAsC,QAAtC,CAA+C,aAAa,CAAC,MAA7D,CAFF,EAGE;AACA,WAAO,aAAP;AACD;;AAED,EAAA,aAAa,CAAC,IAAd;AACE,IAAA,MAAM,EAAE,OADV;AAEE,IAAA,KAAK,EAAE,OAFT;AAGE,IAAA,GAAG,EAAE,MAHP;AAIE,IAAA,EAAE,EAAE,OAJN;AAKE,IAAA,KAAK,EAAE,OALT;AAME,IAAA,GAAG,EAAE,OANP;AAOE,IAAA,GAAG,EAAE,OAPP;AAQE,IAAA,aAAa,EAAE;AARjB,KASM,aAAa,CAAC,IAAd,IAAsB,EAT5B;AAYA,SAAO,aAAP;AACD;;AArBD,OAAA,CAAA,OAAA,GAAA,aAAA","sourcesContent":["import { AnyConfiguration } from '../types';\n\n/**\n * Some libraries import Node modules but don't use them in the browser.\n * Tell Webpack to provide empty mocks for them so importing them works.\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @category addons\n */\nexport default function withNodeMocks(webpackConfig: AnyConfiguration): AnyConfiguration {\n  if (\n    typeof webpackConfig.target === 'string' &&\n    ['electron', 'electron-main', 'node'].includes(webpackConfig.target)\n  ) {\n    return webpackConfig;\n  }\n\n  webpackConfig.node = {\n    module: 'empty',\n    dgram: 'empty',\n    dns: 'mock',\n    fs: 'empty',\n    http2: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty',\n    ...(webpackConfig.node || {}),\n  };\n\n  return webpackConfig;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}