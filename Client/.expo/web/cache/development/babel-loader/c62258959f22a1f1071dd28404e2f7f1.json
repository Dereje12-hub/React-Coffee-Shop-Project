{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getModuleBuildError_1 = require(\"./getModuleBuildError\");\n\nvar ExpectedErrorsPlugin = function () {\n  function ExpectedErrorsPlugin() {\n    _classCallCheck(this, ExpectedErrorsPlugin);\n  }\n\n  _createClass(ExpectedErrorsPlugin, [{\n    key: \"parseErrorsAsync\",\n    value: function parseErrorsAsync(compilation, errors) {\n      return Promise.all(errors.map(function _callee(error) {\n        var parsed;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(getModuleBuildError_1.getModuleBuildError(compilation, error));\n\n              case 3:\n                parsed = _context.sent;\n                return _context.abrupt(\"return\", parsed === false ? error : parsed);\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                return _context.abrupt(\"return\", error);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      }));\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(this.constructor.name, function (compilation) {\n        compilation.hooks.afterSeal.tapPromise(_this.constructor.name, function _callee2() {\n          var _a, _b;\n\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!((_a = compilation.warnings) === null || _a === void 0 ? void 0 : _a.length)) {\n                    _context2.next = 4;\n                    break;\n                  }\n\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(_this.parseErrorsAsync(compilation, compilation.warnings));\n\n                case 3:\n                  compilation.warnings = _context2.sent;\n\n                case 4:\n                  if (!((_b = compilation.errors) === null || _b === void 0 ? void 0 : _b.length)) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 7;\n                  return _regeneratorRuntime.awrap(_this.parseErrorsAsync(compilation, compilation.errors));\n\n                case 7:\n                  compilation.errors = _context2.sent;\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      });\n    }\n  }]);\n\n  return ExpectedErrorsPlugin;\n}();\n\nexports.default = ExpectedErrorsPlugin;","map":{"version":3,"sources":["../../../src/plugins/ExpectedErrors/ExpectedErrorsPlugin.ts"],"names":[],"mappings":";;;;;;;;;;;;AAWA,IAAA,qBAAA,GAAA,OAAA,yBAAA;;IAEqB,oB;;;;;;;WACX,0BAAiB,WAAjB,EAA+D,MAA/D,EAA4E;AAClF,aAAO,OAAO,CAAC,GAAR,CACL,MAAM,CAAC,GAAP,CAAW,iBAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEc,qBAAA,CAAA,mBAAA,CAAoB,WAApB,EAAiC,KAAjC,CAFd;;AAAA;AAED,gBAAA,MAFC;AAAA,iDAGA,MAAM,KAAK,KAAX,GAAmB,KAAnB,GAA2B,MAH3B;;AAAA;AAAA;AAAA;AAKP,gBAAA,OAAO,CAAC,GAAR;AALO,iDAMA,KANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX,CADK,CAAP;AAWD;;;WAED,eAAM,QAAN,EAAgC;AAAA;;AAC9B,MAAA,QAAQ,CAAC,KAAT,CAAe,WAAf,CAA2B,GAA3B,CAA+B,KAAK,WAAL,CAAiB,IAAhD,EAAsD,UAAA,WAAW,EAAG;AAClE,QAAA,WAAW,CAAC,KAAZ,CAAkB,SAAlB,CAA4B,UAA5B,CAAuC,KAAI,CAAC,WAAL,CAAiB,IAAxD,EAA8D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAExD,CAAA,EAAA,GAAA,WAAW,CAAC,QAAZ,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,MAFkC;AAAA;AAAA;AAAA;;AAAA;AAAA,mDAG7B,KAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,WAAW,CAAC,QAA/C,CAH6B;;AAAA;AAG1D,kBAAA,WAAW,CAAC,QAH8C;;AAAA;AAAA,wBAOxD,CAAA,EAAA,GAAA,WAAW,CAAC,MAAZ,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,MAPoC;AAAA;AAAA;AAAA;;AAAA;AAAA,mDAQ/B,KAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,WAAW,CAAC,MAA/C,CAR+B;;AAAA;AAQ1D,kBAAA,WAAW,CAAC,MAR8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAWD,OAZD;AAaD;;;;;;AA7BH,OAAA,CAAA,OAAA,GAAA,oBAAA","sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2021 Vercel, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/vercel/next.js/blob/1552b8341e5b512a2827485a4a9689cd429c520e/packages/next/build/webpack/plugins/wellknown-errors-plugin/index.ts\n */\nimport webpack from 'webpack';\n\nimport { getModuleBuildError } from './getModuleBuildError';\n\nexport default class ExpectedErrorsPlugin {\n  private parseErrorsAsync(compilation: webpack.compilation.Compilation, errors: any[]) {\n    return Promise.all(\n      errors.map(async error => {\n        try {\n          const parsed = await getModuleBuildError(compilation, error);\n          return parsed === false ? error : parsed;\n        } catch (e) {\n          console.log(e);\n          return error;\n        }\n      })\n    );\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap(this.constructor.name, compilation => {\n      compilation.hooks.afterSeal.tapPromise(this.constructor.name, async () => {\n        // Warnings\n        if (compilation.warnings?.length) {\n          compilation.warnings = await this.parseErrorsAsync(compilation, compilation.warnings);\n        }\n\n        // Errors\n        if (compilation.errors?.length) {\n          compilation.errors = await this.parseErrorsAsync(compilation, compilation.errors);\n        }\n      });\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}