{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyPermissions = applyPermissions;\nexports.createPermissionsPlugin = createPermissionsPlugin;\n\nfunction _debug() {\n  var data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function _debug() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar debug = (0, _debug().default)('config-plugins:ios:permissions');\n\nfunction applyPermissions(defaults, permissions, infoPlist) {\n  var entries = Object.entries(defaults);\n\n  if (entries.length === 0) {\n    debug(\"No defaults provided: \" + JSON.stringify(permissions));\n  }\n\n  for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n    var _ref = _entries[_i];\n\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var permission = _ref2[0];\n    var description = _ref2[1];\n\n    if (permissions[permission] === false) {\n      debug(\"Deleting \\\"\" + permission + \"\\\"\");\n      delete infoPlist[permission];\n    } else {\n      infoPlist[permission] = permissions[permission] || infoPlist[permission] || description;\n      debug(\"Setting \\\"\" + permission + \"\\\" to \\\"\" + infoPlist[permission] + \"\\\"\");\n    }\n  }\n\n  return infoPlist;\n}\n\nfunction createPermissionsPlugin(defaults, name) {\n  var withIosPermissions = function withIosPermissions(config, permissions) {\n    return (0, _iosPlugins().withInfoPlist)(config, function _callee(config) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config.modResults = applyPermissions(defaults, permissions, config.modResults);\n              return _context.abrupt(\"return\", config);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  if (name) {\n    Object.defineProperty(withIosPermissions, 'name', {\n      value: name\n    });\n  }\n\n  return withIosPermissions;\n}","map":{"version":3,"sources":["../../src/ios/Permissions.ts"],"names":["debug","entries","Object","JSON","permissions","infoPlist","permission","withIosPermissions","config","applyPermissions","value","name"],"mappings":";;;;;;;;;;;;AAAA,SAAA,MAAA,GAAA;AAAA,MAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAAA,EAAA,MAAA,GAAA,kBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAGA,SAAA,WAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,0BAAA;;AAAA,EAAA,WAAA,GAAA,uBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;;;;;;;AAGA,IAAMA,KAAK,GAAG,CAAA,GAAA,MAAA,GAAA,OAAA,EAAd,gCAAc,CAAd;;AAEO,SAAA,gBAAA,CAAA,QAAA,EAAA,WAAA,EAAA,SAAA,EAIM;AACX,MAAMC,OAAO,GAAGC,MAAM,CAANA,OAAAA,CAAhB,QAAgBA,CAAhB;;AACA,MAAID,OAAO,CAAPA,MAAAA,KAAJ,CAAA,EAA0B;AACxBD,IAAAA,KAAK,4BAA0BG,IAAI,CAAJA,SAAAA,CAA/BH,WAA+BG,CAA1B,CAALH;AACD;;AACD,8BAAA,OAAA,8BAAiD;AAAA;;AAAA;;AAAA,QAAtC,UAAsC;AAAA,QAAjD,WAAiD;;AAC/C,QAAII,WAAW,CAAXA,UAAW,CAAXA,KAAJ,KAAA,EAAuC;AACrCJ,MAAAA,KAAK,iBAALA,UAAK,QAALA;AACA,aAAOK,SAAS,CAAhB,UAAgB,CAAhB;AAFF,KAAA,MAGO;AACLA,MAAAA,SAAS,CAATA,UAAS,CAATA,GAAwBD,WAAW,CAAXA,UAAW,CAAXA,IAA2BC,SAAS,CAApCD,UAAoC,CAApCA,IAAxBC,WAAAA;AACAL,MAAAA,KAAK,gBAAaM,UAAb,gBAAgCD,SAAS,CAA9CL,UAA8C,CAAzC,QAALA;AACD;AACF;;AACD,SAAA,SAAA;AACD;;AAOM,SAAA,uBAAA,CAAA,QAAA,EAAA,IAAA,EAE8B;AACnC,MAAMO,kBAAoF,GAAG,SAAvFA,kBAAuF,CAAA,MAAA,EAAA,WAAA;AAAA,WAI3F,CAAA,GAAA,WAAA,GAAA,aAAA,EAAA,MAAA,EAAsB,iBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,cAAAA,MAAM,CAANA,UAAAA,GAAoBC,gBAAgB,CAAA,QAAA,EAAA,WAAA,EAAwBD,MAAM,CAAlEA,UAAoC,CAApCA;AADoB,+CAEpB,MAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB,CAJ2F;AAAA,GAA7F;;AAQA,MAAA,IAAA,EAAU;AACRN,IAAAA,MAAM,CAANA,cAAAA,CAAAA,kBAAAA,EAAAA,MAAAA,EAAkD;AAChDQ,MAAAA,KAAK,EAAEC;AADyC,KAAlDT;AAGD;;AACD,SAAA,kBAAA;AACD","sourcesContent":["import Debug from 'debug';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withInfoPlist } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nconst debug = Debug('config-plugins:ios:permissions');\n\nexport function applyPermissions<Defaults extends Record<string, string> = Record<string, string>>(\n  defaults: Defaults,\n  permissions: Partial<Record<keyof Defaults, string | false>>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const entries = Object.entries(defaults);\n  if (entries.length === 0) {\n    debug(`No defaults provided: ${JSON.stringify(permissions)}`);\n  }\n  for (const [permission, description] of entries) {\n    if (permissions[permission] === false) {\n      debug(`Deleting \"${permission}\"`);\n      delete infoPlist[permission];\n    } else {\n      infoPlist[permission] = permissions[permission] || infoPlist[permission] || description;\n      debug(`Setting \"${permission}\" to \"${infoPlist[permission]}\"`);\n    }\n  }\n  return infoPlist;\n}\n\n/**\n * Helper method for creating mods to apply default permissions.\n *\n * @param action\n */\nexport function createPermissionsPlugin<\n  Defaults extends Record<string, string> = Record<string, string>\n>(defaults: Defaults, name?: string) {\n  const withIosPermissions: ConfigPlugin<Record<keyof Defaults, string | undefined | false>> = (\n    config,\n    permissions\n  ) =>\n    withInfoPlist(config, async config => {\n      config.modResults = applyPermissions(defaults, permissions, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withIosPermissions, 'name', {\n      value: name,\n    });\n  }\n  return withIosPermissions;\n}\n"]},"metadata":{},"sourceType":"script"}