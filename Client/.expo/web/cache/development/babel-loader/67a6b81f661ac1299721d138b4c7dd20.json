{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar serialize_error_1 = require(\"serialize-error\");\n\nvar LogReporter = function () {\n  function LogReporter(logger) {\n    var reportEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, LogReporter);\n\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n  }\n\n  _createClass(LogReporter, [{\n    key: \"update\",\n    value: function update(event) {\n      if (event.error instanceof Error) {\n        event.error = serialize_error_1.serializeError(event.error);\n      }\n\n      this.logger.info({\n        tag: 'metro'\n      }, JSON.stringify(event));\n      this.reportEvent(event);\n    }\n  }]);\n\n  return LogReporter;\n}();\n\nexports.default = LogReporter;","map":{"version":3,"sources":["../src/LogReporter.ts"],"names":[],"mappings":";;;;;;;;;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;IAEqB,W;AACnB,uBAAmB,MAAnB,EAAmF;AAAA,QAA5C,WAA4C,uEAAR,YAAK,CAAG,CAAA;;AAAA;;AAAhE,SAAA,MAAA,GAAA,MAAA;AAAoB,SAAA,WAAA,GAAA,WAAA;AACrC,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACD;;;;WAED,gBAAO,KAAP,EAAiB;AACf,UAAI,KAAK,CAAC,KAAN,YAAuB,KAA3B,EAAkC;AAChC,QAAA,KAAK,CAAC,KAAN,GAAc,iBAAA,CAAA,cAAA,CAAe,KAAK,CAAC,KAArB,CAAd;AACD;;AAED,WAAK,MAAL,CAAY,IAAZ,CAAiB;AAAE,QAAA,GAAG,EAAE;AAAP,OAAjB,EAAmC,IAAI,CAAC,SAAL,CAAe,KAAf,CAAnC;AACA,WAAK,WAAL,CAAiB,KAAjB;AACD;;;;;;AAbH,OAAA,CAAA,OAAA,GAAA,WAAA","sourcesContent":["import Log from '@expo/bunyan';\nimport { serializeError } from 'serialize-error';\n\nexport default class LogReporter {\n  constructor(public logger: Log, public reportEvent: (event: any) => void = () => {}) {\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n  }\n\n  update(event: any) {\n    if (event.error instanceof Error) {\n      event.error = serializeError(event.error);\n    }\n    // TODO(ville): replace xdl.PackagerLogsStream with a reporter to avoid serializing to JSON.\n    this.logger.info({ tag: 'metro' }, JSON.stringify(event));\n    this.reportEvent(event);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}