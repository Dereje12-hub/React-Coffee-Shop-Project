{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar resolve_from_1 = __importDefault(require(\"resolve-from\"));\n\nvar getCacheKey_1 = require(\"./getCacheKey\");\n\nvar transformer = null;\n\nfunction resolveTransformer(projectRoot) {\n  if (transformer) {\n    return transformer;\n  }\n\n  var resolvedPath = resolve_from_1.default.silent(projectRoot, 'metro-react-native-babel-transformer');\n\n  if (!resolvedPath) {\n    throw new Error('Missing package \"metro-react-native-babel-transformer\" in the project. ' + 'This usually means `react-native` is not installed. ' + 'Please verify that dependencies in package.json include \"react-native\" ' + 'and run `yarn` or `npm install`.');\n  }\n\n  transformer = require(resolvedPath);\n  return transformer;\n}\n\nfunction transform(props) {\n  props.options.extendsBabelConfigPath = resolve_from_1.default.silent(props.options.projectRoot, 'babel-preset-expo');\n  return resolveTransformer(props.options.projectRoot).transform(props);\n}\n\nmodule.exports = {\n  getCacheKey: getCacheKey_1.getCacheKey,\n  transform: transform\n};","map":{"version":3,"sources":["../../src/transformer/metro-expo-babel-transformer.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,iBAAA;;AAEA,IAAI,WAAW,GAAQ,IAAvB;;AAEA,SAAS,kBAAT,CAA4B,WAA5B,EAA+C;AAC7C,MAAI,WAAJ,EAAiB;AACf,WAAO,WAAP;AACD;;AACD,MAAM,YAAY,GAAG,cAAA,CAAA,OAAA,CAAY,MAAZ,CAAmB,WAAnB,EAAgC,sCAAhC,CAArB;;AACA,MAAI,CAAC,YAAL,EAAmB;AACjB,UAAM,IAAI,KAAJ,CACJ,4EACE,sDADF,GAEE,yEAFF,GAGE,kCAJE,CAAN;AAMD;;AACD,EAAA,WAAW,GAAG,OAAO,CAAC,YAAD,CAArB;AACA,SAAO,WAAP;AACD;;AAeD,SAAS,SAAT,CAAmB,KAAnB,EAKC;AAEC,EAAA,KAAK,CAAC,OAAN,CAAc,sBAAd,GAAuC,cAAA,CAAA,OAAA,CAAY,MAAZ,CACrC,KAAK,CAAC,OAAN,CAAc,WADuB,EAErC,mBAFqC,CAAvC;AAIA,SAAO,kBAAkB,CAAC,KAAK,CAAC,OAAN,CAAc,WAAf,CAAlB,CAA8C,SAA9C,CAAwD,KAAxD,CAAP;AACD;;AAED,MAAM,CAAC,OAAP,GAAiB;AACf,EAAA,WAAW,EAAX,aAAA,CAAA,WADe;AAEf,EAAA,SAAS,EAAT;AAFe,CAAjB","sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nimport resolveFrom from 'resolve-from';\n\nimport { getCacheKey } from './getCacheKey';\n\nlet transformer: any = null;\n\nfunction resolveTransformer(projectRoot: string) {\n  if (transformer) {\n    return transformer;\n  }\n  const resolvedPath = resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer');\n  if (!resolvedPath) {\n    throw new Error(\n      'Missing package \"metro-react-native-babel-transformer\" in the project. ' +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n  transformer = require(resolvedPath);\n  return transformer;\n}\n\n/**\n * Extends the default `metro-react-native-babel-transformer`\n * and uses babel-preset-expo as the default instead of metro-react-native-babel-preset.\n * This enables users to safely transpile an Expo project without\n * needing to explicitly define a `babel.config.js`\n *\n * @param filename string\n * @param options BabelTransformerOptions\n * @param plugins $PropertyType<BabelCoreOptions, 'plugins'>\n * @param src string\n *\n * @returns\n */\nfunction transform(props: {\n  filename: string;\n  options: Record<string, any> & { projectRoot: string };\n  plugins?: unknown;\n  src: string;\n}) {\n  // Use babel-preset-expo by default if available...\n  props.options.extendsBabelConfigPath = resolveFrom.silent(\n    props.options.projectRoot,\n    'babel-preset-expo'\n  );\n  return resolveTransformer(props.options.projectRoot).transform(props);\n}\n\nmodule.exports = {\n  getCacheKey,\n  transform,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}