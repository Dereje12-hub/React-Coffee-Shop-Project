{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHistoryItem = getHistoryItem;\nexports.addHistoryItem = addHistoryItem;\n\nfunction getHistoryItem(config, name) {\n  var _config$_internal$plu, _config$_internal, _config$_internal$plu2;\n\n  return (_config$_internal$plu = (_config$_internal = config._internal) === null || _config$_internal === void 0 ? void 0 : (_config$_internal$plu2 = _config$_internal.pluginHistory) === null || _config$_internal$plu2 === void 0 ? void 0 : _config$_internal$plu2[name]) !== null && _config$_internal$plu !== void 0 ? _config$_internal$plu : null;\n}\n\nfunction addHistoryItem(config, item) {\n  if (!config._internal) {\n    config._internal = {};\n  }\n\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n\n  config._internal.pluginHistory[item.name] = item;\n  return config;\n}","map":{"version":3,"sources":["../../src/utils/history.ts"],"names":["config","item"],"mappings":";;;;;;;;AAUO,SAAA,cAAA,CAAA,MAAA,EAAA,IAAA,EAGqB;AAAA,MAAA,qBAAA,EAAA,iBAAA,EAAA,sBAAA;;AAC1B,SAAA,CAAA,qBAAA,GAAA,CAAA,iBAAA,GAAOA,MAAM,CAAb,SAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAOA,iBAAAA,CAAP,aAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,sBAAAA,CAAP,IAAOA,CAAP,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA;AACD;;AAEM,SAAA,cAAA,CAAA,MAAA,EAAA,IAAA,EAGO;AACZ,MAAI,CAACA,MAAM,CAAX,SAAA,EAAuB;AACrBA,IAAAA,MAAM,CAANA,SAAAA,GAAAA,EAAAA;AACD;;AACD,MAAI,CAACA,MAAM,CAANA,SAAAA,CAAL,aAAA,EAAqC;AACnCA,IAAAA,MAAM,CAANA,SAAAA,CAAAA,aAAAA,GAAAA,EAAAA;AACD;;AAED,MAAI,CAACC,IAAI,CAAT,OAAA,EAAmB;AACjBA,IAAAA,IAAI,CAAJA,OAAAA,GAAAA,aAAAA;AACD;;AAEDD,EAAAA,MAAM,CAANA,SAAAA,CAAAA,aAAAA,CAA+BC,IAAI,CAAnCD,IAAAA,IAAAA,IAAAA;AAEA,SAAA,MAAA;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ModPlatform } from '../Plugin.types';\n\nexport type PluginHistoryItem = {\n  name: string;\n  version: string;\n  platform?: ModPlatform;\n};\n\nexport function getHistoryItem(\n  config: Pick<ExpoConfig, '_internal'>,\n  name: string\n): PluginHistoryItem | null {\n  return config._internal?.pluginHistory?.[name] ?? null;\n}\n\nexport function addHistoryItem(\n  config: ExpoConfig,\n  item: Omit<PluginHistoryItem, 'version'> & { version?: string }\n): ExpoConfig {\n  if (!config._internal) {\n    config._internal = {};\n  }\n  if (!config._internal.pluginHistory) {\n    config._internal.pluginHistory = {};\n  }\n\n  if (!item.version) {\n    item.version = 'UNVERSIONED';\n  }\n\n  config._internal.pluginHistory[item.name] = item;\n\n  return config;\n}\n"]},"metadata":{},"sourceType":"script"}