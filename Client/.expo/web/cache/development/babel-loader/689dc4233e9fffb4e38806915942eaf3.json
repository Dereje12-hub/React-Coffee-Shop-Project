{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOrientation = getOrientation;\nexports.setAndroidOrientation = setAndroidOrientation;\nexports.withOrientation = exports.SCREEN_ORIENTATION_ATTRIBUTE = void 0;\n\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n\n  _Manifest = function _Manifest() {\n    return data;\n  };\n\n  return data;\n}\n\nvar SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\nexports.SCREEN_ORIENTATION_ATTRIBUTE = SCREEN_ORIENTATION_ATTRIBUTE;\nvar withOrientation = (0, _androidPlugins().createAndroidManifestPlugin)(setAndroidOrientation, 'withOrientation');\nexports.withOrientation = withOrientation;\n\nfunction getOrientation(config) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nfunction setAndroidOrientation(config, androidManifest) {\n  var orientation = getOrientation(config);\n\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  var mainActivity = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] = orientation !== 'default' ? orientation : 'unspecified';\n  return androidManifest;\n}","map":{"version":3,"sources":["../../src/android/Orientation.ts"],"names":["SCREEN_ORIENTATION_ATTRIBUTE","withOrientation","config","orientation","getOrientation","mainActivity"],"mappings":";;;;;;;;;AAEA,SAAA,eAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,8BAAA;;AAAA,EAAA,eAAA,GAAA,2BAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AACA,SAAA,SAAA,GAAA;AAAA,MAAA,IAAA,GAAA,OAAA,cAAA;;AAAA,EAAA,SAAA,GAAA,qBAAA;AAAA,WAAA,IAAA;AAAA,GAAA;;AAAA,SAAA,IAAA;AAAA;;AAEO,IAAMA,4BAA4B,GAAlC,2BAAA;;AAEA,IAAMC,eAAe,GAAG,CAAA,GAAA,eAAA,GAAA,2BAAA,EAAA,qBAAA,EAAxB,iBAAwB,CAAxB;;;AAKA,SAAA,cAAA,CAAA,MAAA,EAAiE;AACtE,SAAO,OAAOC,MAAM,CAAb,WAAA,KAAA,QAAA,GAAyCA,MAAM,CAA/C,WAAA,GAAP,IAAA;AACD;;AAEM,SAAA,qBAAA,CAAA,MAAA,EAAA,eAAA,EAGL;AACA,MAAMC,WAAW,GAAGC,cAAc,CADlC,MACkC,CAAlC;;AAEA,MAAI,CAAJ,WAAA,EAAkB;AAChB,WAAA,eAAA;AACD;;AAED,MAAMC,YAAY,GAAG,CAAA,GAAA,SAAA,GAAA,sBAAA,EAArB,eAAqB,CAArB;AAEAA,EAAAA,YAAY,CAAZA,CAAAA,CAAAA,4BAAAA,IACEF,WAAW,KAAXA,SAAAA,GAAAA,WAAAA,GADFE,aAAAA;AAGA,SAAA,eAAA;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nexport const SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\n\nexport const withOrientation = createAndroidManifestPlugin(\n  setAndroidOrientation,\n  'withOrientation'\n);\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexport function setAndroidOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  androidManifest: AndroidManifest\n) {\n  const orientation = getOrientation(config);\n  // TODO: Remove this if we decide to remove any orientation configuration when not specified\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] =\n    orientation !== 'default' ? orientation : 'unspecified';\n\n  return androidManifest;\n}\n"]},"metadata":{},"sourceType":"script"}