{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar paths_1 = require(\"@expo/config/paths\");\n\nvar env_1 = require(\"./env\");\n\nvar webpack_config_1 = __importDefault(require(\"./webpack.config\"));\n\nfunction createWebpackConfigAsync() {\n  var env,\n      argv,\n      environment,\n      config,\n      _args = arguments;\n  return _regeneratorRuntime.async(function createWebpackConfigAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          env = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n          argv = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n          if (!env.projectRoot) {\n            env.projectRoot = paths_1.getPossibleProjectRoot();\n          }\n\n          if (!env.platform) {\n            env.platform = process.env.EXPO_WEBPACK_PLATFORM;\n          }\n\n          environment = env_1.validateEnvironment(env);\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(webpack_config_1.default(environment, argv));\n\n        case 7:\n          config = _context.sent;\n\n          if (environment.info) {\n            console.warn('environment.info is deprecated');\n          }\n\n          if (!('offline' in environment)) {\n            _context.next = 11;\n            break;\n          }\n\n          throw new Error('The `offline` flag is deprecated. Please setup a service worker for your web project manually.');\n\n        case 11:\n          return _context.abrupt(\"return\", config);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.default = createWebpackConfigAsync;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAGA,IAAA,KAAA,GAAA,OAAA,SAAA;;AAEA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,oBAAA,CAAA;;AASe,SAAe,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,UAAA,GADa,2DACW,EADX;AAEb,UAAA,IAFa,2DAEK,EAFL;;AAIb,cAAI,CAAC,GAAG,CAAC,WAAT,EAAsB;AACpB,YAAA,GAAG,CAAC,WAAJ,GAAkB,OAAA,CAAA,sBAAA,EAAlB;AACD;;AACD,cAAI,CAAC,GAAG,CAAC,QAAT,EAAmB;AAEjB,YAAA,GAAG,CAAC,QAAJ,GAAe,OAAO,CAAC,GAAR,CAAY,qBAA3B;AACD;;AAEK,UAAA,WAZO,GAYoB,KAAA,CAAA,mBAAA,CAAoB,GAApB,CAZpB;AAAA;AAAA,2CAc0C,gBAAA,CAAA,OAAA,CAAc,WAAd,EAA2B,IAA3B,CAd1C;;AAAA;AAcP,UAAA,MAdO;;AAiBb,cAAI,WAAW,CAAC,IAAhB,EAAsB;AACpB,YAAA,OAAO,CAAC,IAAR,CAAa,gCAAb;AACD;;AAnBY,gBAqBT,aAAa,WArBJ;AAAA;AAAA;AAAA;;AAAA,gBAsBL,IAAI,KAAJ,CACJ,gGADI,CAtBK;;AAAA;AAAA,2CA0BN,MA1BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAf,OAAA,CAAA,OAAA,GAAA,wBAAA","sourcesContent":["import { getPossibleProjectRoot } from '@expo/config/paths';\nimport { Configuration } from 'webpack';\n\nimport { validateEnvironment } from './env';\nimport { Arguments, DevConfiguration, Environment, InputEnvironment } from './types';\nimport webpackConfig from './webpack.config';\n\n/**\n * Create the official Webpack config for loading Expo web apps.\n *\n * @param env Environment props used to configure features.\n * @param argv\n * @category default\n */\nexport default async function createWebpackConfigAsync(\n  env: InputEnvironment = {},\n  argv: Arguments = {}\n): Promise<Configuration | DevConfiguration> {\n  if (!env.projectRoot) {\n    env.projectRoot = getPossibleProjectRoot();\n  }\n  if (!env.platform) {\n    // @ts-ignore\n    env.platform = process.env.EXPO_WEBPACK_PLATFORM;\n  }\n\n  const environment: Environment = validateEnvironment(env);\n\n  const config: Configuration | DevConfiguration = await webpackConfig(environment, argv);\n\n  // @ts-ignore: deprecated\n  if (environment.info) {\n    console.warn('environment.info is deprecated');\n  }\n\n  if ('offline' in environment) {\n    throw new Error(\n      'The `offline` flag is deprecated. Please setup a service worker for your web project manually.'\n    );\n  }\n  return config;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}